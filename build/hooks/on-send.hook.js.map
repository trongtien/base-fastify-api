{
  "version": 3,
  "sources": ["../../src/hooks/on-send.hook.ts", "../../src/helper/status-response.helper.ts", "../../src/helper/message.helper.ts"],
  "sourcesContent": ["import type { DoneFuncWithErrOrRes, FastifyReply, FastifyRequest } from 'fastify';\r\nimport { TResponseBase } from '../type/handler.type';\r\nimport { APP_LIST_STATUS_ERROR, APP_STATUS_HTTP } from '../helper/status-response.helper';\r\nimport { APP_MESSAGE } from '../helper/message.helper';\r\n\r\nconst onSendHook = (_: FastifyRequest, __: FastifyReply, payload: any, done: DoneFuncWithErrOrRes): void => {\r\n  const parsePayload = JSON.parse(payload);\r\n  const hasError = parsePayload.http_status && APP_LIST_STATUS_ERROR.includes(parsePayload.http_status);\r\n  /*\r\n   * Check response if error done payload\r\n   * End request\r\n   */\r\n  if (hasError) {\r\n    done(null, payload);\r\n    return;\r\n  }\r\n\r\n  /*\r\n   * Convert request susscess from repose type TResponseBase\r\n   *\r\n   */\r\n  const responseSuccess: TResponseBase = {\r\n    http_status: APP_STATUS_HTTP.SUCCESS,\r\n    message: APP_MESSAGE.SUCCESS,\r\n    data: parsePayload || null,\r\n    error: [],\r\n  };\r\n\r\n  done(null, JSON.stringify(responseSuccess));\r\n};\r\n\r\nexport default onSendHook;\r\n", "export const APP_STATUS_HTTP = Object.freeze({\r\n  SUCCESS: 200,\r\n  BAD_REQUEST: 400,\r\n  SERVER_INTERNAL: 500,\r\n  ACCESS_DENIED: 401,\r\n  NOT_FOUND: 404,\r\n});\r\n\r\nexport const APP_LIST_STATUS_ERROR = [\r\n  APP_STATUS_HTTP.BAD_REQUEST,\r\n  APP_STATUS_HTTP.NOT_FOUND,\r\n  APP_STATUS_HTTP.ACCESS_DENIED,\r\n  APP_STATUS_HTTP.SERVER_INTERNAL,\r\n] as number[];\r\n", "export const APP_MESSAGE = Object.freeze({\r\n  BAD_REQUEST: \"Bad request\",\r\n  SUCCESS: \"Success\",\r\n  SERVER_INTERNAL: \"Server internal\",\r\n  NOT_FOUND: \"Server not found\",\r\n  ACCESS_DENIED: \"Access denied\",\r\n});\r\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAO,IAAMI,EAAkB,OAAO,OAAO,CAC3C,QAAS,IACT,YAAa,IACb,gBAAiB,IACjB,cAAe,IACf,UAAW,GACb,CAAC,EAEYC,EAAwB,CACnCD,EAAgB,YAChBA,EAAgB,UAChBA,EAAgB,cAChBA,EAAgB,eAClB,ECbO,IAAME,EAAc,OAAO,OAAO,CACvC,YAAa,cACb,QAAS,UACT,gBAAiB,kBACjB,UAAW,mBACX,cAAe,eACjB,CAAC,EFDD,IAAMC,EAAa,CAACC,EAAmBC,EAAkBC,EAAcC,IAAqC,CAC1G,IAAMC,EAAe,KAAK,MAAMF,CAAO,EAMvC,GALiBE,EAAa,aAAeC,EAAsB,SAASD,EAAa,WAAW,EAKtF,CACZD,EAAK,KAAMD,CAAO,EAClB,OAOF,IAAMI,EAAiC,CACrC,YAAaC,EAAgB,QAC7B,QAASC,EAAY,QACrB,KAAMJ,GAAgB,KACtB,MAAO,CAAC,CACV,EAEAD,EAAK,KAAM,KAAK,UAAUG,CAAe,CAAC,CAC5C,EAEOG,EAAQV",
  "names": ["on_send_hook_exports", "__export", "on_send_hook_default", "__toCommonJS", "APP_STATUS_HTTP", "APP_LIST_STATUS_ERROR", "APP_MESSAGE", "onSendHook", "_", "__", "payload", "done", "parsePayload", "APP_LIST_STATUS_ERROR", "responseSuccess", "APP_STATUS_HTTP", "APP_MESSAGE", "on_send_hook_default"]
}
