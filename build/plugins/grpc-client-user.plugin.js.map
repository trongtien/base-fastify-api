{
  "version": 3,
  "sources": ["../../node_modules/@grpc/grpc-js/src/constants.ts", "../../node_modules/@grpc/grpc-js/package.json", "../../node_modules/@grpc/grpc-js/src/logging.ts", "../../node_modules/@grpc/grpc-js/src/error.ts", "../../node_modules/@grpc/grpc-js/src/metadata.ts", "../../node_modules/@grpc/grpc-js/src/call-credentials.ts", "../../node_modules/@grpc/grpc-js/src/tls-helpers.ts", "../../node_modules/@grpc/grpc-js/src/channel-credentials.ts", "../../node_modules/@grpc/grpc-js/src/load-balancer.ts", "../../node_modules/@grpc/grpc-js/src/service-config.ts", "../../node_modules/@grpc/grpc-js/src/connectivity-state.ts", "../../node_modules/@grpc/grpc-js/src/uri-parser.ts", "../../node_modules/@grpc/grpc-js/src/resolver.ts", "../../node_modules/@grpc/grpc-js/src/picker.ts", "../../node_modules/@grpc/grpc-js/src/backoff-timeout.ts", "../../node_modules/@grpc/grpc-js/src/load-balancer-child-handler.ts", "../../node_modules/@grpc/grpc-js/src/resolving-load-balancer.ts", "../../node_modules/@grpc/grpc-js/src/channel-options.ts", "../../node_modules/@grpc/grpc-js/src/subchannel-address.ts", "../../node_modules/@js-sdsl/ordered-map/dist/cjs/index.js", "../../node_modules/@js-sdsl/.build-data/copied-source/src/container/TreeContainer/Base/TreeNode.ts", "../../node_modules/@js-sdsl/.build-data/copied-source/src/container/ContainerBase/index.ts", "../../node_modules/@js-sdsl/.build-data/copied-source/src/utils/throwError.ts", "../../node_modules/@js-sdsl/.build-data/copied-source/src/container/TreeContainer/Base/index.ts", "../../node_modules/@js-sdsl/.build-data/copied-source/src/container/TreeContainer/Base/TreeIterator.ts", "../../node_modules/@js-sdsl/.build-data/copied-source/src/container/TreeContainer/OrderedMap.ts", "../../node_modules/@grpc/grpc-js/src/admin.ts", "../../node_modules/@grpc/grpc-js/src/call.ts", "../../node_modules/@grpc/grpc-js/src/call-interface.ts", "../../node_modules/@grpc/grpc-js/src/client-interceptors.ts", "../../node_modules/@grpc/grpc-js/src/client.ts", "../../node_modules/@grpc/grpc-js/src/make-client.ts", "../../node_modules/lodash.camelcase/index.js", "../../node_modules/@protobufjs/aspromise/index.js", "../../node_modules/@protobufjs/base64/index.js", "../../node_modules/@protobufjs/eventemitter/index.js", "../../node_modules/@protobufjs/float/index.js", "../../node_modules/@protobufjs/inquire/index.js", "../../node_modules/@protobufjs/utf8/index.js", "../../node_modules/@protobufjs/pool/index.js", "../../node_modules/protobufjs/src/util/longbits.js", "../../node_modules/protobufjs/src/util/minimal.js", "../../node_modules/protobufjs/src/writer.js", "../../node_modules/protobufjs/src/writer_buffer.js", "../../node_modules/protobufjs/src/reader.js", "../../node_modules/protobufjs/src/reader_buffer.js", "../../node_modules/protobufjs/src/rpc/service.js", "../../node_modules/protobufjs/src/rpc.js", "../../node_modules/protobufjs/src/roots.js", "../../node_modules/protobufjs/src/index-minimal.js", "../../node_modules/@protobufjs/codegen/index.js", "../../node_modules/@protobufjs/fetch/index.js", "../../node_modules/@protobufjs/path/index.js", "../../node_modules/protobufjs/src/types.js", "../../node_modules/protobufjs/src/field.js", "../../node_modules/protobufjs/src/oneof.js", "../../node_modules/protobufjs/src/namespace.js", "../../node_modules/protobufjs/src/mapfield.js", "../../node_modules/protobufjs/src/method.js", "../../node_modules/protobufjs/src/service.js", "../../node_modules/protobufjs/src/message.js", "../../node_modules/protobufjs/src/decoder.js", "../../node_modules/protobufjs/src/verifier.js", "../../node_modules/protobufjs/src/converter.js", "../../node_modules/protobufjs/src/wrappers.js", "../../node_modules/protobufjs/src/type.js", "../../node_modules/protobufjs/src/root.js", "../../node_modules/protobufjs/src/util.js", "../../node_modules/protobufjs/src/object.js", "../../node_modules/protobufjs/src/enum.js", "../../node_modules/protobufjs/src/encoder.js", "../../node_modules/protobufjs/src/index-light.js", "../../node_modules/protobufjs/src/tokenize.js", "../../node_modules/protobufjs/src/parse.js", "../../node_modules/protobufjs/src/common.js", "../../node_modules/protobufjs/src/index.js", "../../node_modules/protobufjs/index.js", "../../node_modules/protobufjs/google/protobuf/descriptor.json", "../../node_modules/protobufjs/ext/descriptor/index.js", "../../node_modules/protobufjs/google/protobuf/api.json", "../../node_modules/protobufjs/google/protobuf/source_context.json", "../../node_modules/protobufjs/google/protobuf/type.json", "../../node_modules/@grpc/proto-loader/src/util.ts", "../../node_modules/long/umd/index.js", "../../node_modules/@grpc/proto-loader/src/index.ts", "../../node_modules/@grpc/grpc-js/src/channelz.ts", "../../node_modules/@grpc/grpc-js/src/subchannel.ts", "../../node_modules/@grpc/grpc-js/src/resolver-dns.ts", "../../node_modules/@grpc/grpc-js/src/http_proxy.ts", "../../node_modules/@grpc/grpc-js/src/stream-decoder.ts", "../../node_modules/@grpc/grpc-js/src/subchannel-call.ts", "../../node_modules/@grpc/grpc-js/src/call-number.ts", "../../node_modules/@grpc/grpc-js/src/transport.ts", "../../node_modules/@grpc/grpc-js/src/subchannel-pool.ts", "../../node_modules/@grpc/grpc-js/src/filter-stack.ts", "../../node_modules/@grpc/grpc-js/src/compression-algorithms.ts", "../../node_modules/@grpc/grpc-js/src/filter.ts", "../../node_modules/@grpc/grpc-js/src/compression-filter.ts", "../../node_modules/@grpc/grpc-js/src/deadline.ts", "../../node_modules/@grpc/grpc-js/src/control-plane-status.ts", "../../node_modules/@grpc/grpc-js/src/load-balancing-call.ts", "../../node_modules/@grpc/grpc-js/src/resolving-call.ts", "../../node_modules/@grpc/grpc-js/src/retrying-call.ts", "../../node_modules/@grpc/grpc-js/src/subchannel-interface.ts", "../../node_modules/@grpc/grpc-js/src/internal-channel.ts", "../../node_modules/@grpc/grpc-js/src/channel.ts", "../../node_modules/@grpc/grpc-js/src/server-call.ts", "../../node_modules/@grpc/grpc-js/src/server-credentials.ts", "../../node_modules/@grpc/grpc-js/src/server-interceptors.ts", "../../node_modules/@grpc/grpc-js/src/server.ts", "../../node_modules/@grpc/grpc-js/src/status-builder.ts", "../../node_modules/@grpc/grpc-js/src/duration.ts", "../../node_modules/@grpc/grpc-js/src/load-balancer-pick-first.ts", "../../node_modules/@grpc/grpc-js/src/experimental.ts", "../../node_modules/@grpc/grpc-js/src/resolver-uds.ts", "../../node_modules/@grpc/grpc-js/src/resolver-ip.ts", "../../node_modules/@grpc/grpc-js/src/load-balancer-round-robin.ts", "../../node_modules/@grpc/grpc-js/src/load-balancer-outlier-detection.ts", "../../node_modules/@grpc/grpc-js/src/index.ts", "../../node_modules/fastify-plugin/lib/getPluginName.js", "../../node_modules/fastify-plugin/lib/toCamelCase.js", "../../node_modules/fastify-plugin/plugin.js", "../../src/plugins/grpc-client-user.plugin.ts"],
  "sourcesContent": ["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum Status {\n  OK = 0,\n  CANCELLED,\n  UNKNOWN,\n  INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED,\n  NOT_FOUND,\n  ALREADY_EXISTS,\n  PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION,\n  ABORTED,\n  OUT_OF_RANGE,\n  UNIMPLEMENTED,\n  INTERNAL,\n  UNAVAILABLE,\n  DATA_LOSS,\n  UNAUTHENTICATED,\n}\n\nexport enum LogVerbosity {\n  DEBUG = 0,\n  INFO,\n  ERROR,\n  NONE,\n}\n\n/**\n * NOTE: This enum is not currently used in any implemented API in this\n * library. It is included only for type parity with the other implementation.\n */\nexport enum Propagate {\n  DEADLINE = 1,\n  CENSUS_STATS_CONTEXT = 2,\n  CENSUS_TRACING_CONTEXT = 4,\n  CANCELLATION = 8,\n  // https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/propagation_bits.h#L43\n  DEFAULTS = 0xffff |\n    Propagate.DEADLINE |\n    Propagate.CENSUS_STATS_CONTEXT |\n    Propagate.CENSUS_TRACING_CONTEXT |\n    Propagate.CANCELLATION,\n}\n\n// -1 means unlimited\nexport const DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;\n\n// 4 MB default\nexport const DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4 * 1024 * 1024;\n", "{\n  \"name\": \"@grpc/grpc-js\",\n  \"version\": \"1.10.10\",\n  \"description\": \"gRPC Library for Node - pure JS implementation\",\n  \"homepage\": \"https://grpc.io/\",\n  \"repository\": \"https://github.com/grpc/grpc-node/tree/master/packages/grpc-js\",\n  \"main\": \"build/src/index.js\",\n  \"engines\": {\n    \"node\": \">=12.10.0\"\n  },\n  \"keywords\": [],\n  \"author\": {\n    \"name\": \"Google Inc.\"\n  },\n  \"types\": \"build/src/index.d.ts\",\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"@types/gulp\": \"^4.0.17\",\n    \"@types/gulp-mocha\": \"0.0.37\",\n    \"@types/lodash\": \"^4.14.202\",\n    \"@types/mocha\": \"^10.0.6\",\n    \"@types/ncp\": \"^2.0.8\",\n    \"@types/node\": \">=20.11.20\",\n    \"@types/pify\": \"^5.0.4\",\n    \"@types/semver\": \"^7.5.8\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.1.0\",\n    \"@typescript-eslint/parser\": \"^7.1.0\",\n    \"@typescript-eslint/typescript-estree\": \"^7.1.0\",\n    \"clang-format\": \"^1.8.0\",\n    \"eslint\": \"^8.42.0\",\n    \"eslint-config-prettier\": \"^8.8.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"execa\": \"^2.0.3\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-mocha\": \"^6.0.0\",\n    \"lodash\": \"^4.17.21\",\n    \"madge\": \"^5.0.1\",\n    \"mocha-jenkins-reporter\": \"^0.4.1\",\n    \"ncp\": \"^2.0.0\",\n    \"pify\": \"^4.0.1\",\n    \"prettier\": \"^2.8.8\",\n    \"rimraf\": \"^3.0.2\",\n    \"semver\": \"^7.6.0\",\n    \"ts-node\": \"^10.9.2\",\n    \"typescript\": \"^5.3.3\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Google Inc.\"\n    }\n  ],\n  \"scripts\": {\n    \"build\": \"npm run compile\",\n    \"clean\": \"rimraf ./build\",\n    \"compile\": \"tsc -p .\",\n    \"format\": \"clang-format -i -style=\\\"{Language: JavaScript, BasedOnStyle: Google, ColumnLimit: 80}\\\" src/*.ts test/*.ts\",\n    \"lint\": \"eslint src/*.ts test/*.ts\",\n    \"prepare\": \"npm run generate-types && npm run compile\",\n    \"test\": \"gulp test\",\n    \"check\": \"npm run lint\",\n    \"fix\": \"eslint --fix src/*.ts test/*.ts\",\n    \"pretest\": \"npm run generate-types && npm run generate-test-types && npm run compile\",\n    \"posttest\": \"npm run check && madge -c ./build/src\",\n    \"generate-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --includeDirs proto/ --include-dirs test/fixtures/ -O src/generated/ --grpcLib ../index channelz.proto\",\n    \"generate-test-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --include-dirs test/fixtures/ -O test/generated/ --grpcLib ../../src/index test_service.proto\"\n  },\n  \"dependencies\": {\n    \"@grpc/proto-loader\": \"^0.7.13\",\n    \"@js-sdsl/ordered-map\": \"^4.4.2\"\n  },\n  \"files\": [\n    \"src/**/*.ts\",\n    \"build/src/**/*.{js,d.ts,js.map}\",\n    \"proto/*.proto\",\n    \"LICENSE\",\n    \"deps/envoy-api/envoy/api/v2/**/*.proto\",\n    \"deps/envoy-api/envoy/config/**/*.proto\",\n    \"deps/envoy-api/envoy/service/**/*.proto\",\n    \"deps/envoy-api/envoy/type/**/*.proto\",\n    \"deps/udpa/udpa/**/*.proto\",\n    \"deps/googleapis/google/api/*.proto\",\n    \"deps/googleapis/google/rpc/*.proto\",\n    \"deps/protoc-gen-validate/validate/**/*.proto\"\n  ]\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { LogVerbosity } from './constants';\nimport { pid } from 'process';\n\nconst clientVersion = require('../../package.json').version;\n\nconst DEFAULT_LOGGER: Partial<Console> = {\n  error: (message?: any, ...optionalParams: any[]) => {\n    console.error('E ' + message, ...optionalParams);\n  },\n  info: (message?: any, ...optionalParams: any[]) => {\n    console.error('I ' + message, ...optionalParams);\n  },\n  debug: (message?: any, ...optionalParams: any[]) => {\n    console.error('D ' + message, ...optionalParams);\n  },\n};\n\nlet _logger: Partial<Console> = DEFAULT_LOGGER;\nlet _logVerbosity: LogVerbosity = LogVerbosity.ERROR;\n\nconst verbosityString =\n  process.env.GRPC_NODE_VERBOSITY ?? process.env.GRPC_VERBOSITY ?? '';\n\nswitch (verbosityString.toUpperCase()) {\n  case 'DEBUG':\n    _logVerbosity = LogVerbosity.DEBUG;\n    break;\n  case 'INFO':\n    _logVerbosity = LogVerbosity.INFO;\n    break;\n  case 'ERROR':\n    _logVerbosity = LogVerbosity.ERROR;\n    break;\n  case 'NONE':\n    _logVerbosity = LogVerbosity.NONE;\n    break;\n  default:\n  // Ignore any other values\n}\n\nexport const getLogger = (): Partial<Console> => {\n  return _logger;\n};\n\nexport const setLogger = (logger: Partial<Console>): void => {\n  _logger = logger;\n};\n\nexport const setLoggerVerbosity = (verbosity: LogVerbosity): void => {\n  _logVerbosity = verbosity;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const log = (severity: LogVerbosity, ...args: any[]): void => {\n  let logFunction: typeof DEFAULT_LOGGER.error;\n  if (severity >= _logVerbosity) {\n    switch (severity) {\n      case LogVerbosity.DEBUG:\n        logFunction = _logger.debug;\n        break;\n      case LogVerbosity.INFO:\n        logFunction = _logger.info;\n        break;\n      case LogVerbosity.ERROR:\n        logFunction = _logger.error;\n        break;\n    }\n    /* Fall back to _logger.error when other methods are not available for\n     * compatiblity with older behavior that always logged to _logger.error */\n    if (!logFunction) {\n      logFunction = _logger.error;\n    }\n    if (logFunction) {\n      logFunction.bind(_logger)(...args);\n    }\n  }\n};\n\nconst tracersString =\n  process.env.GRPC_NODE_TRACE ?? process.env.GRPC_TRACE ?? '';\nconst enabledTracers = new Set<string>();\nconst disabledTracers = new Set<string>();\nfor (const tracerName of tracersString.split(',')) {\n  if (tracerName.startsWith('-')) {\n    disabledTracers.add(tracerName.substring(1));\n  } else {\n    enabledTracers.add(tracerName);\n  }\n}\nconst allEnabled = enabledTracers.has('all');\n\nexport function trace(\n  severity: LogVerbosity,\n  tracer: string,\n  text: string\n): void {\n  if (isTracerEnabled(tracer)) {\n    log(\n      severity,\n      new Date().toISOString() +\n        ' | v' +\n        clientVersion +\n        ' ' +\n        pid +\n        ' | ' +\n        tracer +\n        ' | ' +\n        text\n    );\n  }\n}\n\nexport function isTracerEnabled(tracer: string): boolean {\n  return (\n    !disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer))\n  );\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport function getErrorMessage(error: unknown): string {\n  if (error instanceof Error) {\n    return error.message;\n  } else {\n    return String(error);\n  }\n}\n\nexport function getErrorCode(error: unknown): number | null {\n  if (\n    typeof error === 'object' &&\n    error !== null &&\n    'code' in error &&\n    typeof (error as Record<string, unknown>).code === 'number'\n  ) {\n    return (error as Record<string, number>).code;\n  } else {\n    return null;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as http2 from 'http2';\nimport { log } from './logging';\nimport { LogVerbosity } from './constants';\nimport { getErrorMessage } from './error';\nconst LEGAL_KEY_REGEX = /^[0-9a-z_.-]+$/;\nconst LEGAL_NON_BINARY_VALUE_REGEX = /^[ -~]*$/;\n\nexport type MetadataValue = string | Buffer;\nexport type MetadataObject = Map<string, MetadataValue[]>;\n\nfunction isLegalKey(key: string): boolean {\n  return LEGAL_KEY_REGEX.test(key);\n}\n\nfunction isLegalNonBinaryValue(value: string): boolean {\n  return LEGAL_NON_BINARY_VALUE_REGEX.test(value);\n}\n\nfunction isBinaryKey(key: string): boolean {\n  return key.endsWith('-bin');\n}\n\nfunction isCustomMetadata(key: string): boolean {\n  return !key.startsWith('grpc-');\n}\n\nfunction normalizeKey(key: string): string {\n  return key.toLowerCase();\n}\n\nfunction validate(key: string, value?: MetadataValue): void {\n  if (!isLegalKey(key)) {\n    throw new Error('Metadata key \"' + key + '\" contains illegal characters');\n  }\n\n  if (value !== null && value !== undefined) {\n    if (isBinaryKey(key)) {\n      if (!Buffer.isBuffer(value)) {\n        throw new Error(\"keys that end with '-bin' must have Buffer values\");\n      }\n    } else {\n      if (Buffer.isBuffer(value)) {\n        throw new Error(\n          \"keys that don't end with '-bin' must have String values\"\n        );\n      }\n      if (!isLegalNonBinaryValue(value)) {\n        throw new Error(\n          'Metadata string value \"' + value + '\" contains illegal characters'\n        );\n      }\n    }\n  }\n}\n\nexport interface MetadataOptions {\n  /* Signal that the request is idempotent. Defaults to false */\n  idempotentRequest?: boolean;\n  /* Signal that the call should not return UNAVAILABLE before it has\n   * started. Defaults to false. */\n  waitForReady?: boolean;\n  /* Signal that the call is cacheable. GRPC is free to use GET verb.\n   * Defaults to false */\n  cacheableRequest?: boolean;\n  /* Signal that the initial metadata should be corked. Defaults to false. */\n  corked?: boolean;\n}\n\n/**\n * A class for storing metadata. Keys are normalized to lowercase ASCII.\n */\nexport class Metadata {\n  protected internalRepr: MetadataObject = new Map<string, MetadataValue[]>();\n  private options: MetadataOptions;\n\n  constructor(options: MetadataOptions = {}) {\n    this.options = options;\n  }\n\n  /**\n   * Sets the given value for the given key by replacing any other values\n   * associated with that key. Normalizes the key.\n   * @param key The key to whose value should be set.\n   * @param value The value to set. Must be a buffer if and only\n   *   if the normalized key ends with '-bin'.\n   */\n  set(key: string, value: MetadataValue): void {\n    key = normalizeKey(key);\n    validate(key, value);\n    this.internalRepr.set(key, [value]);\n  }\n\n  /**\n   * Adds the given value for the given key by appending to a list of previous\n   * values associated with that key. Normalizes the key.\n   * @param key The key for which a new value should be appended.\n   * @param value The value to add. Must be a buffer if and only\n   *   if the normalized key ends with '-bin'.\n   */\n  add(key: string, value: MetadataValue): void {\n    key = normalizeKey(key);\n    validate(key, value);\n\n    const existingValue: MetadataValue[] | undefined =\n      this.internalRepr.get(key);\n\n    if (existingValue === undefined) {\n      this.internalRepr.set(key, [value]);\n    } else {\n      existingValue.push(value);\n    }\n  }\n\n  /**\n   * Removes the given key and any associated values. Normalizes the key.\n   * @param key The key whose values should be removed.\n   */\n  remove(key: string): void {\n    key = normalizeKey(key);\n    // validate(key);\n    this.internalRepr.delete(key);\n  }\n\n  /**\n   * Gets a list of all values associated with the key. Normalizes the key.\n   * @param key The key whose value should be retrieved.\n   * @return A list of values associated with the given key.\n   */\n  get(key: string): MetadataValue[] {\n    key = normalizeKey(key);\n    // validate(key);\n    return this.internalRepr.get(key) || [];\n  }\n\n  /**\n   * Gets a plain object mapping each key to the first value associated with it.\n   * This reflects the most common way that people will want to see metadata.\n   * @return A key/value mapping of the metadata.\n   */\n  getMap(): { [key: string]: MetadataValue } {\n    const result: { [key: string]: MetadataValue } = {};\n\n    for (const [key, values] of this.internalRepr) {\n      if (values.length > 0) {\n        const v = values[0];\n        result[key] = Buffer.isBuffer(v) ? Buffer.from(v) : v;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Clones the metadata object.\n   * @return The newly cloned object.\n   */\n  clone(): Metadata {\n    const newMetadata = new Metadata(this.options);\n    const newInternalRepr = newMetadata.internalRepr;\n\n    for (const [key, value] of this.internalRepr) {\n      const clonedValue: MetadataValue[] = value.map(v => {\n        if (Buffer.isBuffer(v)) {\n          return Buffer.from(v);\n        } else {\n          return v;\n        }\n      });\n\n      newInternalRepr.set(key, clonedValue);\n    }\n\n    return newMetadata;\n  }\n\n  /**\n   * Merges all key-value pairs from a given Metadata object into this one.\n   * If both this object and the given object have values in the same key,\n   * values from the other Metadata object will be appended to this object's\n   * values.\n   * @param other A Metadata object.\n   */\n  merge(other: Metadata): void {\n    for (const [key, values] of other.internalRepr) {\n      const mergedValue: MetadataValue[] = (\n        this.internalRepr.get(key) || []\n      ).concat(values);\n\n      this.internalRepr.set(key, mergedValue);\n    }\n  }\n\n  setOptions(options: MetadataOptions) {\n    this.options = options;\n  }\n\n  getOptions(): MetadataOptions {\n    return this.options;\n  }\n\n  /**\n   * Creates an OutgoingHttpHeaders object that can be used with the http2 API.\n   */\n  toHttp2Headers(): http2.OutgoingHttpHeaders {\n    // NOTE: Node <8.9 formats http2 headers incorrectly.\n    const result: http2.OutgoingHttpHeaders = {};\n\n    for (const [key, values] of this.internalRepr) {\n      // We assume that the user's interaction with this object is limited to\n      // through its public API (i.e. keys and values are already validated).\n      result[key] = values.map(bufToString);\n    }\n\n    return result;\n  }\n\n  /**\n   * This modifies the behavior of JSON.stringify to show an object\n   * representation of the metadata map.\n   */\n  toJSON() {\n    const result: { [key: string]: MetadataValue[] } = {};\n    for (const [key, values] of this.internalRepr) {\n      result[key] = values;\n    }\n    return result;\n  }\n\n  /**\n   * Returns a new Metadata object based fields in a given IncomingHttpHeaders\n   * object.\n   * @param headers An IncomingHttpHeaders object.\n   */\n  static fromHttp2Headers(headers: http2.IncomingHttpHeaders): Metadata {\n    const result = new Metadata();\n    for (const key of Object.keys(headers)) {\n      // Reserved headers (beginning with `:`) are not valid keys.\n      if (key.charAt(0) === ':') {\n        continue;\n      }\n\n      const values = headers[key];\n\n      try {\n        if (isBinaryKey(key)) {\n          if (Array.isArray(values)) {\n            values.forEach(value => {\n              result.add(key, Buffer.from(value, 'base64'));\n            });\n          } else if (values !== undefined) {\n            if (isCustomMetadata(key)) {\n              values.split(',').forEach(v => {\n                result.add(key, Buffer.from(v.trim(), 'base64'));\n              });\n            } else {\n              result.add(key, Buffer.from(values, 'base64'));\n            }\n          }\n        } else {\n          if (Array.isArray(values)) {\n            values.forEach(value => {\n              result.add(key, value);\n            });\n          } else if (values !== undefined) {\n            result.add(key, values);\n          }\n        }\n      } catch (error) {\n        const message = `Failed to add metadata entry ${key}: ${values}. ${getErrorMessage(\n          error\n        )}. For more information see https://github.com/grpc/grpc-node/issues/1173`;\n        log(LogVerbosity.ERROR, message);\n      }\n    }\n\n    return result;\n  }\n}\n\nconst bufToString = (val: string | Buffer): string => {\n  return Buffer.isBuffer(val) ? val.toString('base64') : val;\n};\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Metadata } from './metadata';\n\nexport interface CallMetadataOptions {\n  service_url: string;\n}\n\nexport type CallMetadataGenerator = (\n  options: CallMetadataOptions,\n  cb: (err: Error | null, metadata?: Metadata) => void\n) => void;\n\n// google-auth-library pre-v2.0.0 does not have getRequestHeaders\n// but has getRequestMetadata, which is deprecated in v2.0.0\nexport interface OldOAuth2Client {\n  getRequestMetadata: (\n    url: string,\n    callback: (\n      err: Error | null,\n      headers?: {\n        [index: string]: string;\n      }\n    ) => void\n  ) => void;\n}\n\nexport interface CurrentOAuth2Client {\n  getRequestHeaders: (url?: string) => Promise<{ [index: string]: string }>;\n}\n\nexport type OAuth2Client = OldOAuth2Client | CurrentOAuth2Client;\n\nfunction isCurrentOauth2Client(\n  client: OAuth2Client\n): client is CurrentOAuth2Client {\n  return (\n    'getRequestHeaders' in client &&\n    typeof client.getRequestHeaders === 'function'\n  );\n}\n\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nexport abstract class CallCredentials {\n  /**\n   * Asynchronously generates a new Metadata object.\n   * @param options Options used in generating the Metadata object.\n   */\n  abstract generateMetadata(options: CallMetadataOptions): Promise<Metadata>;\n  /**\n   * Creates a new CallCredentials object from properties of both this and\n   * another CallCredentials object. This object's metadata generator will be\n   * called first.\n   * @param callCredentials The other CallCredentials object.\n   */\n  abstract compose(callCredentials: CallCredentials): CallCredentials;\n\n  /**\n   * Check whether two call credentials objects are equal. Separate\n   * SingleCallCredentials with identical metadata generator functions are\n   * equal.\n   * @param other The other CallCredentials object to compare with.\n   */\n  abstract _equals(other: CallCredentials): boolean;\n\n  /**\n   * Creates a new CallCredentials object from a given function that generates\n   * Metadata objects.\n   * @param metadataGenerator A function that accepts a set of options, and\n   * generates a Metadata object based on these options, which is passed back\n   * to the caller via a supplied (err, metadata) callback.\n   */\n  static createFromMetadataGenerator(\n    metadataGenerator: CallMetadataGenerator\n  ): CallCredentials {\n    return new SingleCallCredentials(metadataGenerator);\n  }\n\n  /**\n   * Create a gRPC credential from a Google credential object.\n   * @param googleCredentials The authentication client to use.\n   * @return The resulting CallCredentials object.\n   */\n  static createFromGoogleCredential(\n    googleCredentials: OAuth2Client\n  ): CallCredentials {\n    return CallCredentials.createFromMetadataGenerator((options, callback) => {\n      let getHeaders: Promise<{ [index: string]: string }>;\n      if (isCurrentOauth2Client(googleCredentials)) {\n        getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n      } else {\n        getHeaders = new Promise((resolve, reject) => {\n          googleCredentials.getRequestMetadata(\n            options.service_url,\n            (err, headers) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n              if (!headers) {\n                reject(new Error('Headers not set by metadata plugin'));\n                return;\n              }\n              resolve(headers);\n            }\n          );\n        });\n      }\n      getHeaders.then(\n        headers => {\n          const metadata = new Metadata();\n          for (const key of Object.keys(headers)) {\n            metadata.add(key, headers[key]);\n          }\n          callback(null, metadata);\n        },\n        err => {\n          callback(err);\n        }\n      );\n    });\n  }\n\n  static createEmpty(): CallCredentials {\n    return new EmptyCallCredentials();\n  }\n}\n\nclass ComposedCallCredentials extends CallCredentials {\n  constructor(private creds: CallCredentials[]) {\n    super();\n  }\n\n  async generateMetadata(options: CallMetadataOptions): Promise<Metadata> {\n    const base: Metadata = new Metadata();\n    const generated: Metadata[] = await Promise.all(\n      this.creds.map(cred => cred.generateMetadata(options))\n    );\n    for (const gen of generated) {\n      base.merge(gen);\n    }\n    return base;\n  }\n\n  compose(other: CallCredentials): CallCredentials {\n    return new ComposedCallCredentials(this.creds.concat([other]));\n  }\n\n  _equals(other: CallCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof ComposedCallCredentials) {\n      return this.creds.every((value, index) =>\n        value._equals(other.creds[index])\n      );\n    } else {\n      return false;\n    }\n  }\n}\n\nclass SingleCallCredentials extends CallCredentials {\n  constructor(private metadataGenerator: CallMetadataGenerator) {\n    super();\n  }\n\n  generateMetadata(options: CallMetadataOptions): Promise<Metadata> {\n    return new Promise<Metadata>((resolve, reject) => {\n      this.metadataGenerator(options, (err, metadata) => {\n        if (metadata !== undefined) {\n          resolve(metadata);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  compose(other: CallCredentials): CallCredentials {\n    return new ComposedCallCredentials([this, other]);\n  }\n\n  _equals(other: CallCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof SingleCallCredentials) {\n      return this.metadataGenerator === other.metadataGenerator;\n    } else {\n      return false;\n    }\n  }\n}\n\nclass EmptyCallCredentials extends CallCredentials {\n  generateMetadata(options: CallMetadataOptions): Promise<Metadata> {\n    return Promise.resolve(new Metadata());\n  }\n\n  compose(other: CallCredentials): CallCredentials {\n    return other;\n  }\n\n  _equals(other: CallCredentials): boolean {\n    return other instanceof EmptyCallCredentials;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as fs from 'fs';\n\nexport const CIPHER_SUITES: string | undefined =\n  process.env.GRPC_SSL_CIPHER_SUITES;\n\nconst DEFAULT_ROOTS_FILE_PATH = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH;\n\nlet defaultRootsData: Buffer | null = null;\n\nexport function getDefaultRootsData(): Buffer | null {\n  if (DEFAULT_ROOTS_FILE_PATH) {\n    if (defaultRootsData === null) {\n      defaultRootsData = fs.readFileSync(DEFAULT_ROOTS_FILE_PATH);\n    }\n    return defaultRootsData;\n  }\n  return null;\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  ConnectionOptions,\n  createSecureContext,\n  PeerCertificate,\n  SecureContext,\n} from 'tls';\n\nimport { CallCredentials } from './call-credentials';\nimport { CIPHER_SUITES, getDefaultRootsData } from './tls-helpers';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction verifyIsBufferOrNull(obj: any, friendlyName: string): void {\n  if (obj && !(obj instanceof Buffer)) {\n    throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n  }\n}\n\n/**\n * A callback that will receive the expected hostname and presented peer\n * certificate as parameters. The callback should return an error to\n * indicate that the presented certificate is considered invalid and\n * otherwise returned undefined.\n */\nexport type CheckServerIdentityCallback = (\n  hostname: string,\n  cert: PeerCertificate\n) => Error | undefined;\n\n/**\n * Additional peer verification options that can be set when creating\n * SSL credentials.\n */\nexport interface VerifyOptions {\n  /**\n   * If set, this callback will be invoked after the usual hostname verification\n   * has been performed on the peer certificate.\n   */\n  checkServerIdentity?: CheckServerIdentityCallback;\n}\n\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\nexport abstract class ChannelCredentials {\n  protected callCredentials: CallCredentials;\n\n  protected constructor(callCredentials?: CallCredentials) {\n    this.callCredentials = callCredentials || CallCredentials.createEmpty();\n  }\n  /**\n   * Returns a copy of this object with the included set of per-call credentials\n   * expanded to include callCredentials.\n   * @param callCredentials A CallCredentials object to associate with this\n   * instance.\n   */\n  abstract compose(callCredentials: CallCredentials): ChannelCredentials;\n\n  /**\n   * Gets the set of per-call credentials associated with this instance.\n   */\n  _getCallCredentials(): CallCredentials {\n    return this.callCredentials;\n  }\n\n  /**\n   * Gets a SecureContext object generated from input parameters if this\n   * instance was created with createSsl, or null if this instance was created\n   * with createInsecure.\n   */\n  abstract _getConnectionOptions(): ConnectionOptions | null;\n\n  /**\n   * Indicates whether this credentials object creates a secure channel.\n   */\n  abstract _isSecure(): boolean;\n\n  /**\n   * Check whether two channel credentials objects are equal. Two secure\n   * credentials are equal if they were constructed with the same parameters.\n   * @param other The other ChannelCredentials Object\n   */\n  abstract _equals(other: ChannelCredentials): boolean;\n\n  /**\n   * Return a new ChannelCredentials instance with a given set of credentials.\n   * The resulting instance can be used to construct a Channel that communicates\n   * over TLS.\n   * @param rootCerts The root certificate data.\n   * @param privateKey The client certificate private key, if available.\n   * @param certChain The client certificate key chain, if available.\n   * @param verifyOptions Additional options to modify certificate verification\n   */\n  static createSsl(\n    rootCerts?: Buffer | null,\n    privateKey?: Buffer | null,\n    certChain?: Buffer | null,\n    verifyOptions?: VerifyOptions\n  ): ChannelCredentials {\n    verifyIsBufferOrNull(rootCerts, 'Root certificate');\n    verifyIsBufferOrNull(privateKey, 'Private key');\n    verifyIsBufferOrNull(certChain, 'Certificate chain');\n    if (privateKey && !certChain) {\n      throw new Error(\n        'Private key must be given with accompanying certificate chain'\n      );\n    }\n    if (!privateKey && certChain) {\n      throw new Error(\n        'Certificate chain must be given with accompanying private key'\n      );\n    }\n    const secureContext = createSecureContext({\n      ca: rootCerts ?? getDefaultRootsData() ?? undefined,\n      key: privateKey ?? undefined,\n      cert: certChain ?? undefined,\n      ciphers: CIPHER_SUITES,\n    });\n    return new SecureChannelCredentialsImpl(secureContext, verifyOptions ?? {});\n  }\n\n  /**\n   * Return a new ChannelCredentials instance with credentials created using\n   * the provided secureContext. The resulting instances can be used to\n   * construct a Channel that communicates over TLS. gRPC will not override\n   * anything in the provided secureContext, so the environment variables\n   * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n   * not be applied.\n   * @param secureContext The return value of tls.createSecureContext()\n   * @param verifyOptions Additional options to modify certificate verification\n   */\n  static createFromSecureContext(\n    secureContext: SecureContext,\n    verifyOptions?: VerifyOptions\n  ): ChannelCredentials {\n    return new SecureChannelCredentialsImpl(secureContext, verifyOptions ?? {});\n  }\n\n  /**\n   * Return a new ChannelCredentials instance with no credentials.\n   */\n  static createInsecure(): ChannelCredentials {\n    return new InsecureChannelCredentialsImpl();\n  }\n}\n\nclass InsecureChannelCredentialsImpl extends ChannelCredentials {\n  constructor() {\n    super();\n  }\n\n  compose(callCredentials: CallCredentials): never {\n    throw new Error('Cannot compose insecure credentials');\n  }\n\n  _getConnectionOptions(): ConnectionOptions | null {\n    return null;\n  }\n  _isSecure(): boolean {\n    return false;\n  }\n  _equals(other: ChannelCredentials): boolean {\n    return other instanceof InsecureChannelCredentialsImpl;\n  }\n}\n\nclass SecureChannelCredentialsImpl extends ChannelCredentials {\n  connectionOptions: ConnectionOptions;\n\n  constructor(\n    private secureContext: SecureContext,\n    private verifyOptions: VerifyOptions\n  ) {\n    super();\n    this.connectionOptions = {\n      secureContext,\n    };\n    // Node asserts that this option is a function, so we cannot pass undefined\n    if (verifyOptions?.checkServerIdentity) {\n      this.connectionOptions.checkServerIdentity =\n        verifyOptions.checkServerIdentity;\n    }\n  }\n\n  compose(callCredentials: CallCredentials): ChannelCredentials {\n    const combinedCallCredentials =\n      this.callCredentials.compose(callCredentials);\n    return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n  }\n\n  _getConnectionOptions(): ConnectionOptions | null {\n    // Copy to prevent callers from mutating this.connectionOptions\n    return { ...this.connectionOptions };\n  }\n  _isSecure(): boolean {\n    return true;\n  }\n  _equals(other: ChannelCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof SecureChannelCredentialsImpl) {\n      return (\n        this.secureContext === other.secureContext &&\n        this.verifyOptions.checkServerIdentity ===\n          other.verifyOptions.checkServerIdentity\n      );\n    } else {\n      return false;\n    }\n  }\n}\n\nclass ComposedChannelCredentialsImpl extends ChannelCredentials {\n  constructor(\n    private channelCredentials: SecureChannelCredentialsImpl,\n    callCreds: CallCredentials\n  ) {\n    super(callCreds);\n  }\n  compose(callCredentials: CallCredentials) {\n    const combinedCallCredentials =\n      this.callCredentials.compose(callCredentials);\n    return new ComposedChannelCredentialsImpl(\n      this.channelCredentials,\n      combinedCallCredentials\n    );\n  }\n\n  _getConnectionOptions(): ConnectionOptions | null {\n    return this.channelCredentials._getConnectionOptions();\n  }\n  _isSecure(): boolean {\n    return true;\n  }\n  _equals(other: ChannelCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof ComposedChannelCredentialsImpl) {\n      return (\n        this.channelCredentials._equals(other.channelCredentials) &&\n        this.callCredentials._equals(other.callCredentials)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelOptions } from './channel-options';\nimport { Endpoint, SubchannelAddress } from './subchannel-address';\nimport { ConnectivityState } from './connectivity-state';\nimport { Picker } from './picker';\nimport type { ChannelRef, SubchannelRef } from './channelz';\nimport { SubchannelInterface } from './subchannel-interface';\nimport { LoadBalancingConfig } from './service-config';\nimport { log } from './logging';\nimport { LogVerbosity } from './constants';\n\n/**\n * A collection of functions associated with a channel that a load balancer\n * can call as necessary.\n */\nexport interface ChannelControlHelper {\n  /**\n   * Returns a subchannel connected to the specified address.\n   * @param subchannelAddress The address to connect to\n   * @param subchannelArgs Extra channel arguments specified by the load balancer\n   */\n  createSubchannel(\n    subchannelAddress: SubchannelAddress,\n    subchannelArgs: ChannelOptions\n  ): SubchannelInterface;\n  /**\n   * Passes a new subchannel picker up to the channel. This is called if either\n   * the connectivity state changes or if a different picker is needed for any\n   * other reason.\n   * @param connectivityState New connectivity state\n   * @param picker New picker\n   */\n  updateState(connectivityState: ConnectivityState, picker: Picker): void;\n  /**\n   * Request new data from the resolver.\n   */\n  requestReresolution(): void;\n  addChannelzChild(child: ChannelRef | SubchannelRef): void;\n  removeChannelzChild(child: ChannelRef | SubchannelRef): void;\n}\n\n/**\n * Create a child ChannelControlHelper that overrides some methods of the\n * parent while letting others pass through to the parent unmodified. This\n * allows other code to create these children without needing to know about\n * all of the methods to be passed through.\n * @param parent\n * @param overrides\n */\nexport function createChildChannelControlHelper(\n  parent: ChannelControlHelper,\n  overrides: Partial<ChannelControlHelper>\n): ChannelControlHelper {\n  return {\n    createSubchannel:\n      overrides.createSubchannel?.bind(overrides) ??\n      parent.createSubchannel.bind(parent),\n    updateState:\n      overrides.updateState?.bind(overrides) ?? parent.updateState.bind(parent),\n    requestReresolution:\n      overrides.requestReresolution?.bind(overrides) ??\n      parent.requestReresolution.bind(parent),\n    addChannelzChild:\n      overrides.addChannelzChild?.bind(overrides) ??\n      parent.addChannelzChild.bind(parent),\n    removeChannelzChild:\n      overrides.removeChannelzChild?.bind(overrides) ??\n      parent.removeChannelzChild.bind(parent),\n  };\n}\n\n/**\n * Tracks one or more connected subchannels and determines which subchannel\n * each request should use.\n */\nexport interface LoadBalancer {\n  /**\n   * Gives the load balancer a new list of addresses to start connecting to.\n   * The load balancer will start establishing connections with the new list,\n   * but will continue using any existing connections until the new connections\n   * are established\n   * @param endpointList The new list of addresses to connect to\n   * @param lbConfig The load balancing config object from the service config,\n   *     if one was provided\n   */\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig,\n    attributes: { [key: string]: unknown }\n  ): void;\n  /**\n   * If the load balancer is currently in the IDLE state, start connecting.\n   */\n  exitIdle(): void;\n  /**\n   * If the load balancer is currently in the CONNECTING or TRANSIENT_FAILURE\n   * state, reset the current connection backoff timeout to its base value and\n   * transition to CONNECTING if in TRANSIENT_FAILURE.\n   */\n  resetBackoff(): void;\n  /**\n   * The load balancer unrefs all of its subchannels and stops calling methods\n   * of its channel control helper.\n   */\n  destroy(): void;\n  /**\n   * Get the type name for this load balancer type. Must be constant across an\n   * entire load balancer implementation class and must match the name that the\n   * balancer implementation class was registered with.\n   */\n  getTypeName(): string;\n}\n\nexport interface LoadBalancerConstructor {\n  new (\n    channelControlHelper: ChannelControlHelper,\n    options: ChannelOptions\n  ): LoadBalancer;\n}\n\nexport interface TypedLoadBalancingConfig {\n  getLoadBalancerName(): string;\n  toJsonObject(): object;\n}\n\nexport interface TypedLoadBalancingConfigConstructor {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any): TypedLoadBalancingConfig;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createFromJson(obj: any): TypedLoadBalancingConfig;\n}\n\nconst registeredLoadBalancerTypes: {\n  [name: string]: {\n    LoadBalancer: LoadBalancerConstructor;\n    LoadBalancingConfig: TypedLoadBalancingConfigConstructor;\n  };\n} = {};\n\nlet defaultLoadBalancerType: string | null = null;\n\nexport function registerLoadBalancerType(\n  typeName: string,\n  loadBalancerType: LoadBalancerConstructor,\n  loadBalancingConfigType: TypedLoadBalancingConfigConstructor\n) {\n  registeredLoadBalancerTypes[typeName] = {\n    LoadBalancer: loadBalancerType,\n    LoadBalancingConfig: loadBalancingConfigType,\n  };\n}\n\nexport function registerDefaultLoadBalancerType(typeName: string) {\n  defaultLoadBalancerType = typeName;\n}\n\nexport function createLoadBalancer(\n  config: TypedLoadBalancingConfig,\n  channelControlHelper: ChannelControlHelper,\n  options: ChannelOptions\n): LoadBalancer | null {\n  const typeName = config.getLoadBalancerName();\n  if (typeName in registeredLoadBalancerTypes) {\n    return new registeredLoadBalancerTypes[typeName].LoadBalancer(\n      channelControlHelper,\n      options\n    );\n  } else {\n    return null;\n  }\n}\n\nexport function isLoadBalancerNameRegistered(typeName: string): boolean {\n  return typeName in registeredLoadBalancerTypes;\n}\n\nexport function parseLoadBalancingConfig(\n  rawConfig: LoadBalancingConfig\n): TypedLoadBalancingConfig {\n  const keys = Object.keys(rawConfig);\n  if (keys.length !== 1) {\n    throw new Error(\n      'Provided load balancing config has multiple conflicting entries'\n    );\n  }\n  const typeName = keys[0];\n  if (typeName in registeredLoadBalancerTypes) {\n    try {\n      return registeredLoadBalancerTypes[\n        typeName\n      ].LoadBalancingConfig.createFromJson(rawConfig[typeName]);\n    } catch (e) {\n      throw new Error(`${typeName}: ${(e as Error).message}`);\n    }\n  } else {\n    throw new Error(`Unrecognized load balancing config name ${typeName}`);\n  }\n}\n\nexport function getDefaultConfig() {\n  if (!defaultLoadBalancerType) {\n    throw new Error('No default load balancer type registered');\n  }\n  return new registeredLoadBalancerTypes[\n    defaultLoadBalancerType\n  ]!.LoadBalancingConfig();\n}\n\nexport function selectLbConfigFromList(\n  configs: LoadBalancingConfig[],\n  fallbackTodefault = false\n): TypedLoadBalancingConfig | null {\n  for (const config of configs) {\n    try {\n      return parseLoadBalancingConfig(config);\n    } catch (e) {\n      log(\n        LogVerbosity.DEBUG,\n        'Config parsing failed with error',\n        (e as Error).message\n      );\n      continue;\n    }\n  }\n  if (fallbackTodefault) {\n    if (defaultLoadBalancerType) {\n      return new registeredLoadBalancerTypes[\n        defaultLoadBalancerType\n      ]!.LoadBalancingConfig();\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* This file implements gRFC A2 and the service config spec:\n * https://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\n * https://github.com/grpc/grpc/blob/master/doc/service_config.md. Each\n * function here takes an object with unknown structure and returns its\n * specific object type if the input has the right structure, and throws an\n * error otherwise. */\n\n/* The any type is purposely used here. All functions validate their input at\n * runtime */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as os from 'os';\nimport { Status } from './constants';\nimport { Duration } from './duration';\n\nexport interface MethodConfigName {\n  service?: string;\n  method?: string;\n}\n\nexport interface RetryPolicy {\n  maxAttempts: number;\n  initialBackoff: string;\n  maxBackoff: string;\n  backoffMultiplier: number;\n  retryableStatusCodes: (Status | string)[];\n}\n\nexport interface HedgingPolicy {\n  maxAttempts: number;\n  hedgingDelay?: string;\n  nonFatalStatusCodes?: (Status | string)[];\n}\n\nexport interface MethodConfig {\n  name: MethodConfigName[];\n  waitForReady?: boolean;\n  timeout?: Duration;\n  maxRequestBytes?: number;\n  maxResponseBytes?: number;\n  retryPolicy?: RetryPolicy;\n  hedgingPolicy?: HedgingPolicy;\n}\n\nexport interface RetryThrottling {\n  maxTokens: number;\n  tokenRatio: number;\n}\n\nexport interface LoadBalancingConfig {\n  [key: string]: object;\n}\n\nexport interface ServiceConfig {\n  loadBalancingPolicy?: string;\n  loadBalancingConfig: LoadBalancingConfig[];\n  methodConfig: MethodConfig[];\n  retryThrottling?: RetryThrottling;\n}\n\nexport interface ServiceConfigCanaryConfig {\n  clientLanguage?: string[];\n  percentage?: number;\n  clientHostname?: string[];\n  serviceConfig: ServiceConfig;\n}\n\n/**\n * Recognizes a number with up to 9 digits after the decimal point, followed by\n * an \"s\", representing a number of seconds.\n */\nconst DURATION_REGEX = /^\\d+(\\.\\d{1,9})?s$/;\n\n/**\n * Client language name used for determining whether this client matches a\n * `ServiceConfigCanaryConfig`'s `clientLanguage` list.\n */\nconst CLIENT_LANGUAGE_STRING = 'node';\n\nfunction validateName(obj: any): MethodConfigName {\n  // In this context, and unset field and '' are considered the same\n  if ('service' in obj && obj.service !== '') {\n    if (typeof obj.service !== 'string') {\n      throw new Error(\n        `Invalid method config name: invalid service: expected type string, got ${typeof obj.service}`\n      );\n    }\n    if ('method' in obj && obj.method !== '') {\n      if (typeof obj.method !== 'string') {\n        throw new Error(\n          `Invalid method config name: invalid method: expected type string, got ${typeof obj.service}`\n        );\n      }\n      return {\n        service: obj.service,\n        method: obj.method,\n      };\n    } else {\n      return {\n        service: obj.service,\n      };\n    }\n  } else {\n    if ('method' in obj && obj.method !== undefined) {\n      throw new Error(\n        `Invalid method config name: method set with empty or unset service`\n      );\n    }\n    return {};\n  }\n}\n\nfunction validateRetryPolicy(obj: any): RetryPolicy {\n  if (\n    !('maxAttempts' in obj) ||\n    !Number.isInteger(obj.maxAttempts) ||\n    obj.maxAttempts < 2\n  ) {\n    throw new Error(\n      'Invalid method config retry policy: maxAttempts must be an integer at least 2'\n    );\n  }\n  if (\n    !('initialBackoff' in obj) ||\n    typeof obj.initialBackoff !== 'string' ||\n    !DURATION_REGEX.test(obj.initialBackoff)\n  ) {\n    throw new Error(\n      'Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer followed by s'\n    );\n  }\n  if (\n    !('maxBackoff' in obj) ||\n    typeof obj.maxBackoff !== 'string' ||\n    !DURATION_REGEX.test(obj.maxBackoff)\n  ) {\n    throw new Error(\n      'Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer followed by s'\n    );\n  }\n  if (\n    !('backoffMultiplier' in obj) ||\n    typeof obj.backoffMultiplier !== 'number' ||\n    obj.backoffMultiplier <= 0\n  ) {\n    throw new Error(\n      'Invalid method config retry policy: backoffMultiplier must be a number greater than 0'\n    );\n  }\n  if (\n    !('retryableStatusCodes' in obj && Array.isArray(obj.retryableStatusCodes))\n  ) {\n    throw new Error(\n      'Invalid method config retry policy: retryableStatusCodes is required'\n    );\n  }\n  if (obj.retryableStatusCodes.length === 0) {\n    throw new Error(\n      'Invalid method config retry policy: retryableStatusCodes must be non-empty'\n    );\n  }\n  for (const value of obj.retryableStatusCodes) {\n    if (typeof value === 'number') {\n      if (!Object.values(Status).includes(value)) {\n        throw new Error(\n          'Invalid method config retry policy: retryableStatusCodes value not in status code range'\n        );\n      }\n    } else if (typeof value === 'string') {\n      if (!Object.values(Status).includes(value.toUpperCase())) {\n        throw new Error(\n          'Invalid method config retry policy: retryableStatusCodes value not a status code name'\n        );\n      }\n    } else {\n      throw new Error(\n        'Invalid method config retry policy: retryableStatusCodes value must be a string or number'\n      );\n    }\n  }\n  return {\n    maxAttempts: obj.maxAttempts,\n    initialBackoff: obj.initialBackoff,\n    maxBackoff: obj.maxBackoff,\n    backoffMultiplier: obj.backoffMultiplier,\n    retryableStatusCodes: obj.retryableStatusCodes,\n  };\n}\n\nfunction validateHedgingPolicy(obj: any): HedgingPolicy {\n  if (\n    !('maxAttempts' in obj) ||\n    !Number.isInteger(obj.maxAttempts) ||\n    obj.maxAttempts < 2\n  ) {\n    throw new Error(\n      'Invalid method config hedging policy: maxAttempts must be an integer at least 2'\n    );\n  }\n  if (\n    'hedgingDelay' in obj &&\n    (typeof obj.hedgingDelay !== 'string' ||\n      !DURATION_REGEX.test(obj.hedgingDelay))\n  ) {\n    throw new Error(\n      'Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s'\n    );\n  }\n  if ('nonFatalStatusCodes' in obj && Array.isArray(obj.nonFatalStatusCodes)) {\n    for (const value of obj.nonFatalStatusCodes) {\n      if (typeof value === 'number') {\n        if (!Object.values(Status).includes(value)) {\n          throw new Error(\n            'Invlid method config hedging policy: nonFatalStatusCodes value not in status code range'\n          );\n        }\n      } else if (typeof value === 'string') {\n        if (!Object.values(Status).includes(value.toUpperCase())) {\n          throw new Error(\n            'Invlid method config hedging policy: nonFatalStatusCodes value not a status code name'\n          );\n        }\n      } else {\n        throw new Error(\n          'Invlid method config hedging policy: nonFatalStatusCodes value must be a string or number'\n        );\n      }\n    }\n  }\n  const result: HedgingPolicy = {\n    maxAttempts: obj.maxAttempts,\n  };\n  if (obj.hedgingDelay) {\n    result.hedgingDelay = obj.hedgingDelay;\n  }\n  if (obj.nonFatalStatusCodes) {\n    result.nonFatalStatusCodes = obj.nonFatalStatusCodes;\n  }\n  return result;\n}\n\nfunction validateMethodConfig(obj: any): MethodConfig {\n  const result: MethodConfig = {\n    name: [],\n  };\n  if (!('name' in obj) || !Array.isArray(obj.name)) {\n    throw new Error('Invalid method config: invalid name array');\n  }\n  for (const name of obj.name) {\n    result.name.push(validateName(name));\n  }\n  if ('waitForReady' in obj) {\n    if (typeof obj.waitForReady !== 'boolean') {\n      throw new Error('Invalid method config: invalid waitForReady');\n    }\n    result.waitForReady = obj.waitForReady;\n  }\n  if ('timeout' in obj) {\n    if (typeof obj.timeout === 'object') {\n      if (\n        !('seconds' in obj.timeout) ||\n        !(typeof obj.timeout.seconds === 'number')\n      ) {\n        throw new Error('Invalid method config: invalid timeout.seconds');\n      }\n      if (\n        !('nanos' in obj.timeout) ||\n        !(typeof obj.timeout.nanos === 'number')\n      ) {\n        throw new Error('Invalid method config: invalid timeout.nanos');\n      }\n      result.timeout = obj.timeout;\n    } else if (\n      typeof obj.timeout === 'string' &&\n      DURATION_REGEX.test(obj.timeout)\n    ) {\n      const timeoutParts = obj.timeout\n        .substring(0, obj.timeout.length - 1)\n        .split('.');\n      result.timeout = {\n        seconds: timeoutParts[0] | 0,\n        nanos: (timeoutParts[1] ?? 0) | 0,\n      };\n    } else {\n      throw new Error('Invalid method config: invalid timeout');\n    }\n  }\n  if ('maxRequestBytes' in obj) {\n    if (typeof obj.maxRequestBytes !== 'number') {\n      throw new Error('Invalid method config: invalid maxRequestBytes');\n    }\n    result.maxRequestBytes = obj.maxRequestBytes;\n  }\n  if ('maxResponseBytes' in obj) {\n    if (typeof obj.maxResponseBytes !== 'number') {\n      throw new Error('Invalid method config: invalid maxRequestBytes');\n    }\n    result.maxResponseBytes = obj.maxResponseBytes;\n  }\n  if ('retryPolicy' in obj) {\n    if ('hedgingPolicy' in obj) {\n      throw new Error(\n        'Invalid method config: retryPolicy and hedgingPolicy cannot both be specified'\n      );\n    } else {\n      result.retryPolicy = validateRetryPolicy(obj.retryPolicy);\n    }\n  } else if ('hedgingPolicy' in obj) {\n    result.hedgingPolicy = validateHedgingPolicy(obj.hedgingPolicy);\n  }\n  return result;\n}\n\nexport function validateRetryThrottling(obj: any): RetryThrottling {\n  if (\n    !('maxTokens' in obj) ||\n    typeof obj.maxTokens !== 'number' ||\n    obj.maxTokens <= 0 ||\n    obj.maxTokens > 1000\n  ) {\n    throw new Error(\n      'Invalid retryThrottling: maxTokens must be a number in (0, 1000]'\n    );\n  }\n  if (\n    !('tokenRatio' in obj) ||\n    typeof obj.tokenRatio !== 'number' ||\n    obj.tokenRatio <= 0\n  ) {\n    throw new Error(\n      'Invalid retryThrottling: tokenRatio must be a number greater than 0'\n    );\n  }\n  return {\n    maxTokens: +(obj.maxTokens as number).toFixed(3),\n    tokenRatio: +(obj.tokenRatio as number).toFixed(3),\n  };\n}\n\nfunction validateLoadBalancingConfig(obj: any): LoadBalancingConfig {\n  if (!(typeof obj === 'object' && obj !== null)) {\n    throw new Error(\n      `Invalid loadBalancingConfig: unexpected type ${typeof obj}`\n    );\n  }\n  const keys = Object.keys(obj);\n  if (keys.length > 1) {\n    throw new Error(\n      `Invalid loadBalancingConfig: unexpected multiple keys ${keys}`\n    );\n  }\n  if (keys.length === 0) {\n    throw new Error(\n      'Invalid loadBalancingConfig: load balancing policy name required'\n    );\n  }\n  return {\n    [keys[0]]: obj[keys[0]],\n  };\n}\n\nexport function validateServiceConfig(obj: any): ServiceConfig {\n  const result: ServiceConfig = {\n    loadBalancingConfig: [],\n    methodConfig: [],\n  };\n  if ('loadBalancingPolicy' in obj) {\n    if (typeof obj.loadBalancingPolicy === 'string') {\n      result.loadBalancingPolicy = obj.loadBalancingPolicy;\n    } else {\n      throw new Error('Invalid service config: invalid loadBalancingPolicy');\n    }\n  }\n  if ('loadBalancingConfig' in obj) {\n    if (Array.isArray(obj.loadBalancingConfig)) {\n      for (const config of obj.loadBalancingConfig) {\n        result.loadBalancingConfig.push(validateLoadBalancingConfig(config));\n      }\n    } else {\n      throw new Error('Invalid service config: invalid loadBalancingConfig');\n    }\n  }\n  if ('methodConfig' in obj) {\n    if (Array.isArray(obj.methodConfig)) {\n      for (const methodConfig of obj.methodConfig) {\n        result.methodConfig.push(validateMethodConfig(methodConfig));\n      }\n    }\n  }\n  if ('retryThrottling' in obj) {\n    result.retryThrottling = validateRetryThrottling(obj.retryThrottling);\n  }\n  // Validate method name uniqueness\n  const seenMethodNames: MethodConfigName[] = [];\n  for (const methodConfig of result.methodConfig) {\n    for (const name of methodConfig.name) {\n      for (const seenName of seenMethodNames) {\n        if (\n          name.service === seenName.service &&\n          name.method === seenName.method\n        ) {\n          throw new Error(\n            `Invalid service config: duplicate name ${name.service}/${name.method}`\n          );\n        }\n      }\n      seenMethodNames.push(name);\n    }\n  }\n  return result;\n}\n\nfunction validateCanaryConfig(obj: any): ServiceConfigCanaryConfig {\n  if (!('serviceConfig' in obj)) {\n    throw new Error('Invalid service config choice: missing service config');\n  }\n  const result: ServiceConfigCanaryConfig = {\n    serviceConfig: validateServiceConfig(obj.serviceConfig),\n  };\n  if ('clientLanguage' in obj) {\n    if (Array.isArray(obj.clientLanguage)) {\n      result.clientLanguage = [];\n      for (const lang of obj.clientLanguage) {\n        if (typeof lang === 'string') {\n          result.clientLanguage.push(lang);\n        } else {\n          throw new Error(\n            'Invalid service config choice: invalid clientLanguage'\n          );\n        }\n      }\n    } else {\n      throw new Error('Invalid service config choice: invalid clientLanguage');\n    }\n  }\n  if ('clientHostname' in obj) {\n    if (Array.isArray(obj.clientHostname)) {\n      result.clientHostname = [];\n      for (const lang of obj.clientHostname) {\n        if (typeof lang === 'string') {\n          result.clientHostname.push(lang);\n        } else {\n          throw new Error(\n            'Invalid service config choice: invalid clientHostname'\n          );\n        }\n      }\n    } else {\n      throw new Error('Invalid service config choice: invalid clientHostname');\n    }\n  }\n  if ('percentage' in obj) {\n    if (\n      typeof obj.percentage === 'number' &&\n      0 <= obj.percentage &&\n      obj.percentage <= 100\n    ) {\n      result.percentage = obj.percentage;\n    } else {\n      throw new Error('Invalid service config choice: invalid percentage');\n    }\n  }\n  // Validate that no unexpected fields are present\n  const allowedFields = [\n    'clientLanguage',\n    'percentage',\n    'clientHostname',\n    'serviceConfig',\n  ];\n  for (const field in obj) {\n    if (!allowedFields.includes(field)) {\n      throw new Error(\n        `Invalid service config choice: unexpected field ${field}`\n      );\n    }\n  }\n  return result;\n}\n\nfunction validateAndSelectCanaryConfig(\n  obj: any,\n  percentage: number\n): ServiceConfig {\n  if (!Array.isArray(obj)) {\n    throw new Error('Invalid service config list');\n  }\n  for (const config of obj) {\n    const validatedConfig = validateCanaryConfig(config);\n    /* For each field, we check if it is present, then only discard the\n     * config if the field value does not match the current client */\n    if (\n      typeof validatedConfig.percentage === 'number' &&\n      percentage > validatedConfig.percentage\n    ) {\n      continue;\n    }\n    if (Array.isArray(validatedConfig.clientHostname)) {\n      let hostnameMatched = false;\n      for (const hostname of validatedConfig.clientHostname) {\n        if (hostname === os.hostname()) {\n          hostnameMatched = true;\n        }\n      }\n      if (!hostnameMatched) {\n        continue;\n      }\n    }\n    if (Array.isArray(validatedConfig.clientLanguage)) {\n      let languageMatched = false;\n      for (const language of validatedConfig.clientLanguage) {\n        if (language === CLIENT_LANGUAGE_STRING) {\n          languageMatched = true;\n        }\n      }\n      if (!languageMatched) {\n        continue;\n      }\n    }\n    return validatedConfig.serviceConfig;\n  }\n  throw new Error('No matching service config found');\n}\n\n/**\n * Find the \"grpc_config\" record among the TXT records, parse its value as JSON, validate its contents,\n * and select a service config with selection fields that all match this client. Most of these steps\n * can fail with an error; the caller must handle any errors thrown this way.\n * @param txtRecord The TXT record array that is output from a successful call to dns.resolveTxt\n * @param percentage A number chosen from the range [0, 100) that is used to select which config to use\n * @return The service configuration to use, given the percentage value, or null if the service config\n *     data has a valid format but none of the options match the current client.\n */\nexport function extractAndSelectServiceConfig(\n  txtRecord: string[][],\n  percentage: number\n): ServiceConfig | null {\n  for (const record of txtRecord) {\n    if (record.length > 0 && record[0].startsWith('grpc_config=')) {\n      /* Treat the list of strings in this record as a single string and remove\n       * \"grpc_config=\" from the beginning. The rest should be a JSON string */\n      const recordString = record.join('').substring('grpc_config='.length);\n      const recordJson: any = JSON.parse(recordString);\n      return validateAndSelectCanaryConfig(recordJson, percentage);\n    }\n  }\n  return null;\n}\n", "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum ConnectivityState {\n  IDLE,\n  CONNECTING,\n  READY,\n  TRANSIENT_FAILURE,\n  SHUTDOWN,\n}\n", "/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport interface GrpcUri {\n  scheme?: string;\n  authority?: string;\n  path: string;\n}\n\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\nconst URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\n\nexport function parseUri(uriString: string): GrpcUri | null {\n  const parsedUri = URI_REGEX.exec(uriString);\n  if (parsedUri === null) {\n    return null;\n  }\n  return {\n    scheme: parsedUri[1],\n    authority: parsedUri[2],\n    path: parsedUri[3],\n  };\n}\n\nexport interface HostPort {\n  host: string;\n  port?: number;\n}\n\nconst NUMBER_REGEX = /^\\d+$/;\n\nexport function splitHostPort(path: string): HostPort | null {\n  if (path.startsWith('[')) {\n    const hostEnd = path.indexOf(']');\n    if (hostEnd === -1) {\n      return null;\n    }\n    const host = path.substring(1, hostEnd);\n    /* Only an IPv6 address should be in bracketed notation, and an IPv6\n     * address should have at least one colon */\n    if (host.indexOf(':') === -1) {\n      return null;\n    }\n    if (path.length > hostEnd + 1) {\n      if (path[hostEnd + 1] === ':') {\n        const portString = path.substring(hostEnd + 2);\n        if (NUMBER_REGEX.test(portString)) {\n          return {\n            host: host,\n            port: +portString,\n          };\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return {\n        host,\n      };\n    }\n  } else {\n    const splitPath = path.split(':');\n    /* Exactly one colon means that this is host:port. Zero colons means that\n     * there is no port. And multiple colons means that this is a bare IPv6\n     * address with no port */\n    if (splitPath.length === 2) {\n      if (NUMBER_REGEX.test(splitPath[1])) {\n        return {\n          host: splitPath[0],\n          port: +splitPath[1],\n        };\n      } else {\n        return null;\n      }\n    } else {\n      return {\n        host: path,\n      };\n    }\n  }\n}\n\nexport function combineHostPort(hostPort: HostPort): string {\n  if (hostPort.port === undefined) {\n    return hostPort.host;\n  } else {\n    // Only an IPv6 host should include a colon\n    if (hostPort.host.includes(':')) {\n      return `[${hostPort.host}]:${hostPort.port}`;\n    } else {\n      return `${hostPort.host}:${hostPort.port}`;\n    }\n  }\n}\n\nexport function uriToString(uri: GrpcUri): string {\n  let result = '';\n  if (uri.scheme !== undefined) {\n    result += uri.scheme + ':';\n  }\n  if (uri.authority !== undefined) {\n    result += '//' + uri.authority + '/';\n  }\n  result += uri.path;\n  return result;\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { MethodConfig, ServiceConfig } from './service-config';\nimport { StatusObject } from './call-interface';\nimport { Endpoint } from './subchannel-address';\nimport { GrpcUri, uriToString } from './uri-parser';\nimport { ChannelOptions } from './channel-options';\nimport { Metadata } from './metadata';\nimport { Status } from './constants';\nimport { Filter, FilterFactory } from './filter';\n\nexport interface CallConfig {\n  methodConfig: MethodConfig;\n  onCommitted?: () => void;\n  pickInformation: { [key: string]: string };\n  status: Status;\n  dynamicFilterFactories: FilterFactory<Filter>[];\n}\n\n/**\n * Selects a configuration for a method given the name and metadata. Defined in\n * https://github.com/grpc/proposal/blob/master/A31-xds-timeout-support-and-config-selector.md#new-functionality-in-grpc\n */\nexport interface ConfigSelector {\n  (methodName: string, metadata: Metadata, channelId: number): CallConfig;\n}\n\n/**\n * A listener object passed to the resolver's constructor that provides name\n * resolution updates back to the resolver's owner.\n */\nexport interface ResolverListener {\n  /**\n   * Called whenever the resolver has new name resolution results to report\n   * @param addressList The new list of backend addresses\n   * @param serviceConfig The new service configuration corresponding to the\n   *     `addressList`. Will be `null` if no service configuration was\n   *     retrieved or if the service configuration was invalid\n   * @param serviceConfigError If non-`null`, indicates that the retrieved\n   *     service configuration was invalid\n   */\n  onSuccessfulResolution(\n    addressList: Endpoint[],\n    serviceConfig: ServiceConfig | null,\n    serviceConfigError: StatusObject | null,\n    configSelector: ConfigSelector | null,\n    attributes: { [key: string]: unknown }\n  ): void;\n  /**\n   * Called whenever a name resolution attempt fails.\n   * @param error Describes how resolution failed\n   */\n  onError(error: StatusObject): void;\n}\n\n/**\n * A resolver class that handles one or more of the name syntax schemes defined\n * in the [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n */\nexport interface Resolver {\n  /**\n   * Indicates that the caller wants new name resolution data. Calling this\n   * function may eventually result in calling one of the `ResolverListener`\n   * functions, but that is not guaranteed. Those functions will never be\n   * called synchronously with the constructor or updateResolution.\n   */\n  updateResolution(): void;\n\n  /**\n   * Discard all resources owned by the resolver. A later call to\n   * `updateResolution` should reinitialize those resources.  No\n   * `ResolverListener` callbacks should be called after `destroy` is called\n   * until `updateResolution` is called again.\n   */\n  destroy(): void;\n}\n\nexport interface ResolverConstructor {\n  new (\n    target: GrpcUri,\n    listener: ResolverListener,\n    channelOptions: ChannelOptions\n  ): Resolver;\n  /**\n   * Get the default authority for a target. This loosely corresponds to that\n   * target's hostname. Throws an error if this resolver class cannot parse the\n   * `target`.\n   * @param target\n   */\n  getDefaultAuthority(target: GrpcUri): string;\n}\n\nconst registeredResolvers: { [scheme: string]: ResolverConstructor } = {};\nlet defaultScheme: string | null = null;\n\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nexport function registerResolver(\n  scheme: string,\n  resolverClass: ResolverConstructor\n) {\n  registeredResolvers[scheme] = resolverClass;\n}\n\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nexport function registerDefaultScheme(scheme: string) {\n  defaultScheme = scheme;\n}\n\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nexport function createResolver(\n  target: GrpcUri,\n  listener: ResolverListener,\n  options: ChannelOptions\n): Resolver {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return new registeredResolvers[target.scheme](target, listener, options);\n  } else {\n    throw new Error(\n      `No resolver could be created for target ${uriToString(target)}`\n    );\n  }\n}\n\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nexport function getDefaultAuthority(target: GrpcUri): string {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return registeredResolvers[target.scheme].getDefaultAuthority(target);\n  } else {\n    throw new Error(`Invalid target ${uriToString(target)}`);\n  }\n}\n\nexport function mapUriDefaultScheme(target: GrpcUri): GrpcUri | null {\n  if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n    if (defaultScheme !== null) {\n      return {\n        scheme: defaultScheme,\n        authority: undefined,\n        path: uriToString(target),\n      };\n    } else {\n      return null;\n    }\n  }\n  return target;\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject } from './call-interface';\nimport { Metadata } from './metadata';\nimport { Status } from './constants';\nimport { LoadBalancer } from './load-balancer';\nimport { SubchannelInterface } from './subchannel-interface';\n\nexport enum PickResultType {\n  COMPLETE,\n  QUEUE,\n  TRANSIENT_FAILURE,\n  DROP,\n}\n\nexport interface PickResult {\n  pickResultType: PickResultType;\n  /**\n   * The subchannel to use as the transport for the call. Only meaningful if\n   * `pickResultType` is COMPLETE. If null, indicates that the call should be\n   * dropped.\n   */\n  subchannel: SubchannelInterface | null;\n  /**\n   * The status object to end the call with. Populated if and only if\n   * `pickResultType` is TRANSIENT_FAILURE.\n   */\n  status: StatusObject | null;\n  onCallStarted: (() => void) | null;\n  onCallEnded: ((statusCode: Status) => void) | null;\n}\n\nexport interface CompletePickResult extends PickResult {\n  pickResultType: PickResultType.COMPLETE;\n  subchannel: SubchannelInterface | null;\n  status: null;\n  onCallStarted: (() => void) | null;\n  onCallEnded: ((statusCode: Status) => void) | null;\n}\n\nexport interface QueuePickResult extends PickResult {\n  pickResultType: PickResultType.QUEUE;\n  subchannel: null;\n  status: null;\n  onCallStarted: null;\n  onCallEnded: null;\n}\n\nexport interface TransientFailurePickResult extends PickResult {\n  pickResultType: PickResultType.TRANSIENT_FAILURE;\n  subchannel: null;\n  status: StatusObject;\n  onCallStarted: null;\n  onCallEnded: null;\n}\n\nexport interface DropCallPickResult extends PickResult {\n  pickResultType: PickResultType.DROP;\n  subchannel: null;\n  status: StatusObject;\n  onCallStarted: null;\n  onCallEnded: null;\n}\n\nexport interface PickArgs {\n  metadata: Metadata;\n  extraPickInfo: { [key: string]: string };\n}\n\n/**\n * A proxy object representing the momentary state of a load balancer. Picks\n * subchannels or returns other information based on that state. Should be\n * replaced every time the load balancer changes state.\n */\nexport interface Picker {\n  pick(pickArgs: PickArgs): PickResult;\n}\n\n/**\n * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n * state. Always responds to every pick request with an UNAVAILABLE status.\n */\nexport class UnavailablePicker implements Picker {\n  private status: StatusObject;\n  constructor(status?: Partial<StatusObject>) {\n    this.status = {\n      code: Status.UNAVAILABLE,\n      details: 'No connection established',\n      metadata: new Metadata(),\n      ...status,\n    };\n  }\n  pick(pickArgs: PickArgs): TransientFailurePickResult {\n    return {\n      pickResultType: PickResultType.TRANSIENT_FAILURE,\n      subchannel: null,\n      status: this.status,\n      onCallStarted: null,\n      onCallEnded: null,\n    };\n  }\n}\n\n/**\n * A standard picker representing a load balancer in the IDLE or CONNECTING\n * state. Always responds to every pick request with a QUEUE pick result\n * indicating that the pick should be tried again with the next `Picker`. Also\n * reports back to the load balancer that a connection should be established\n * once any pick is attempted.\n * If the childPicker is provided, delegate to it instead of returning the\n * hardcoded QUEUE pick result, but still calls exitIdle.\n */\nexport class QueuePicker {\n  private calledExitIdle = false;\n  // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n  constructor(\n    private loadBalancer: LoadBalancer,\n    private childPicker?: Picker\n  ) {}\n\n  pick(pickArgs: PickArgs): PickResult {\n    if (!this.calledExitIdle) {\n      process.nextTick(() => {\n        this.loadBalancer.exitIdle();\n      });\n      this.calledExitIdle = true;\n    }\n    if (this.childPicker) {\n      return this.childPicker.pick(pickArgs);\n    } else {\n      return {\n        pickResultType: PickResultType.QUEUE,\n        subchannel: null,\n        status: null,\n        onCallStarted: null,\n        onCallEnded: null,\n      };\n    }\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst INITIAL_BACKOFF_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.6;\nconst MAX_BACKOFF_MS = 120000;\nconst BACKOFF_JITTER = 0.2;\n\n/**\n * Get a number uniformly at random in the range [min, max)\n * @param min\n * @param max\n */\nfunction uniformRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport interface BackoffOptions {\n  initialDelay?: number;\n  multiplier?: number;\n  jitter?: number;\n  maxDelay?: number;\n}\n\nexport class BackoffTimeout {\n  /**\n   * The delay time at the start, and after each reset.\n   */\n  private readonly initialDelay: number = INITIAL_BACKOFF_MS;\n  /**\n   * The exponential backoff multiplier.\n   */\n  private readonly multiplier: number = BACKOFF_MULTIPLIER;\n  /**\n   * The maximum delay time\n   */\n  private readonly maxDelay: number = MAX_BACKOFF_MS;\n  /**\n   * The maximum fraction by which the delay time can randomly vary after\n   * applying the multiplier.\n   */\n  private readonly jitter: number = BACKOFF_JITTER;\n  /**\n   * The delay time for the next time the timer runs.\n   */\n  private nextDelay: number;\n  /**\n   * The handle of the underlying timer. If running is false, this value refers\n   * to an object representing a timer that has ended, but it can still be\n   * interacted with without error.\n   */\n  private timerId: NodeJS.Timeout;\n  /**\n   * Indicates whether the timer is currently running.\n   */\n  private running = false;\n  /**\n   * Indicates whether the timer should keep the Node process running if no\n   * other async operation is doing so.\n   */\n  private hasRef = true;\n  /**\n   * The time that the currently running timer was started. Only valid if\n   * running is true.\n   */\n  private startTime: Date = new Date();\n  /**\n   * The approximate time that the currently running timer will end. Only valid\n   * if running is true.\n   */\n  private endTime: Date = new Date();\n\n  constructor(private callback: () => void, options?: BackoffOptions) {\n    if (options) {\n      if (options.initialDelay) {\n        this.initialDelay = options.initialDelay;\n      }\n      if (options.multiplier) {\n        this.multiplier = options.multiplier;\n      }\n      if (options.jitter) {\n        this.jitter = options.jitter;\n      }\n      if (options.maxDelay) {\n        this.maxDelay = options.maxDelay;\n      }\n    }\n    this.nextDelay = this.initialDelay;\n    this.timerId = setTimeout(() => {}, 0);\n    clearTimeout(this.timerId);\n  }\n\n  private runTimer(delay: number) {\n    this.endTime = this.startTime;\n    this.endTime.setMilliseconds(\n      this.endTime.getMilliseconds() + this.nextDelay\n    );\n    clearTimeout(this.timerId);\n    this.timerId = setTimeout(() => {\n      this.callback();\n      this.running = false;\n    }, delay);\n    if (!this.hasRef) {\n      this.timerId.unref?.();\n    }\n  }\n\n  /**\n   * Call the callback after the current amount of delay time\n   */\n  runOnce() {\n    this.running = true;\n    this.startTime = new Date();\n    this.runTimer(this.nextDelay);\n    const nextBackoff = Math.min(\n      this.nextDelay * this.multiplier,\n      this.maxDelay\n    );\n    const jitterMagnitude = nextBackoff * this.jitter;\n    this.nextDelay =\n      nextBackoff + uniformRandom(-jitterMagnitude, jitterMagnitude);\n  }\n\n  /**\n   * Stop the timer. The callback will not be called until `runOnce` is called\n   * again.\n   */\n  stop() {\n    clearTimeout(this.timerId);\n    this.running = false;\n  }\n\n  /**\n   * Reset the delay time to its initial value. If the timer is still running,\n   * retroactively apply that reset to the current timer.\n   */\n  reset() {\n    this.nextDelay = this.initialDelay;\n    if (this.running) {\n      const now = new Date();\n      const newEndTime = this.startTime;\n      newEndTime.setMilliseconds(newEndTime.getMilliseconds() + this.nextDelay);\n      clearTimeout(this.timerId);\n      if (now < newEndTime) {\n        this.runTimer(newEndTime.getTime() - now.getTime());\n      } else {\n        this.running = false;\n      }\n    }\n  }\n\n  /**\n   * Check whether the timer is currently running.\n   */\n  isRunning() {\n    return this.running;\n  }\n\n  /**\n   * Set that while the timer is running, it should keep the Node process\n   * running.\n   */\n  ref() {\n    this.hasRef = true;\n    this.timerId.ref?.();\n  }\n\n  /**\n   * Set that while the timer is running, it should not keep the Node process\n   * running.\n   */\n  unref() {\n    this.hasRef = false;\n    this.timerId.unref?.();\n  }\n\n  /**\n   * Get the approximate timestamp of when the timer will fire. Only valid if\n   * this.isRunning() is true.\n   */\n  getEndTime() {\n    return this.endTime;\n  }\n}\n", "/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  LoadBalancer,\n  ChannelControlHelper,\n  TypedLoadBalancingConfig,\n  createLoadBalancer,\n} from './load-balancer';\nimport { Endpoint, SubchannelAddress } from './subchannel-address';\nimport { ChannelOptions } from './channel-options';\nimport { ConnectivityState } from './connectivity-state';\nimport { Picker } from './picker';\nimport type { ChannelRef, SubchannelRef } from './channelz';\nimport { SubchannelInterface } from './subchannel-interface';\n\nconst TYPE_NAME = 'child_load_balancer_helper';\n\nexport class ChildLoadBalancerHandler implements LoadBalancer {\n  private currentChild: LoadBalancer | null = null;\n  private pendingChild: LoadBalancer | null = null;\n  private latestConfig: TypedLoadBalancingConfig | null = null;\n\n  private ChildPolicyHelper = class {\n    private child: LoadBalancer | null = null;\n    constructor(private parent: ChildLoadBalancerHandler) {}\n    createSubchannel(\n      subchannelAddress: SubchannelAddress,\n      subchannelArgs: ChannelOptions\n    ): SubchannelInterface {\n      return this.parent.channelControlHelper.createSubchannel(\n        subchannelAddress,\n        subchannelArgs\n      );\n    }\n    updateState(connectivityState: ConnectivityState, picker: Picker): void {\n      if (this.calledByPendingChild()) {\n        if (connectivityState === ConnectivityState.CONNECTING) {\n          return;\n        }\n        this.parent.currentChild?.destroy();\n        this.parent.currentChild = this.parent.pendingChild;\n        this.parent.pendingChild = null;\n      } else if (!this.calledByCurrentChild()) {\n        return;\n      }\n      this.parent.channelControlHelper.updateState(connectivityState, picker);\n    }\n    requestReresolution(): void {\n      const latestChild = this.parent.pendingChild ?? this.parent.currentChild;\n      if (this.child === latestChild) {\n        this.parent.channelControlHelper.requestReresolution();\n      }\n    }\n    setChild(newChild: LoadBalancer) {\n      this.child = newChild;\n    }\n    addChannelzChild(child: ChannelRef | SubchannelRef) {\n      this.parent.channelControlHelper.addChannelzChild(child);\n    }\n    removeChannelzChild(child: ChannelRef | SubchannelRef) {\n      this.parent.channelControlHelper.removeChannelzChild(child);\n    }\n\n    private calledByPendingChild(): boolean {\n      return this.child === this.parent.pendingChild;\n    }\n    private calledByCurrentChild(): boolean {\n      return this.child === this.parent.currentChild;\n    }\n  };\n\n  constructor(\n    private readonly channelControlHelper: ChannelControlHelper,\n    private readonly options: ChannelOptions\n  ) {}\n\n  protected configUpdateRequiresNewPolicyInstance(\n    oldConfig: TypedLoadBalancingConfig,\n    newConfig: TypedLoadBalancingConfig\n  ): boolean {\n    return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n  }\n\n  /**\n   * Prerequisites: lbConfig !== null and lbConfig.name is registered\n   * @param endpointList\n   * @param lbConfig\n   * @param attributes\n   */\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig,\n    attributes: { [key: string]: unknown }\n  ): void {\n    let childToUpdate: LoadBalancer;\n    if (\n      this.currentChild === null ||\n      this.latestConfig === null ||\n      this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)\n    ) {\n      const newHelper = new this.ChildPolicyHelper(this);\n      const newChild = createLoadBalancer(lbConfig, newHelper, this.options)!;\n      newHelper.setChild(newChild);\n      if (this.currentChild === null) {\n        this.currentChild = newChild;\n        childToUpdate = this.currentChild;\n      } else {\n        if (this.pendingChild) {\n          this.pendingChild.destroy();\n        }\n        this.pendingChild = newChild;\n        childToUpdate = this.pendingChild;\n      }\n    } else {\n      if (this.pendingChild === null) {\n        childToUpdate = this.currentChild;\n      } else {\n        childToUpdate = this.pendingChild;\n      }\n    }\n    this.latestConfig = lbConfig;\n    childToUpdate.updateAddressList(endpointList, lbConfig, attributes);\n  }\n  exitIdle(): void {\n    if (this.currentChild) {\n      this.currentChild.exitIdle();\n      if (this.pendingChild) {\n        this.pendingChild.exitIdle();\n      }\n    }\n  }\n  resetBackoff(): void {\n    if (this.currentChild) {\n      this.currentChild.resetBackoff();\n      if (this.pendingChild) {\n        this.pendingChild.resetBackoff();\n      }\n    }\n  }\n  destroy(): void {\n    /* Note: state updates are only propagated from the child balancer if that\n     * object is equal to this.currentChild or this.pendingChild. Since this\n     * function sets both of those to null, no further state updates will\n     * occur after this function returns. */\n    if (this.currentChild) {\n      this.currentChild.destroy();\n      this.currentChild = null;\n    }\n    if (this.pendingChild) {\n      this.pendingChild.destroy();\n      this.pendingChild = null;\n    }\n  }\n  getTypeName(): string {\n    return TYPE_NAME;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  ChannelControlHelper,\n  LoadBalancer,\n  TypedLoadBalancingConfig,\n  selectLbConfigFromList,\n} from './load-balancer';\nimport {\n  MethodConfig,\n  ServiceConfig,\n  validateServiceConfig,\n} from './service-config';\nimport { ConnectivityState } from './connectivity-state';\nimport { ConfigSelector, createResolver, Resolver } from './resolver';\nimport { ServiceError } from './call';\nimport { Picker, UnavailablePicker, QueuePicker } from './picker';\nimport { BackoffOptions, BackoffTimeout } from './backoff-timeout';\nimport { Status } from './constants';\nimport { StatusObject } from './call-interface';\nimport { Metadata } from './metadata';\nimport * as logging from './logging';\nimport { LogVerbosity } from './constants';\nimport { Endpoint } from './subchannel-address';\nimport { GrpcUri, uriToString } from './uri-parser';\nimport { ChildLoadBalancerHandler } from './load-balancer-child-handler';\nimport { ChannelOptions } from './channel-options';\n\nconst TRACER_NAME = 'resolving_load_balancer';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\ntype NameMatchLevel = 'EMPTY' | 'SERVICE' | 'SERVICE_AND_METHOD';\n\n/**\n * Name match levels in order from most to least specific. This is the order in\n * which searches will be performed.\n */\nconst NAME_MATCH_LEVEL_ORDER: NameMatchLevel[] = [\n  'SERVICE_AND_METHOD',\n  'SERVICE',\n  'EMPTY',\n];\n\nfunction hasMatchingName(\n  service: string,\n  method: string,\n  methodConfig: MethodConfig,\n  matchLevel: NameMatchLevel\n): boolean {\n  for (const name of methodConfig.name) {\n    switch (matchLevel) {\n      case 'EMPTY':\n        if (!name.service && !name.method) {\n          return true;\n        }\n        break;\n      case 'SERVICE':\n        if (name.service === service && !name.method) {\n          return true;\n        }\n        break;\n      case 'SERVICE_AND_METHOD':\n        if (name.service === service && name.method === method) {\n          return true;\n        }\n    }\n  }\n  return false;\n}\n\nfunction findMatchingConfig(\n  service: string,\n  method: string,\n  methodConfigs: MethodConfig[],\n  matchLevel: NameMatchLevel\n): MethodConfig | null {\n  for (const config of methodConfigs) {\n    if (hasMatchingName(service, method, config, matchLevel)) {\n      return config;\n    }\n  }\n  return null;\n}\n\nfunction getDefaultConfigSelector(\n  serviceConfig: ServiceConfig | null\n): ConfigSelector {\n  return function defaultConfigSelector(\n    methodName: string,\n    metadata: Metadata\n  ) {\n    const splitName = methodName.split('/').filter(x => x.length > 0);\n    const service = splitName[0] ?? '';\n    const method = splitName[1] ?? '';\n    if (serviceConfig && serviceConfig.methodConfig) {\n      /* Check for the following in order, and return the first method\n       * config that matches:\n       * 1. A name that exactly matches the service and method\n       * 2. A name with no method set that matches the service\n       * 3. An empty name\n       */\n      for (const matchLevel of NAME_MATCH_LEVEL_ORDER) {\n        const matchingConfig = findMatchingConfig(\n          service,\n          method,\n          serviceConfig.methodConfig,\n          matchLevel\n        );\n        if (matchingConfig) {\n          return {\n            methodConfig: matchingConfig,\n            pickInformation: {},\n            status: Status.OK,\n            dynamicFilterFactories: [],\n          };\n        }\n      }\n    }\n    return {\n      methodConfig: { name: [] },\n      pickInformation: {},\n      status: Status.OK,\n      dynamicFilterFactories: [],\n    };\n  };\n}\n\nexport interface ResolutionCallback {\n  (serviceConfig: ServiceConfig, configSelector: ConfigSelector): void;\n}\n\nexport interface ResolutionFailureCallback {\n  (status: StatusObject): void;\n}\n\nexport class ResolvingLoadBalancer implements LoadBalancer {\n  /**\n   * The resolver class constructed for the target address.\n   */\n  private readonly innerResolver: Resolver;\n\n  private readonly childLoadBalancer: ChildLoadBalancerHandler;\n  private latestChildState: ConnectivityState = ConnectivityState.IDLE;\n  private latestChildPicker: Picker = new QueuePicker(this);\n  /**\n   * This resolving load balancer's current connectivity state.\n   */\n  private currentState: ConnectivityState = ConnectivityState.IDLE;\n  private readonly defaultServiceConfig: ServiceConfig;\n  /**\n   * The service config object from the last successful resolution, if\n   * available. A value of null indicates that we have not yet received a valid\n   * service config from the resolver.\n   */\n  private previousServiceConfig: ServiceConfig | null = null;\n\n  /**\n   * The backoff timer for handling name resolution failures.\n   */\n  private readonly backoffTimeout: BackoffTimeout;\n\n  /**\n   * Indicates whether we should attempt to resolve again after the backoff\n   * timer runs out.\n   */\n  private continueResolving = false;\n\n  /**\n   * Wrapper class that behaves like a `LoadBalancer` and also handles name\n   * resolution internally.\n   * @param target The address of the backend to connect to.\n   * @param channelControlHelper `ChannelControlHelper` instance provided by\n   *     this load balancer's owner.\n   * @param defaultServiceConfig The default service configuration to be used\n   *     if none is provided by the name resolver. A `null` value indicates\n   *     that the default behavior should be the default unconfigured behavior.\n   *     In practice, that means using the \"pick first\" load balancer\n   *     implmentation\n   */\n  constructor(\n    private readonly target: GrpcUri,\n    private readonly channelControlHelper: ChannelControlHelper,\n    channelOptions: ChannelOptions,\n    private readonly onSuccessfulResolution: ResolutionCallback,\n    private readonly onFailedResolution: ResolutionFailureCallback\n  ) {\n    if (channelOptions['grpc.service_config']) {\n      this.defaultServiceConfig = validateServiceConfig(\n        JSON.parse(channelOptions['grpc.service_config']!)\n      );\n    } else {\n      this.defaultServiceConfig = {\n        loadBalancingConfig: [],\n        methodConfig: [],\n      };\n    }\n\n    this.updateState(ConnectivityState.IDLE, new QueuePicker(this));\n    this.childLoadBalancer = new ChildLoadBalancerHandler(\n      {\n        createSubchannel:\n          channelControlHelper.createSubchannel.bind(channelControlHelper),\n        requestReresolution: () => {\n          /* If the backoffTimeout is running, we're still backing off from\n           * making resolve requests, so we shouldn't make another one here.\n           * In that case, the backoff timer callback will call\n           * updateResolution */\n          if (this.backoffTimeout.isRunning()) {\n            trace(\n              'requestReresolution delayed by backoff timer until ' +\n                this.backoffTimeout.getEndTime().toISOString()\n            );\n            this.continueResolving = true;\n          } else {\n            this.updateResolution();\n          }\n        },\n        updateState: (newState: ConnectivityState, picker: Picker) => {\n          this.latestChildState = newState;\n          this.latestChildPicker = picker;\n          this.updateState(newState, picker);\n        },\n        addChannelzChild:\n          channelControlHelper.addChannelzChild.bind(channelControlHelper),\n        removeChannelzChild:\n          channelControlHelper.removeChannelzChild.bind(channelControlHelper),\n      },\n      channelOptions\n    );\n    this.innerResolver = createResolver(\n      target,\n      {\n        onSuccessfulResolution: (\n          endpointList: Endpoint[],\n          serviceConfig: ServiceConfig | null,\n          serviceConfigError: ServiceError | null,\n          configSelector: ConfigSelector | null,\n          attributes: { [key: string]: unknown }\n        ) => {\n          this.backoffTimeout.stop();\n          this.backoffTimeout.reset();\n          let workingServiceConfig: ServiceConfig | null = null;\n          /* This first group of conditionals implements the algorithm described\n           * in https://github.com/grpc/proposal/blob/master/A21-service-config-error-handling.md\n           * in the section called \"Behavior on receiving a new gRPC Config\".\n           */\n          if (serviceConfig === null) {\n            // Step 4 and 5\n            if (serviceConfigError === null) {\n              // Step 5\n              this.previousServiceConfig = null;\n              workingServiceConfig = this.defaultServiceConfig;\n            } else {\n              // Step 4\n              if (this.previousServiceConfig === null) {\n                // Step 4.ii\n                this.handleResolutionFailure(serviceConfigError);\n              } else {\n                // Step 4.i\n                workingServiceConfig = this.previousServiceConfig;\n              }\n            }\n          } else {\n            // Step 3\n            workingServiceConfig = serviceConfig;\n            this.previousServiceConfig = serviceConfig;\n          }\n          const workingConfigList =\n            workingServiceConfig?.loadBalancingConfig ?? [];\n          const loadBalancingConfig = selectLbConfigFromList(\n            workingConfigList,\n            true\n          );\n          if (loadBalancingConfig === null) {\n            // There were load balancing configs but none are supported. This counts as a resolution failure\n            this.handleResolutionFailure({\n              code: Status.UNAVAILABLE,\n              details:\n                'All load balancer options in service config are not compatible',\n              metadata: new Metadata(),\n            });\n            return;\n          }\n          this.childLoadBalancer.updateAddressList(\n            endpointList,\n            loadBalancingConfig,\n            attributes\n          );\n          const finalServiceConfig =\n            workingServiceConfig ?? this.defaultServiceConfig;\n          this.onSuccessfulResolution(\n            finalServiceConfig,\n            configSelector ?? getDefaultConfigSelector(finalServiceConfig)\n          );\n        },\n        onError: (error: StatusObject) => {\n          this.handleResolutionFailure(error);\n        },\n      },\n      channelOptions\n    );\n    const backoffOptions: BackoffOptions = {\n      initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n      maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n    };\n    this.backoffTimeout = new BackoffTimeout(() => {\n      if (this.continueResolving) {\n        this.updateResolution();\n        this.continueResolving = false;\n      } else {\n        this.updateState(this.latestChildState, this.latestChildPicker);\n      }\n    }, backoffOptions);\n    this.backoffTimeout.unref();\n  }\n\n  private updateResolution() {\n    this.innerResolver.updateResolution();\n    if (this.currentState === ConnectivityState.IDLE) {\n      /* this.latestChildPicker is initialized as new QueuePicker(this), which\n       * is an appropriate value here if the child LB policy is unset.\n       * Otherwise, we want to delegate to the child here, in case that\n       * triggers something. */\n      this.updateState(ConnectivityState.CONNECTING, this.latestChildPicker);\n    }\n    this.backoffTimeout.runOnce();\n  }\n\n  private updateState(connectivityState: ConnectivityState, picker: Picker) {\n    trace(\n      uriToString(this.target) +\n        ' ' +\n        ConnectivityState[this.currentState] +\n        ' -> ' +\n        ConnectivityState[connectivityState]\n    );\n    // Ensure that this.exitIdle() is called by the picker\n    if (connectivityState === ConnectivityState.IDLE) {\n      picker = new QueuePicker(this, picker);\n    }\n    this.currentState = connectivityState;\n    this.channelControlHelper.updateState(connectivityState, picker);\n  }\n\n  private handleResolutionFailure(error: StatusObject) {\n    if (this.latestChildState === ConnectivityState.IDLE) {\n      this.updateState(\n        ConnectivityState.TRANSIENT_FAILURE,\n        new UnavailablePicker(error)\n      );\n      this.onFailedResolution(error);\n    }\n  }\n\n  exitIdle() {\n    if (\n      this.currentState === ConnectivityState.IDLE ||\n      this.currentState === ConnectivityState.TRANSIENT_FAILURE\n    ) {\n      if (this.backoffTimeout.isRunning()) {\n        this.continueResolving = true;\n      } else {\n        this.updateResolution();\n      }\n    }\n    this.childLoadBalancer.exitIdle();\n  }\n\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig | null\n  ): never {\n    throw new Error('updateAddressList not supported on ResolvingLoadBalancer');\n  }\n\n  resetBackoff() {\n    this.backoffTimeout.reset();\n    this.childLoadBalancer.resetBackoff();\n  }\n\n  destroy() {\n    this.childLoadBalancer.destroy();\n    this.innerResolver.destroy();\n    this.backoffTimeout.reset();\n    this.backoffTimeout.stop();\n    this.latestChildState = ConnectivityState.IDLE;\n    this.latestChildPicker = new QueuePicker(this);\n    this.currentState = ConnectivityState.IDLE;\n    this.previousServiceConfig = null;\n    this.continueResolving = false;\n  }\n\n  getTypeName() {\n    return 'resolving_load_balancer';\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CompressionAlgorithms } from './compression-algorithms';\n\n/**\n * An interface that contains options used when initializing a Channel instance.\n */\nexport interface ChannelOptions {\n  'grpc.ssl_target_name_override'?: string;\n  'grpc.primary_user_agent'?: string;\n  'grpc.secondary_user_agent'?: string;\n  'grpc.default_authority'?: string;\n  'grpc.keepalive_time_ms'?: number;\n  'grpc.keepalive_timeout_ms'?: number;\n  'grpc.keepalive_permit_without_calls'?: number;\n  'grpc.service_config'?: string;\n  'grpc.max_concurrent_streams'?: number;\n  'grpc.initial_reconnect_backoff_ms'?: number;\n  'grpc.max_reconnect_backoff_ms'?: number;\n  'grpc.use_local_subchannel_pool'?: number;\n  'grpc.max_send_message_length'?: number;\n  'grpc.max_receive_message_length'?: number;\n  'grpc.enable_http_proxy'?: number;\n  /* http_connect_target and http_connect_creds are used for passing data\n   * around internally, and should not be documented as public-facing options\n   */\n  'grpc.http_connect_target'?: string;\n  'grpc.http_connect_creds'?: string;\n  'grpc.default_compression_algorithm'?: CompressionAlgorithms;\n  'grpc.enable_channelz'?: number;\n  'grpc.dns_min_time_between_resolutions_ms'?: number;\n  'grpc.enable_retries'?: number;\n  'grpc.per_rpc_retry_buffer_size'?: number;\n  /* This option is pattered like a core option, but the core does not have\n   * this option. It is closely related to the option\n   * grpc.per_rpc_retry_buffer_size, which is in the core. The core will likely\n   * implement this functionality using the ResourceQuota mechanism, so there\n   * will probably not be any collision or other inconsistency. */\n  'grpc.retry_buffer_size'?: number;\n  'grpc.max_connection_age_ms'?: number;\n  'grpc.max_connection_age_grace_ms'?: number;\n  'grpc.max_connection_idle_ms'?: number;\n  'grpc-node.max_session_memory'?: number;\n  'grpc.service_config_disable_resolution'?: number;\n  'grpc.client_idle_timeout_ms'?: number;\n  /**\n   * Set the enableTrace option in TLS clients and servers\n   */\n  'grpc-node.tls_enable_trace'?: number;\n  'grpc.lb.ring_hash.ring_size_cap'?: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexport const recognizedOptions = {\n  'grpc.ssl_target_name_override': true,\n  'grpc.primary_user_agent': true,\n  'grpc.secondary_user_agent': true,\n  'grpc.default_authority': true,\n  'grpc.keepalive_time_ms': true,\n  'grpc.keepalive_timeout_ms': true,\n  'grpc.keepalive_permit_without_calls': true,\n  'grpc.service_config': true,\n  'grpc.max_concurrent_streams': true,\n  'grpc.initial_reconnect_backoff_ms': true,\n  'grpc.max_reconnect_backoff_ms': true,\n  'grpc.use_local_subchannel_pool': true,\n  'grpc.max_send_message_length': true,\n  'grpc.max_receive_message_length': true,\n  'grpc.enable_http_proxy': true,\n  'grpc.enable_channelz': true,\n  'grpc.dns_min_time_between_resolutions_ms': true,\n  'grpc.enable_retries': true,\n  'grpc.per_rpc_retry_buffer_size': true,\n  'grpc.retry_buffer_size': true,\n  'grpc.max_connection_age_ms': true,\n  'grpc.max_connection_age_grace_ms': true,\n  'grpc-node.max_session_memory': true,\n  'grpc.service_config_disable_resolution': true,\n  'grpc.client_idle_timeout_ms': true,\n  'grpc-node.tls_enable_trace': true,\n  'grpc.lb.ring_hash.ring_size_cap': true,\n};\n\nexport function channelOptionsEqual(\n  options1: ChannelOptions,\n  options2: ChannelOptions\n) {\n  const keys1 = Object.keys(options1).sort();\n  const keys2 = Object.keys(options2).sort();\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (let i = 0; i < keys1.length; i += 1) {\n    if (keys1[i] !== keys2[i]) {\n      return false;\n    }\n    if (options1[keys1[i]] !== options2[keys2[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isIP, isIPv6 } from 'net';\n\nexport interface TcpSubchannelAddress {\n  port: number;\n  host: string;\n}\n\nexport interface IpcSubchannelAddress {\n  path: string;\n}\n/**\n * This represents a single backend address to connect to. This interface is a\n * subset of net.SocketConnectOpts, i.e. the options described at\n * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener.\n * Those are in turn a subset of the options that can be passed to http2.connect.\n */\n\nexport type SubchannelAddress = TcpSubchannelAddress | IpcSubchannelAddress;\n\nexport function isTcpSubchannelAddress(\n  address: SubchannelAddress\n): address is TcpSubchannelAddress {\n  return 'port' in address;\n}\n\nexport function subchannelAddressEqual(\n  address1?: SubchannelAddress,\n  address2?: SubchannelAddress\n): boolean {\n  if (!address1 && !address2) {\n    return true;\n  }\n  if (!address1 || !address2) {\n    return false;\n  }\n  if (isTcpSubchannelAddress(address1)) {\n    return (\n      isTcpSubchannelAddress(address2) &&\n      address1.host === address2.host &&\n      address1.port === address2.port\n    );\n  } else {\n    return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n  }\n}\n\nexport function subchannelAddressToString(address: SubchannelAddress): string {\n  if (isTcpSubchannelAddress(address)) {\n    if (isIPv6(address.host)) {\n      return '[' + address.host + ']:' + address.port;\n    } else {\n      return address.host + ':' + address.port;\n    }\n  } else {\n    return address.path;\n  }\n}\n\nconst DEFAULT_PORT = 443;\n\nexport function stringToSubchannelAddress(\n  addressString: string,\n  port?: number\n): SubchannelAddress {\n  if (isIP(addressString)) {\n    return {\n      host: addressString,\n      port: port ?? DEFAULT_PORT,\n    };\n  } else {\n    return {\n      path: addressString,\n    };\n  }\n}\n\nexport interface Endpoint {\n  addresses: SubchannelAddress[];\n}\n\nexport function endpointEqual(endpoint1: Endpoint, endpoint2: Endpoint) {\n  if (endpoint1.addresses.length !== endpoint2.addresses.length) {\n    return false;\n  }\n  for (let i = 0; i < endpoint1.addresses.length; i++) {\n    if (\n      !subchannelAddressEqual(endpoint1.addresses[i], endpoint2.addresses[i])\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function endpointToString(endpoint: Endpoint): string {\n  return (\n    '[' + endpoint.addresses.map(subchannelAddressToString).join(', ') + ']'\n  );\n}\n\nexport function endpointHasAddress(\n  endpoint: Endpoint,\n  expectedAddress: SubchannelAddress\n): boolean {\n  for (const address of endpoint.addresses) {\n    if (subchannelAddressEqual(address, expectedAddress)) {\n      return true;\n    }\n  }\n  return false;\n}\n\ninterface EndpointMapEntry<ValueType> {\n  key: Endpoint;\n  value: ValueType;\n}\n\nfunction endpointEqualUnordered(\n  endpoint1: Endpoint,\n  endpoint2: Endpoint\n): boolean {\n  if (endpoint1.addresses.length !== endpoint2.addresses.length) {\n    return false;\n  }\n  for (const address1 of endpoint1.addresses) {\n    let matchFound = false;\n    for (const address2 of endpoint2.addresses) {\n      if (subchannelAddressEqual(address1, address2)) {\n        matchFound = true;\n        break;\n      }\n    }\n    if (!matchFound) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport class EndpointMap<ValueType> {\n  private map: Set<EndpointMapEntry<ValueType>> = new Set();\n\n  get size() {\n    return this.map.size;\n  }\n\n  getForSubchannelAddress(address: SubchannelAddress): ValueType | undefined {\n    for (const entry of this.map) {\n      if (endpointHasAddress(entry.key, address)) {\n        return entry.value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Delete any entries in this map with keys that are not in endpoints\n   * @param endpoints\n   */\n  deleteMissing(endpoints: Endpoint[]): ValueType[] {\n    const removedValues: ValueType[] = [];\n    for (const entry of this.map) {\n      let foundEntry = false;\n      for (const endpoint of endpoints) {\n        if (endpointEqualUnordered(endpoint, entry.key)) {\n          foundEntry = true;\n        }\n      }\n      if (!foundEntry) {\n        removedValues.push(entry.value);\n        this.map.delete(entry);\n      }\n    }\n    return removedValues;\n  }\n\n  get(endpoint: Endpoint): ValueType | undefined {\n    for (const entry of this.map) {\n      if (endpointEqualUnordered(endpoint, entry.key)) {\n        return entry.value;\n      }\n    }\n    return undefined;\n  }\n\n  set(endpoint: Endpoint, mapEntry: ValueType) {\n    for (const entry of this.map) {\n      if (endpointEqualUnordered(endpoint, entry.key)) {\n        entry.value = mapEntry;\n        return;\n      }\n    }\n    this.map.add({ key: endpoint, value: mapEntry });\n  }\n\n  delete(endpoint: Endpoint) {\n    for (const entry of this.map) {\n      if (endpointEqualUnordered(endpoint, entry.key)) {\n        this.map.delete(entry);\n        return;\n      }\n    }\n  }\n\n  has(endpoint: Endpoint): boolean {\n    for (const entry of this.map) {\n      if (endpointEqualUnordered(endpoint, entry.key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n  *keys(): IterableIterator<Endpoint> {\n    for (const entry of this.map) {\n      yield entry.key;\n    }\n  }\n\n  *values(): IterableIterator<ValueType> {\n    for (const entry of this.map) {\n      yield entry.value;\n    }\n  }\n\n  *entries(): IterableIterator<[Endpoint, ValueType]> {\n    for (const entry of this.map) {\n      yield [entry.key, entry.value];\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass TreeNode {\n  constructor(key, value, color = 1 /* TreeNodeColor.RED */) {\n    this._left = undefined;\n    this._right = undefined;\n    this._parent = undefined;\n    this._key = key;\n    this._value = value;\n    this._color = color;\n  }\n  /**\n   * @description Get the pre node.\n   * @returns TreeNode about the pre node.\n   */\n  _pre() {\n    let preNode = this;\n    const isRootOrHeader = preNode._parent._parent === preNode;\n    if (isRootOrHeader && preNode._color === 1 /* TreeNodeColor.RED */) {\n      preNode = preNode._right;\n    } else if (preNode._left) {\n      preNode = preNode._left;\n      while (preNode._right) {\n        preNode = preNode._right;\n      }\n    } else {\n      // Must be root and left is null\n      if (isRootOrHeader) {\n        return preNode._parent;\n      }\n      let pre = preNode._parent;\n      while (pre._left === preNode) {\n        preNode = pre;\n        pre = preNode._parent;\n      }\n      preNode = pre;\n    }\n    return preNode;\n  }\n  /**\n   * @description Get the next node.\n   * @returns TreeNode about the next node.\n   */\n  _next() {\n    let nextNode = this;\n    if (nextNode._right) {\n      nextNode = nextNode._right;\n      while (nextNode._left) {\n        nextNode = nextNode._left;\n      }\n      return nextNode;\n    } else {\n      let pre = nextNode._parent;\n      while (pre._right === nextNode) {\n        nextNode = pre;\n        pre = nextNode._parent;\n      }\n      if (nextNode._right !== pre) {\n        return pre;\n      } else return nextNode;\n    }\n  }\n  /**\n   * @description Rotate left.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const PP = this._parent;\n    const V = this._right;\n    const R = V._left;\n    if (PP._parent === this) PP._parent = V;else if (PP._left === this) PP._left = V;else PP._right = V;\n    V._parent = PP;\n    V._left = this;\n    this._parent = V;\n    this._right = R;\n    if (R) R._parent = this;\n    return V;\n  }\n  /**\n   * @description Rotate right.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const PP = this._parent;\n    const F = this._left;\n    const K = F._right;\n    if (PP._parent === this) PP._parent = F;else if (PP._left === this) PP._left = F;else PP._right = F;\n    F._parent = PP;\n    F._right = this;\n    this._parent = F;\n    this._left = K;\n    if (K) K._parent = this;\n    return F;\n  }\n}\nclass TreeNodeEnableIndex extends TreeNode {\n  constructor() {\n    super(...arguments);\n    this._subTreeSize = 1;\n  }\n  /**\n   * @description Rotate left and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const parent = super._rotateLeft();\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  /**\n   * @description Rotate right and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const parent = super._rotateRight();\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  _recount() {\n    this._subTreeSize = 1;\n    if (this._left) {\n      this._subTreeSize += this._left._subTreeSize;\n    }\n    if (this._right) {\n      this._subTreeSize += this._right._subTreeSize;\n    }\n  }\n}\n\nclass ContainerIterator {\n  /**\n   * @internal\n   */\n  constructor(iteratorType = 0 /* IteratorType.NORMAL */) {\n    this.iteratorType = iteratorType;\n  }\n  /**\n   * @param iter - The other iterator you want to compare.\n   * @returns Whether this equals to obj.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  equals(iter) {\n    return this._node === iter._node;\n  }\n}\nclass Base {\n  constructor() {\n    /**\n     * @description Container's size.\n     * @internal\n     */\n    this._length = 0;\n  }\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.length); // 2\n   */\n  get length() {\n    return this._length;\n  }\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.size()); // 2\n   */\n  size() {\n    return this._length;\n  }\n  /**\n   * @returns Whether the container is empty.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  empty() {\n    return this._length === 0;\n  }\n}\nclass Container extends Base {}\n\n/**\n * @description Throw an iterator access error.\n * @internal\n */\nfunction throwIteratorAccessError() {\n  throw new RangeError('Iterator access denied!');\n}\n\nclass TreeContainer extends Container {\n  /**\n   * @internal\n   */\n  constructor(cmp = function (x, y) {\n    if (x < y) return -1;\n    if (x > y) return 1;\n    return 0;\n  }, enableIndex = false) {\n    super();\n    /**\n     * @internal\n     */\n    this._root = undefined;\n    this._cmp = cmp;\n    this.enableIndex = enableIndex;\n    this._TreeNodeClass = enableIndex ? TreeNodeEnableIndex : TreeNode;\n    this._header = new this._TreeNodeClass();\n  }\n  /**\n   * @internal\n   */\n  _lowerBound(curNode, key) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        resNode = curNode;\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  _upperBound(curNode, key) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key, key);\n      if (cmpResult <= 0) {\n        curNode = curNode._right;\n      } else {\n        resNode = curNode;\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  _reverseLowerBound(curNode, key) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  _reverseUpperBound(curNode, key) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else {\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  _eraseNodeSelfBalance(curNode) {\n    while (true) {\n      const parentNode = curNode._parent;\n      if (parentNode === this._header) return;\n      if (curNode._color === 1 /* TreeNodeColor.RED */) {\n        curNode._color = 0 /* TreeNodeColor.BLACK */;\n        return;\n      }\n      if (curNode === parentNode._left) {\n        const brother = parentNode._right;\n        if (brother._color === 1 /* TreeNodeColor.RED */) {\n          brother._color = 0 /* TreeNodeColor.BLACK */;\n          parentNode._color = 1 /* TreeNodeColor.RED */;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateLeft();\n          } else parentNode._rotateLeft();\n        } else {\n          if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n            brother._color = parentNode._color;\n            parentNode._color = 0 /* TreeNodeColor.BLACK */;\n            brother._right._color = 0 /* TreeNodeColor.BLACK */;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateLeft();\n            } else parentNode._rotateLeft();\n            return;\n          } else if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n            brother._color = 1 /* TreeNodeColor.RED */;\n            brother._left._color = 0 /* TreeNodeColor.BLACK */;\n            brother._rotateRight();\n          } else {\n            brother._color = 1 /* TreeNodeColor.RED */;\n            curNode = parentNode;\n          }\n        }\n      } else {\n        const brother = parentNode._left;\n        if (brother._color === 1 /* TreeNodeColor.RED */) {\n          brother._color = 0 /* TreeNodeColor.BLACK */;\n          parentNode._color = 1 /* TreeNodeColor.RED */;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateRight();\n          } else parentNode._rotateRight();\n        } else {\n          if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n            brother._color = parentNode._color;\n            parentNode._color = 0 /* TreeNodeColor.BLACK */;\n            brother._left._color = 0 /* TreeNodeColor.BLACK */;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateRight();\n            } else parentNode._rotateRight();\n            return;\n          } else if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n            brother._color = 1 /* TreeNodeColor.RED */;\n            brother._right._color = 0 /* TreeNodeColor.BLACK */;\n            brother._rotateLeft();\n          } else {\n            brother._color = 1 /* TreeNodeColor.RED */;\n            curNode = parentNode;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  _eraseNode(curNode) {\n    if (this._length === 1) {\n      this.clear();\n      return;\n    }\n    let swapNode = curNode;\n    while (swapNode._left || swapNode._right) {\n      if (swapNode._right) {\n        swapNode = swapNode._right;\n        while (swapNode._left) swapNode = swapNode._left;\n      } else {\n        swapNode = swapNode._left;\n      }\n      const key = curNode._key;\n      curNode._key = swapNode._key;\n      swapNode._key = key;\n      const value = curNode._value;\n      curNode._value = swapNode._value;\n      swapNode._value = value;\n      curNode = swapNode;\n    }\n    if (this._header._left === swapNode) {\n      this._header._left = swapNode._parent;\n    } else if (this._header._right === swapNode) {\n      this._header._right = swapNode._parent;\n    }\n    this._eraseNodeSelfBalance(swapNode);\n    let _parent = swapNode._parent;\n    if (swapNode === _parent._left) {\n      _parent._left = undefined;\n    } else _parent._right = undefined;\n    this._length -= 1;\n    this._root._color = 0 /* TreeNodeColor.BLACK */;\n    if (this.enableIndex) {\n      while (_parent !== this._header) {\n        _parent._subTreeSize -= 1;\n        _parent = _parent._parent;\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  _inOrderTraversal(param) {\n    const pos = typeof param === 'number' ? param : undefined;\n    const callback = typeof param === 'function' ? param : undefined;\n    const nodeList = typeof param === 'undefined' ? [] : undefined;\n    let index = 0;\n    let curNode = this._root;\n    const stack = [];\n    while (stack.length || curNode) {\n      if (curNode) {\n        stack.push(curNode);\n        curNode = curNode._left;\n      } else {\n        curNode = stack.pop();\n        if (index === pos) return curNode;\n        nodeList && nodeList.push(curNode);\n        callback && callback(curNode, index, this);\n        index += 1;\n        curNode = curNode._right;\n      }\n    }\n    return nodeList;\n  }\n  /**\n   * @internal\n   */\n  _insertNodeSelfBalance(curNode) {\n    while (true) {\n      const parentNode = curNode._parent;\n      if (parentNode._color === 0 /* TreeNodeColor.BLACK */) return;\n      const grandParent = parentNode._parent;\n      if (parentNode === grandParent._left) {\n        const uncle = grandParent._right;\n        if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n          uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (grandParent === this._root) return;\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._right) {\n          curNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (curNode._left) {\n            curNode._left._parent = parentNode;\n          }\n          if (curNode._right) {\n            curNode._right._parent = grandParent;\n          }\n          parentNode._right = curNode._left;\n          grandParent._left = curNode._right;\n          curNode._left = parentNode;\n          curNode._right = grandParent;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n        } else {\n          parentNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateRight();\n          } else grandParent._rotateRight();\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n          return;\n        }\n      } else {\n        const uncle = grandParent._left;\n        if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n          uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (grandParent === this._root) return;\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._left) {\n          curNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (curNode._left) {\n            curNode._left._parent = grandParent;\n          }\n          if (curNode._right) {\n            curNode._right._parent = parentNode;\n          }\n          grandParent._right = curNode._left;\n          parentNode._left = curNode._right;\n          curNode._left = grandParent;\n          curNode._right = parentNode;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n        } else {\n          parentNode._color = 0 /* TreeNodeColor.BLACK */;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateLeft();\n          } else grandParent._rotateLeft();\n          grandParent._color = 1 /* TreeNodeColor.RED */;\n          return;\n        }\n      }\n      if (this.enableIndex) {\n        parentNode._recount();\n        grandParent._recount();\n        curNode._recount();\n      }\n      return;\n    }\n  }\n  /**\n   * @internal\n   */\n  _set(key, value, hint) {\n    if (this._root === undefined) {\n      this._length += 1;\n      this._root = new this._TreeNodeClass(key, value, 0 /* TreeNodeColor.BLACK */);\n      this._root._parent = this._header;\n      this._header._parent = this._header._left = this._header._right = this._root;\n      return this._length;\n    }\n    let curNode;\n    const minNode = this._header._left;\n    const compareToMin = this._cmp(minNode._key, key);\n    if (compareToMin === 0) {\n      minNode._value = value;\n      return this._length;\n    } else if (compareToMin > 0) {\n      minNode._left = new this._TreeNodeClass(key, value);\n      minNode._left._parent = minNode;\n      curNode = minNode._left;\n      this._header._left = curNode;\n    } else {\n      const maxNode = this._header._right;\n      const compareToMax = this._cmp(maxNode._key, key);\n      if (compareToMax === 0) {\n        maxNode._value = value;\n        return this._length;\n      } else if (compareToMax < 0) {\n        maxNode._right = new this._TreeNodeClass(key, value);\n        maxNode._right._parent = maxNode;\n        curNode = maxNode._right;\n        this._header._right = curNode;\n      } else {\n        if (hint !== undefined) {\n          const iterNode = hint._node;\n          if (iterNode !== this._header) {\n            const iterCmpRes = this._cmp(iterNode._key, key);\n            if (iterCmpRes === 0) {\n              iterNode._value = value;\n              return this._length;\n            } else /* istanbul ignore else */if (iterCmpRes > 0) {\n                const preNode = iterNode._pre();\n                const preCmpRes = this._cmp(preNode._key, key);\n                if (preCmpRes === 0) {\n                  preNode._value = value;\n                  return this._length;\n                } else if (preCmpRes < 0) {\n                  curNode = new this._TreeNodeClass(key, value);\n                  if (preNode._right === undefined) {\n                    preNode._right = curNode;\n                    curNode._parent = preNode;\n                  } else {\n                    iterNode._left = curNode;\n                    curNode._parent = iterNode;\n                  }\n                }\n              }\n          }\n        }\n        if (curNode === undefined) {\n          curNode = this._root;\n          while (true) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult > 0) {\n              if (curNode._left === undefined) {\n                curNode._left = new this._TreeNodeClass(key, value);\n                curNode._left._parent = curNode;\n                curNode = curNode._left;\n                break;\n              }\n              curNode = curNode._left;\n            } else if (cmpResult < 0) {\n              if (curNode._right === undefined) {\n                curNode._right = new this._TreeNodeClass(key, value);\n                curNode._right._parent = curNode;\n                curNode = curNode._right;\n                break;\n              }\n              curNode = curNode._right;\n            } else {\n              curNode._value = value;\n              return this._length;\n            }\n          }\n        }\n      }\n    }\n    if (this.enableIndex) {\n      let parent = curNode._parent;\n      while (parent !== this._header) {\n        parent._subTreeSize += 1;\n        parent = parent._parent;\n      }\n    }\n    this._insertNodeSelfBalance(curNode);\n    this._length += 1;\n    return this._length;\n  }\n  /**\n   * @internal\n   */\n  _getTreeNodeByKey(curNode, key) {\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return curNode || this._header;\n  }\n  clear() {\n    this._length = 0;\n    this._root = undefined;\n    this._header._parent = undefined;\n    this._header._left = this._header._right = undefined;\n  }\n  /**\n   * @description Update node's key by iterator.\n   * @param iter - The iterator you want to change.\n   * @param key - The key you want to update.\n   * @returns Whether the modification is successful.\n   * @example\n   * const st = new orderedSet([1, 2, 5]);\n   * const iter = st.find(2);\n   * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n   */\n  updateKeyByIterator(iter, key) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    if (this._length === 1) {\n      node._key = key;\n      return true;\n    }\n    const nextKey = node._next()._key;\n    if (node === this._header._left) {\n      if (this._cmp(nextKey, key) > 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    const preKey = node._pre()._key;\n    if (node === this._header._right) {\n      if (this._cmp(preKey, key) < 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    if (this._cmp(preKey, key) >= 0 || this._cmp(nextKey, key) <= 0) return false;\n    node._key = key;\n    return true;\n  }\n  eraseElementByPos(pos) {\n    if (pos < 0 || pos > this._length - 1) {\n      throw new RangeError();\n    }\n    const node = this._inOrderTraversal(pos);\n    this._eraseNode(node);\n    return this._length;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key) {\n    if (this._length === 0) return false;\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    if (curNode === this._header) return false;\n    this._eraseNode(curNode);\n    return true;\n  }\n  eraseElementByIterator(iter) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    const hasNoRight = node._right === undefined;\n    const isNormal = iter.iteratorType === 0 /* IteratorType.NORMAL */;\n    // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n    if (isNormal) {\n      // So we should move it to next when it's right is null.\n      if (hasNoRight) iter.next();\n    } else {\n      // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n      // So when it has right, or it is a leaf node we should move it to `next`.\n      if (!hasNoRight || node._left === undefined) iter.next();\n    }\n    this._eraseNode(node);\n    return iter;\n  }\n  /**\n   * @description Get the height of the tree.\n   * @returns Number about the height of the RB-tree.\n   */\n  getHeight() {\n    if (this._length === 0) return 0;\n    function traversal(curNode) {\n      if (!curNode) return 0;\n      return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n    }\n    return traversal(this._root);\n  }\n}\n\nclass TreeIterator extends ContainerIterator {\n  /**\n   * @internal\n   */\n  constructor(node, header, iteratorType) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === 0 /* IteratorType.NORMAL */) {\n      this.pre = function () {\n        if (this._node === this._header._left) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this._header._right) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n    }\n  }\n  /**\n   * @description Get the sequential index of the iterator in the tree container.<br/>\n   *              <strong>Note:</strong>\n   *              This function only takes effect when the specified tree container `enableIndex = true`.\n   * @returns The index subscript of the node in the tree.\n   * @example\n   * const st = new OrderedSet([1, 2, 3], true);\n   * console.log(st.begin().next().index);  // 1\n   */\n  get index() {\n    let _node = this._node;\n    const root = this._header._parent;\n    if (_node === this._header) {\n      if (root) {\n        return root._subTreeSize - 1;\n      }\n      return 0;\n    }\n    let index = 0;\n    if (_node._left) {\n      index += _node._left._subTreeSize;\n    }\n    while (_node !== root) {\n      const _parent = _node._parent;\n      if (_node === _parent._right) {\n        index += 1;\n        if (_parent._left) {\n          index += _parent._left._subTreeSize;\n        }\n      }\n      _node = _parent;\n    }\n    return index;\n  }\n  isAccessible() {\n    return this._node !== this._header;\n  }\n}\n\nclass OrderedMapIterator extends TreeIterator {\n  constructor(node, header, container, iteratorType) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy([], {\n      get(target, prop) {\n        if (prop === '0') return self._node._key;else if (prop === '1') return self._node._value;\n        target[0] = self._node._key;\n        target[1] = self._node._value;\n        return target[prop];\n      },\n      set(_, prop, newValue) {\n        if (prop !== '1') {\n          throw new TypeError('prop must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new OrderedMapIterator(this._node, this._header, this.container, this.iteratorType);\n  }\n}\nclass OrderedMap extends TreeContainer {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedMap();\n   * new OrderedMap([[0, 1], [2, 1]]);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n   */\n  constructor(container = [], cmp, enableIndex) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new OrderedMapIterator(this._header._left || this._header, this._header, this);\n  }\n  end() {\n    return new OrderedMapIterator(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedMapIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n  }\n\n  rEnd() {\n    return new OrderedMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n  }\n\n  front() {\n    if (this._length === 0) return;\n    const minNode = this._header._left;\n    return [minNode._key, minNode._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    const maxNode = this._header._right;\n    return [maxNode._key, maxNode._value];\n  }\n  lowerBound(key) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedMapIterator(resNode, this._header, this);\n  }\n  upperBound(key) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedMapIterator(resNode, this._header, this);\n  }\n  reverseLowerBound(key) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedMapIterator(resNode, this._header, this);\n  }\n  reverseUpperBound(key) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedMapIterator(resNode, this._header, this);\n  }\n  forEach(callback) {\n    this._inOrderTraversal(function (node, index, map) {\n      callback([node._key, node._value], index, map);\n    });\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n   * const iter = mp.begin();\n   * mp.setElement(1, 0);\n   * mp.setElement(3, 0, iter);  // give a hint will be faster.\n   */\n  setElement(key, value, hint) {\n    return this._set(key, value, hint);\n  }\n  getElementByPos(pos) {\n    if (pos < 0 || pos > this._length - 1) {\n      throw new RangeError();\n    }\n    const node = this._inOrderTraversal(pos);\n    return [node._key, node._value];\n  }\n  find(key) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return new OrderedMapIterator(curNode, this._header, this);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The specified key you want to get.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return curNode._value;\n  }\n  union(other) {\n    const self = this;\n    other.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n    return this._length;\n  }\n  *[Symbol.iterator]() {\n    const length = this._length;\n    const nodeList = this._inOrderTraversal();\n    for (let i = 0; i < length; ++i) {\n      const node = nodeList[i];\n      yield [node._key, node._value];\n    }\n  }\n}\n\nexports.OrderedMap = OrderedMap;\n//# sourceMappingURL=index.js.map\n", "export const enum TreeNodeColor {\n  RED = 1,\n  BLACK = 0\n}\n\nexport class TreeNode<K, V> {\n  _color: TreeNodeColor;\n  _key: K | undefined;\n  _value: V | undefined;\n  _left: TreeNode<K, V> | undefined = undefined;\n  _right: TreeNode<K, V> | undefined = undefined;\n  _parent: TreeNode<K, V> | undefined = undefined;\n  constructor(\n    key?: K,\n    value?: V,\n    color: TreeNodeColor = TreeNodeColor.RED\n  ) {\n    this._key = key;\n    this._value = value;\n    this._color = color;\n  }\n  /**\n   * @description Get the pre node.\n   * @returns TreeNode about the pre node.\n   */\n  _pre() {\n    let preNode: TreeNode<K, V> = this;\n    const isRootOrHeader = preNode._parent!._parent === preNode;\n    if (isRootOrHeader && preNode._color === TreeNodeColor.RED) {\n      preNode = preNode._right!;\n    } else if (preNode._left) {\n      preNode = preNode._left;\n      while (preNode._right) {\n        preNode = preNode._right;\n      }\n    } else {\n      // Must be root and left is null\n      if (isRootOrHeader) {\n        return preNode._parent!;\n      }\n      let pre = preNode._parent!;\n      while (pre._left === preNode) {\n        preNode = pre;\n        pre = preNode._parent!;\n      }\n      preNode = pre;\n    }\n    return preNode;\n  }\n  /**\n   * @description Get the next node.\n   * @returns TreeNode about the next node.\n   */\n  _next() {\n    let nextNode: TreeNode<K, V> = this;\n    if (nextNode._right) {\n      nextNode = nextNode._right;\n      while (nextNode._left) {\n        nextNode = nextNode._left;\n      }\n      return nextNode;\n    } else {\n      let pre = nextNode._parent!;\n      while (pre._right === nextNode) {\n        nextNode = pre;\n        pre = nextNode._parent!;\n      }\n      if (nextNode._right !== pre) {\n        return pre;\n      } else return nextNode;\n    }\n  }\n  /**\n   * @description Rotate left.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const PP = this._parent!;\n    const V = this._right!;\n    const R = V._left;\n\n    if (PP._parent === this) PP._parent = V;\n    else if (PP._left === this) PP._left = V;\n    else PP._right = V;\n\n    V._parent = PP;\n    V._left = this;\n\n    this._parent = V;\n    this._right = R;\n\n    if (R) R._parent = this;\n\n    return V;\n  }\n  /**\n   * @description Rotate right.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const PP = this._parent!;\n    const F = this._left!;\n    const K = F._right;\n\n    if (PP._parent === this) PP._parent = F;\n    else if (PP._left === this) PP._left = F;\n    else PP._right = F;\n\n    F._parent = PP;\n    F._right = this;\n\n    this._parent = F;\n    this._left = K;\n\n    if (K) K._parent = this;\n\n    return F;\n  }\n}\n\nexport class TreeNodeEnableIndex<K, V> extends TreeNode<K, V> {\n  _subTreeSize = 1;\n  /**\n   * @description Rotate left and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const parent = super._rotateLeft() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  /**\n   * @description Rotate right and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const parent = super._rotateRight() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  _recount() {\n    this._subTreeSize = 1;\n    if (this._left) {\n      this._subTreeSize += (this._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    if (this._right) {\n      this._subTreeSize += (this._right as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n  }\n}\n", "/**\n * @description The iterator type including `NORMAL` and `REVERSE`.\n */\nexport const enum IteratorType {\n  NORMAL = 0,\n  REVERSE = 1\n}\n\nexport abstract class ContainerIterator<T> {\n  /**\n   * @description The container pointed to by the iterator.\n   */\n  abstract readonly container: Container<T>;\n  /**\n   * @internal\n   */\n  abstract _node: unknown;\n  /**\n   * @description Iterator's type.\n   * @example\n   * console.log(container.end().iteratorType === IteratorType.NORMAL);  // true\n   */\n  readonly iteratorType: IteratorType;\n  /**\n   * @internal\n   */\n  protected constructor(iteratorType = IteratorType.NORMAL) {\n    this.iteratorType = iteratorType;\n  }\n  /**\n   * @param iter - The other iterator you want to compare.\n   * @returns Whether this equals to obj.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  equals(iter: ContainerIterator<T>) {\n    return this._node === iter._node;\n  }\n  /**\n   * @description Pointers to element.\n   * @returns The value of the pointer's element.\n   * @example\n   * const val = container.begin().pointer;\n   */\n  abstract get pointer(): T;\n  /**\n   * @description Set pointer's value (some containers are unavailable).\n   * @param newValue - The new value you want to set.\n   * @example\n   * (<LinkList<number>>container).begin().pointer = 1;\n   */\n  abstract set pointer(newValue: T);\n  /**\n   * @description Move `this` iterator to pre.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [0, 1]\n   * const pre = iter.pre();\n   * console.log(pre === iter);  // true\n   * console.log(pre.equals(iter));  // true\n   * console.log(pre.pointer, iter.pointer); // 0, 0\n   */\n  abstract pre(): this;\n  /**\n   * @description Move `this` iterator to next.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.next();\n   * console.log(next === iter);  // true\n   * console.log(next.equals(iter));  // true\n   * console.log(next.pointer, iter.pointer); // 2, 2\n   */\n  abstract next(): this;\n  /**\n   * @description Get a copy of itself.\n   * @returns The copy of self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.copy().next();\n   * console.log(next === iter);  // false\n   * console.log(next.equals(iter));  // false\n   * console.log(next.pointer, iter.pointer); // 2, 1\n   */\n  abstract copy(): ContainerIterator<T>;\n  abstract isAccessible(): boolean;\n}\n\nexport abstract class Base {\n  /**\n   * @description Container's size.\n   * @internal\n   */\n  protected _length = 0;\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.length); // 2\n   */\n  get length() {\n    return this._length;\n  }\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.size()); // 2\n   */\n  size() {\n    return this._length;\n  }\n  /**\n   * @returns Whether the container is empty.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  empty() {\n    return this._length === 0;\n  }\n  /**\n   * @description Clear the container.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  abstract clear(): void;\n}\n\nexport abstract class Container<T> extends Base {\n  /**\n   * @returns Iterator pointing to the beginning element.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract begin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super end like c++.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract end(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the end element.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rBegin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super begin like c++.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rEnd(): ContainerIterator<T>;\n  /**\n   * @returns The first element of the container.\n   */\n  abstract front(): T | undefined;\n  /**\n   * @returns The last element of the container.\n   */\n  abstract back(): T | undefined;\n  /**\n   * @param element - The element you want to find.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  abstract find(element: T): ContainerIterator<T>;\n  /**\n   * @description Iterate over all elements in the container.\n   * @param callback - Callback function like Array.forEach.\n   * @example\n   * container.forEach((element, index) => console.log(element, index));\n   */\n  abstract forEach(callback: (element: T, index: number, container: Container<T>) => void): void;\n  /**\n   * @description Gets the value of the element at the specified position.\n   * @example\n   * const val = container.getElementByPos(-1); // throw a RangeError\n   */\n  abstract getElementByPos(pos: number): T;\n  /**\n   * @description Removes the element at the specified position.\n   * @param pos - The element's position you want to remove.\n   * @returns The container length after erasing.\n   * @example\n   * container.eraseElementByPos(-1); // throw a RangeError\n   */\n  abstract eraseElementByPos(pos: number): number;\n  /**\n   * @description Removes element by iterator and move `iter` to next.\n   * @param iter - The iterator you want to erase.\n   * @returns The next iterator.\n   * @example\n   * container.eraseElementByIterator(container.begin());\n   * container.eraseElementByIterator(container.end()); // throw a RangeError\n   */\n  abstract eraseElementByIterator(\n    iter: ContainerIterator<T>\n  ): ContainerIterator<T>;\n  /**\n   * @description Using for `for...of` syntax like Array.\n   * @example\n   * for (const element of container) {\n   *   console.log(element);\n   * }\n   */\n  abstract [Symbol.iterator](): Generator<T, void>;\n}\n\n/**\n * @description The initial data type passed in when initializing the container.\n */\nexport type initContainer<T> = {\n  size?: number | (() => number);\n  length?: number;\n  forEach: (callback: (el: T) => void) => void;\n}\n", "/**\n * @description Throw an iterator access error.\n * @internal\n */\nexport function throwIteratorAccessError() {\n  throw new RangeError('Iterator access denied!');\n}\n", "import type TreeIterator from './TreeIterator';\nimport { TreeNode, TreeNodeColor, TreeNodeEnableIndex } from './TreeNode';\nimport { Container, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeContainer<K, V> extends Container<K | [K, V]> {\n  enableIndex: boolean;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _root: TreeNode<K, V> | undefined = undefined;\n  /**\n   * @internal\n   */\n  protected readonly _cmp: (x: K, y: K) => number;\n  /**\n   * @internal\n   */\n  protected readonly _TreeNodeClass: typeof TreeNode | typeof TreeNodeEnableIndex;\n  /**\n   * @internal\n   */\n  protected constructor(\n    cmp: (x: K, y: K) => number =\n    function (x: K, y: K) {\n      if (x < y) return -1;\n      if (x > y) return 1;\n      return 0;\n    },\n    enableIndex = false\n  ) {\n    super();\n    this._cmp = cmp;\n    this.enableIndex = enableIndex;\n    this._TreeNodeClass = enableIndex ? TreeNodeEnableIndex : TreeNode;\n    this._header = new this._TreeNodeClass();\n  }\n  /**\n   * @internal\n   */\n  protected _lowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        resNode = curNode;\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _upperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult <= 0) {\n        curNode = curNode._right;\n      } else {\n        resNode = curNode;\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseLowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseUpperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else {\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode === this._header) return;\n      if (curNode._color === TreeNodeColor.RED) {\n        curNode._color = TreeNodeColor.BLACK;\n        return;\n      }\n      if (curNode === parentNode._left) {\n        const brother = parentNode._right!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateLeft();\n          } else parentNode._rotateLeft();\n        } else {\n          if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._right._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateLeft();\n            } else parentNode._rotateLeft();\n            return;\n          } else if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._left._color = TreeNodeColor.BLACK;\n            brother._rotateRight();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      } else {\n        const brother = parentNode._left!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateRight();\n          } else parentNode._rotateRight();\n        } else {\n          if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._left._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateRight();\n            } else parentNode._rotateRight();\n            return;\n          } else if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._right._color = TreeNodeColor.BLACK;\n            brother._rotateLeft();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNode(curNode: TreeNode<K, V>) {\n    if (this._length === 1) {\n      this.clear();\n      return;\n    }\n    let swapNode = curNode;\n    while (swapNode._left || swapNode._right) {\n      if (swapNode._right) {\n        swapNode = swapNode._right;\n        while (swapNode._left) swapNode = swapNode._left;\n      } else {\n        swapNode = swapNode._left!;\n      }\n      const key = curNode._key;\n      curNode._key = swapNode._key;\n      swapNode._key = key;\n      const value = curNode._value;\n      curNode._value = swapNode._value;\n      swapNode._value = value;\n      curNode = swapNode;\n    }\n    if (this._header._left === swapNode) {\n      this._header._left = swapNode._parent;\n    } else if (this._header._right === swapNode) {\n      this._header._right = swapNode._parent;\n    }\n    this._eraseNodeSelfBalance(swapNode);\n    let _parent = swapNode._parent as TreeNodeEnableIndex<K, V>;\n    if (swapNode === _parent._left) {\n      _parent._left = undefined;\n    } else _parent._right = undefined;\n    this._length -= 1;\n    this._root!._color = TreeNodeColor.BLACK;\n    if (this.enableIndex) {\n      while (_parent !== this._header) {\n        _parent._subTreeSize -= 1;\n        _parent = _parent._parent as TreeNodeEnableIndex<K, V>;\n      }\n    }\n  }\n  protected _inOrderTraversal(): TreeNode<K, V>[];\n  protected _inOrderTraversal(pos: number): TreeNode<K, V>;\n  protected _inOrderTraversal(\n    callback: (node: TreeNode<K, V>, index: number, map: this) => void\n  ): TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _inOrderTraversal(\n    param?: number | ((node: TreeNode<K, V>, index: number, map: this) => void)\n  ) {\n    const pos = typeof param === 'number' ? param : undefined;\n    const callback = typeof param === 'function' ? param : undefined;\n    const nodeList = typeof param === 'undefined' ? <TreeNode<K, V>[]>[] : undefined;\n    let index = 0;\n    let curNode = this._root;\n    const stack: TreeNode<K, V>[] = [];\n    while (stack.length || curNode) {\n      if (curNode) {\n        stack.push(curNode);\n        curNode = curNode._left;\n      } else {\n        curNode = stack.pop()!;\n        if (index === pos) return curNode;\n        nodeList && nodeList.push(curNode);\n        callback && callback(curNode, index, this);\n        index += 1;\n        curNode = curNode._right;\n      }\n    }\n    return nodeList;\n  }\n  /**\n   * @internal\n   */\n  protected _insertNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode._color === TreeNodeColor.BLACK) return;\n      const grandParent = parentNode._parent!;\n      if (parentNode === grandParent._left) {\n        const uncle = grandParent._right;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._right) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) {\n            curNode._left._parent = parentNode;\n          }\n          if (curNode._right) {\n            curNode._right._parent = grandParent;\n          }\n          parentNode._right = curNode._left;\n          grandParent._left = curNode._right;\n          curNode._left = parentNode;\n          curNode._right = grandParent;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateRight();\n          } else grandParent._rotateRight();\n          grandParent._color = TreeNodeColor.RED;\n          return;\n        }\n      } else {\n        const uncle = grandParent._left;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._left) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) {\n            curNode._left._parent = grandParent;\n          }\n          if (curNode._right) {\n            curNode._right._parent = parentNode;\n          }\n          grandParent._right = curNode._left;\n          parentNode._left = curNode._right;\n          curNode._left = grandParent;\n          curNode._right = parentNode;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateLeft();\n          } else grandParent._rotateLeft();\n          grandParent._color = TreeNodeColor.RED;\n          return;\n        }\n      }\n      if (this.enableIndex) {\n        (<TreeNodeEnableIndex<K, V>>parentNode)._recount();\n        (<TreeNodeEnableIndex<K, V>>grandParent)._recount();\n        (<TreeNodeEnableIndex<K, V>>curNode)._recount();\n      }\n      return;\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _set(key: K, value?: V, hint?: TreeIterator<K, V>) {\n    if (this._root === undefined) {\n      this._length += 1;\n      this._root = new this._TreeNodeClass(key, value, TreeNodeColor.BLACK);\n      this._root._parent = this._header;\n      this._header._parent = this._header._left = this._header._right = this._root;\n      return this._length;\n    }\n    let curNode;\n    const minNode = this._header._left!;\n    const compareToMin = this._cmp(minNode._key!, key);\n    if (compareToMin === 0) {\n      minNode._value = value;\n      return this._length;\n    } else if (compareToMin > 0) {\n      minNode._left = new this._TreeNodeClass(key, value);\n      minNode._left._parent = minNode;\n      curNode = minNode._left;\n      this._header._left = curNode;\n    } else {\n      const maxNode = this._header._right!;\n      const compareToMax = this._cmp(maxNode._key!, key);\n      if (compareToMax === 0) {\n        maxNode._value = value;\n        return this._length;\n      } else if (compareToMax < 0) {\n        maxNode._right = new this._TreeNodeClass(key, value);\n        maxNode._right._parent = maxNode;\n        curNode = maxNode._right;\n        this._header._right = curNode;\n      } else {\n        if (hint !== undefined) {\n          const iterNode = hint._node;\n          if (iterNode !== this._header) {\n            const iterCmpRes = this._cmp(iterNode._key!, key);\n            if (iterCmpRes === 0) {\n              iterNode._value = value;\n              return this._length;\n            } else /* istanbul ignore else */ if (iterCmpRes > 0) {\n              const preNode = iterNode._pre();\n              const preCmpRes = this._cmp(preNode._key!, key);\n              if (preCmpRes === 0) {\n                preNode._value = value;\n                return this._length;\n              } else if (preCmpRes < 0) {\n                curNode = new this._TreeNodeClass(key, value);\n                if (preNode._right === undefined) {\n                  preNode._right = curNode;\n                  curNode._parent = preNode;\n                } else {\n                  iterNode._left = curNode;\n                  curNode._parent = iterNode;\n                }\n              }\n            }\n          }\n        }\n        if (curNode === undefined) {\n          curNode = this._root;\n          while (true) {\n            const cmpResult = this._cmp(curNode._key!, key);\n            if (cmpResult > 0) {\n              if (curNode._left === undefined) {\n                curNode._left = new this._TreeNodeClass(key, value);\n                curNode._left._parent = curNode;\n                curNode = curNode._left;\n                break;\n              }\n              curNode = curNode._left;\n            } else if (cmpResult < 0) {\n              if (curNode._right === undefined) {\n                curNode._right = new this._TreeNodeClass(key, value);\n                curNode._right._parent = curNode;\n                curNode = curNode._right;\n                break;\n              }\n              curNode = curNode._right;\n            } else {\n              curNode._value = value;\n              return this._length;\n            }\n          }\n        }\n      }\n    }\n    if (this.enableIndex) {\n      let parent = curNode._parent as TreeNodeEnableIndex<K, V>;\n      while (parent !== this._header) {\n        parent._subTreeSize += 1;\n        parent = parent._parent as TreeNodeEnableIndex<K, V>;\n      }\n    }\n    this._insertNodeSelfBalance(curNode);\n    this._length += 1;\n    return this._length;\n  }\n  /**\n   * @internal\n   */\n  protected _getTreeNodeByKey(curNode: TreeNode<K, V> | undefined, key: K) {\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return curNode || this._header;\n  }\n  clear() {\n    this._length = 0;\n    this._root = undefined;\n    this._header._parent = undefined;\n    this._header._left = this._header._right = undefined;\n  }\n  /**\n   * @description Update node's key by iterator.\n   * @param iter - The iterator you want to change.\n   * @param key - The key you want to update.\n   * @returns Whether the modification is successful.\n   * @example\n   * const st = new orderedSet([1, 2, 5]);\n   * const iter = st.find(2);\n   * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n   */\n  updateKeyByIterator(iter: TreeIterator<K, V>, key: K): boolean {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    if (this._length === 1) {\n      node._key = key;\n      return true;\n    }\n    const nextKey = node._next()._key!;\n    if (node === this._header._left) {\n      if (this._cmp(nextKey, key) > 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    const preKey = node._pre()._key!;\n    if (node === this._header._right) {\n      if (this._cmp(preKey, key) < 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    if (\n      this._cmp(preKey, key) >= 0 ||\n      this._cmp(nextKey, key) <= 0\n    ) return false;\n    node._key = key;\n    return true;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    this._eraseNode(node);\n    return this._length;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key: K) {\n    if (this._length === 0) return false;\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    if (curNode === this._header) return false;\n    this._eraseNode(curNode);\n    return true;\n  }\n  eraseElementByIterator(iter: TreeIterator<K, V>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    const hasNoRight = node._right === undefined;\n    const isNormal = iter.iteratorType === IteratorType.NORMAL;\n    // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n    if (isNormal) {\n      // So we should move it to next when it's right is null.\n      if (hasNoRight) iter.next();\n    } else {\n      // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n      // So when it has right, or it is a leaf node we should move it to `next`.\n      if (!hasNoRight || node._left === undefined) iter.next();\n    }\n    this._eraseNode(node);\n    return iter;\n  }\n  /**\n   * @description Get the height of the tree.\n   * @returns Number about the height of the RB-tree.\n   */\n  getHeight() {\n    if (this._length === 0) return 0;\n    function traversal(curNode: TreeNode<K, V> | undefined): number {\n      if (!curNode) return 0;\n      return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n    }\n    return traversal(this._root);\n  }\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element less than the given key.\n   */\n  abstract reverseUpperBound(key: K): TreeIterator<K, V>;\n  /**\n   * @description Union the other tree to self.\n   * @param other - The other tree container you want to merge.\n   * @returns The size of the tree after union.\n   */\n  abstract union(other: TreeContainer<K, V>): number;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not greater than the given key.\n   */\n  abstract reverseLowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not less than the given key.\n   */\n  abstract lowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element greater than the given key.\n   */\n  abstract upperBound(key: K): TreeIterator<K, V>;\n}\n\nexport default TreeContainer;\n", "import { TreeNode } from './TreeNode';\nimport type { TreeNodeEnableIndex } from './TreeNode';\nimport { ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport TreeContainer from '@/container/TreeContainer/Base/index';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeIterator<K, V> extends ContainerIterator<K | [K, V]> {\n  abstract readonly container: TreeContainer<K, V>;\n  /**\n   * @internal\n   */\n  _node: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node === this._header._left) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this._header._right) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n    }\n  }\n  /**\n   * @description Get the sequential index of the iterator in the tree container.<br/>\n   *              <strong>Note:</strong>\n   *              This function only takes effect when the specified tree container `enableIndex = true`.\n   * @returns The index subscript of the node in the tree.\n   * @example\n   * const st = new OrderedSet([1, 2, 3], true);\n   * console.log(st.begin().next().index);  // 1\n   */\n  get index() {\n    let _node = this._node as TreeNodeEnableIndex<K, V>;\n    const root = this._header._parent as TreeNodeEnableIndex<K, V>;\n    if (_node === this._header) {\n      if (root) {\n        return root._subTreeSize - 1;\n      }\n      return 0;\n    }\n    let index = 0;\n    if (_node._left) {\n      index += (_node._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    while (_node !== root) {\n      const _parent = _node._parent as TreeNodeEnableIndex<K, V>;\n      if (_node === _parent._right) {\n        index += 1;\n        if (_parent._left) {\n          index += (_parent._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n        }\n      }\n      _node = _parent;\n    }\n    return index;\n  }\n  isAccessible() {\n    return this._node !== this._header;\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport default TreeIterator;\n", "import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedMapIterator<K, V> extends TreeIterator<K, V> {\n  container: OrderedMap<K, V>;\n  constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    container: OrderedMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(target, prop: '0' | '1') {\n        if (prop === '0') return self._node._key!;\n        else if (prop === '1') return self._node._value!;\n        target[0] = self._node._key!;\n        target[1] = self._node._value!;\n        return target[prop];\n      },\n      set(_, prop: '1', newValue: V) {\n        if (prop !== '1') {\n          throw new TypeError('prop must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new OrderedMapIterator<K, V>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedMapIterator<K, V>): boolean;\n}\n\nexport type { OrderedMapIterator };\n\nclass OrderedMap<K, V> extends TreeContainer<K, V> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedMap();\n   * new OrderedMap([[0, 1], [2, 1]]);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<[K, V]> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new OrderedMapIterator<K, V>(this._header._left || this._header, this._header, this);\n  }\n  end() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedMapIterator<K, V>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    const minNode = this._header._left!;\n    return <[K, V]>[minNode._key, minNode._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    const maxNode = this._header._right!;\n    return <[K, V]>[maxNode._key, maxNode._value];\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, map: OrderedMap<K, V>) => void) {\n    this._inOrderTraversal(function (node, index, map) {\n      callback(<[K, V]>[node._key, node._value], index, map);\n    });\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n   * const iter = mp.begin();\n   * mp.setElement(1, 0);\n   * mp.setElement(3, 0, iter);  // give a hint will be faster.\n   */\n  setElement(key: K, value: V, hint?: OrderedMapIterator<K, V>) {\n    return this._set(key, value, hint);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    return <[K, V]>[node._key, node._value];\n  }\n  find(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return new OrderedMapIterator<K, V>(curNode, this._header, this);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The specified key you want to get.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return curNode._value;\n  }\n  union(other: OrderedMap<K, V>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n    return this._length;\n  }\n  * [Symbol.iterator]() {\n    const length = this._length;\n    const nodeList = this._inOrderTraversal();\n    for (let i = 0; i < length; ++i) {\n      const node = nodeList[i];\n      yield <[K, V]>[node._key, node._value];\n    }\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedMapIterator<K, V>): OrderedMapIterator<K, V>;\n}\n\nexport default OrderedMap;\n", "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ServiceDefinition } from './make-client';\nimport { Server, UntypedServiceImplementation } from './server';\n\ninterface GetServiceDefinition {\n  (): ServiceDefinition;\n}\n\ninterface GetHandlers {\n  (): UntypedServiceImplementation;\n}\n\nconst registeredAdminServices: {\n  getServiceDefinition: GetServiceDefinition;\n  getHandlers: GetHandlers;\n}[] = [];\n\nexport function registerAdminService(\n  getServiceDefinition: GetServiceDefinition,\n  getHandlers: GetHandlers\n) {\n  registeredAdminServices.push({ getServiceDefinition, getHandlers });\n}\n\nexport function addAdminServicesToServer(server: Server): void {\n  for (const { getServiceDefinition, getHandlers } of registeredAdminServices) {\n    server.addService(getServiceDefinition(), getHandlers());\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { EventEmitter } from 'events';\nimport { Duplex, Readable, Writable } from 'stream';\n\nimport { StatusObject, MessageContext } from './call-interface';\nimport { Status } from './constants';\nimport { EmitterAugmentation1 } from './events';\nimport { Metadata } from './metadata';\nimport { ObjectReadable, ObjectWritable, WriteCallback } from './object-stream';\nimport { InterceptingCallInterface } from './client-interceptors';\n\n/**\n * A type extending the built-in Error object with additional fields.\n */\nexport type ServiceError = StatusObject & Error;\n\n/**\n * A base type for all user-facing values returned by client-side method calls.\n */\nexport type SurfaceCall = {\n  call?: InterceptingCallInterface;\n  cancel(): void;\n  getPeer(): string;\n} & EmitterAugmentation1<'metadata', Metadata> &\n  EmitterAugmentation1<'status', StatusObject> &\n  EventEmitter;\n\n/**\n * A type representing the return value of a unary method call.\n */\nexport type ClientUnaryCall = SurfaceCall;\n\n/**\n * A type representing the return value of a server stream method call.\n */\nexport type ClientReadableStream<ResponseType> = {\n  deserialize: (chunk: Buffer) => ResponseType;\n} & SurfaceCall &\n  ObjectReadable<ResponseType>;\n\n/**\n * A type representing the return value of a client stream method call.\n */\nexport type ClientWritableStream<RequestType> = {\n  serialize: (value: RequestType) => Buffer;\n} & SurfaceCall &\n  ObjectWritable<RequestType>;\n\n/**\n * A type representing the return value of a bidirectional stream method call.\n */\nexport type ClientDuplexStream<RequestType, ResponseType> =\n  ClientWritableStream<RequestType> & ClientReadableStream<ResponseType>;\n\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nexport function callErrorFromStatus(\n  status: StatusObject,\n  callerStack: string\n): ServiceError {\n  const message = `${status.code} ${Status[status.code]}: ${status.details}`;\n  const error = new Error(message);\n  const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n  return Object.assign(new Error(message), status, { stack });\n}\n\nexport class ClientUnaryCallImpl\n  extends EventEmitter\n  implements ClientUnaryCall\n{\n  public call?: InterceptingCallInterface;\n  constructor() {\n    super();\n  }\n\n  cancel(): void {\n    this.call?.cancelWithStatus(Status.CANCELLED, 'Cancelled on client');\n  }\n\n  getPeer(): string {\n    return this.call?.getPeer() ?? 'unknown';\n  }\n}\n\nexport class ClientReadableStreamImpl<ResponseType>\n  extends Readable\n  implements ClientReadableStream<ResponseType>\n{\n  public call?: InterceptingCallInterface;\n  constructor(readonly deserialize: (chunk: Buffer) => ResponseType) {\n    super({ objectMode: true });\n  }\n\n  cancel(): void {\n    this.call?.cancelWithStatus(Status.CANCELLED, 'Cancelled on client');\n  }\n\n  getPeer(): string {\n    return this.call?.getPeer() ?? 'unknown';\n  }\n\n  _read(_size: number): void {\n    this.call?.startRead();\n  }\n}\n\nexport class ClientWritableStreamImpl<RequestType>\n  extends Writable\n  implements ClientWritableStream<RequestType>\n{\n  public call?: InterceptingCallInterface;\n  constructor(readonly serialize: (value: RequestType) => Buffer) {\n    super({ objectMode: true });\n  }\n\n  cancel(): void {\n    this.call?.cancelWithStatus(Status.CANCELLED, 'Cancelled on client');\n  }\n\n  getPeer(): string {\n    return this.call?.getPeer() ?? 'unknown';\n  }\n\n  _write(chunk: RequestType, encoding: string, cb: WriteCallback) {\n    const context: MessageContext = {\n      callback: cb,\n    };\n    const flags = Number(encoding);\n    if (!Number.isNaN(flags)) {\n      context.flags = flags;\n    }\n    this.call?.sendMessageWithContext(context, chunk);\n  }\n\n  _final(cb: Function) {\n    this.call?.halfClose();\n    cb();\n  }\n}\n\nexport class ClientDuplexStreamImpl<RequestType, ResponseType>\n  extends Duplex\n  implements ClientDuplexStream<RequestType, ResponseType>\n{\n  public call?: InterceptingCallInterface;\n  constructor(\n    readonly serialize: (value: RequestType) => Buffer,\n    readonly deserialize: (chunk: Buffer) => ResponseType\n  ) {\n    super({ objectMode: true });\n  }\n\n  cancel(): void {\n    this.call?.cancelWithStatus(Status.CANCELLED, 'Cancelled on client');\n  }\n\n  getPeer(): string {\n    return this.call?.getPeer() ?? 'unknown';\n  }\n\n  _read(_size: number): void {\n    this.call?.startRead();\n  }\n\n  _write(chunk: RequestType, encoding: string, cb: WriteCallback) {\n    const context: MessageContext = {\n      callback: cb,\n    };\n    const flags = Number(encoding);\n    if (!Number.isNaN(flags)) {\n      context.flags = flags;\n    }\n    this.call?.sendMessageWithContext(context, chunk);\n  }\n\n  _final(cb: Function) {\n    this.call?.halfClose();\n    cb();\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CallCredentials } from './call-credentials';\nimport { Status } from './constants';\nimport { Deadline } from './deadline';\nimport { Metadata } from './metadata';\nimport { ServerSurfaceCall } from './server-call';\n\nexport interface CallStreamOptions {\n  deadline: Deadline;\n  flags: number;\n  host: string;\n  parentCall: ServerSurfaceCall | null;\n}\n\nexport type PartialCallStreamOptions = Partial<CallStreamOptions>;\n\nexport interface StatusObject {\n  code: Status;\n  details: string;\n  metadata: Metadata;\n}\n\nexport type PartialStatusObject = Pick<StatusObject, 'code' | 'details'> & {\n  metadata?: Metadata | null | undefined;\n};\n\nexport const enum WriteFlags {\n  BufferHint = 1,\n  NoCompress = 2,\n  WriteThrough = 4,\n}\n\nexport interface WriteObject {\n  message: Buffer;\n  flags?: number;\n}\n\nexport interface MetadataListener {\n  (metadata: Metadata, next: (metadata: Metadata) => void): void;\n}\n\nexport interface MessageListener {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (message: any, next: (message: any) => void): void;\n}\n\nexport interface StatusListener {\n  (status: StatusObject, next: (status: StatusObject) => void): void;\n}\n\nexport interface FullListener {\n  onReceiveMetadata: MetadataListener;\n  onReceiveMessage: MessageListener;\n  onReceiveStatus: StatusListener;\n}\n\nexport type Listener = Partial<FullListener>;\n\n/**\n * An object with methods for handling the responses to a call.\n */\nexport interface InterceptingListener {\n  onReceiveMetadata(metadata: Metadata): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onReceiveMessage(message: any): void;\n  onReceiveStatus(status: StatusObject): void;\n}\n\nexport function isInterceptingListener(\n  listener: Listener | InterceptingListener\n): listener is InterceptingListener {\n  return (\n    listener.onReceiveMetadata !== undefined &&\n    listener.onReceiveMetadata.length === 1\n  );\n}\n\nexport class InterceptingListenerImpl implements InterceptingListener {\n  private processingMetadata = false;\n  private hasPendingMessage = false;\n  private pendingMessage: any;\n  private processingMessage = false;\n  private pendingStatus: StatusObject | null = null;\n  constructor(\n    private listener: FullListener,\n    private nextListener: InterceptingListener\n  ) {}\n\n  private processPendingMessage() {\n    if (this.hasPendingMessage) {\n      this.nextListener.onReceiveMessage(this.pendingMessage);\n      this.pendingMessage = null;\n      this.hasPendingMessage = false;\n    }\n  }\n\n  private processPendingStatus() {\n    if (this.pendingStatus) {\n      this.nextListener.onReceiveStatus(this.pendingStatus);\n    }\n  }\n\n  onReceiveMetadata(metadata: Metadata): void {\n    this.processingMetadata = true;\n    this.listener.onReceiveMetadata(metadata, metadata => {\n      this.processingMetadata = false;\n      this.nextListener.onReceiveMetadata(metadata);\n      this.processPendingMessage();\n      this.processPendingStatus();\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onReceiveMessage(message: any): void {\n    /* If this listener processes messages asynchronously, the last message may\n     * be reordered with respect to the status */\n    this.processingMessage = true;\n    this.listener.onReceiveMessage(message, msg => {\n      this.processingMessage = false;\n      if (this.processingMetadata) {\n        this.pendingMessage = msg;\n        this.hasPendingMessage = true;\n      } else {\n        this.nextListener.onReceiveMessage(msg);\n        this.processPendingStatus();\n      }\n    });\n  }\n  onReceiveStatus(status: StatusObject): void {\n    this.listener.onReceiveStatus(status, processedStatus => {\n      if (this.processingMetadata || this.processingMessage) {\n        this.pendingStatus = processedStatus;\n      } else {\n        this.nextListener.onReceiveStatus(processedStatus);\n      }\n    });\n  }\n}\n\nexport interface WriteCallback {\n  (error?: Error | null): void;\n}\n\nexport interface MessageContext {\n  callback?: WriteCallback;\n  flags?: number;\n}\n\nexport interface Call {\n  cancelWithStatus(status: Status, details: string): void;\n  getPeer(): string;\n  start(metadata: Metadata, listener: InterceptingListener): void;\n  sendMessageWithContext(context: MessageContext, message: Buffer): void;\n  startRead(): void;\n  halfClose(): void;\n  getCallNumber(): number;\n  setCredentials(credentials: CallCredentials): void;\n}\n\nexport interface DeadlineInfoProvider {\n  getDeadlineInfo(): string[];\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Metadata } from './metadata';\nimport {\n  StatusObject,\n  Listener,\n  MetadataListener,\n  MessageListener,\n  StatusListener,\n  FullListener,\n  InterceptingListener,\n  InterceptingListenerImpl,\n  isInterceptingListener,\n  MessageContext,\n  Call,\n} from './call-interface';\nimport { Status } from './constants';\nimport { Channel } from './channel';\nimport { CallOptions } from './client';\nimport { ClientMethodDefinition } from './make-client';\nimport { getErrorMessage } from './error';\n\n/**\n * Error class associated with passing both interceptors and interceptor\n * providers to a client constructor or as call options.\n */\nexport class InterceptorConfigurationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InterceptorConfigurationError';\n    Error.captureStackTrace(this, InterceptorConfigurationError);\n  }\n}\n\nexport interface MetadataRequester {\n  (\n    metadata: Metadata,\n    listener: InterceptingListener,\n    next: (\n      metadata: Metadata,\n      listener: InterceptingListener | Listener\n    ) => void\n  ): void;\n}\n\nexport interface MessageRequester {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (message: any, next: (message: any) => void): void;\n}\n\nexport interface CloseRequester {\n  (next: () => void): void;\n}\n\nexport interface CancelRequester {\n  (next: () => void): void;\n}\n\n/**\n * An object with methods for intercepting and modifying outgoing call operations.\n */\nexport interface FullRequester {\n  start: MetadataRequester;\n  sendMessage: MessageRequester;\n  halfClose: CloseRequester;\n  cancel: CancelRequester;\n}\n\nexport type Requester = Partial<FullRequester>;\n\nexport class ListenerBuilder {\n  private metadata: MetadataListener | undefined = undefined;\n  private message: MessageListener | undefined = undefined;\n  private status: StatusListener | undefined = undefined;\n\n  withOnReceiveMetadata(onReceiveMetadata: MetadataListener): this {\n    this.metadata = onReceiveMetadata;\n    return this;\n  }\n\n  withOnReceiveMessage(onReceiveMessage: MessageListener): this {\n    this.message = onReceiveMessage;\n    return this;\n  }\n\n  withOnReceiveStatus(onReceiveStatus: StatusListener): this {\n    this.status = onReceiveStatus;\n    return this;\n  }\n\n  build(): Listener {\n    return {\n      onReceiveMetadata: this.metadata,\n      onReceiveMessage: this.message,\n      onReceiveStatus: this.status,\n    };\n  }\n}\n\nexport class RequesterBuilder {\n  private start: MetadataRequester | undefined = undefined;\n  private message: MessageRequester | undefined = undefined;\n  private halfClose: CloseRequester | undefined = undefined;\n  private cancel: CancelRequester | undefined = undefined;\n\n  withStart(start: MetadataRequester): this {\n    this.start = start;\n    return this;\n  }\n\n  withSendMessage(sendMessage: MessageRequester): this {\n    this.message = sendMessage;\n    return this;\n  }\n\n  withHalfClose(halfClose: CloseRequester): this {\n    this.halfClose = halfClose;\n    return this;\n  }\n\n  withCancel(cancel: CancelRequester): this {\n    this.cancel = cancel;\n    return this;\n  }\n\n  build(): Requester {\n    return {\n      start: this.start,\n      sendMessage: this.message,\n      halfClose: this.halfClose,\n      cancel: this.cancel,\n    };\n  }\n}\n\n/**\n * A Listener with a default pass-through implementation of each method. Used\n * for filling out Listeners with some methods omitted.\n */\nconst defaultListener: FullListener = {\n  onReceiveMetadata: (metadata, next) => {\n    next(metadata);\n  },\n  onReceiveMessage: (message, next) => {\n    next(message);\n  },\n  onReceiveStatus: (status, next) => {\n    next(status);\n  },\n};\n\n/**\n * A Requester with a default pass-through implementation of each method. Used\n * for filling out Requesters with some methods omitted.\n */\nconst defaultRequester: FullRequester = {\n  start: (metadata, listener, next) => {\n    next(metadata, listener);\n  },\n  sendMessage: (message, next) => {\n    next(message);\n  },\n  halfClose: next => {\n    next();\n  },\n  cancel: next => {\n    next();\n  },\n};\n\nexport interface InterceptorOptions extends CallOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  method_definition: ClientMethodDefinition<any, any>;\n}\n\nexport interface InterceptingCallInterface {\n  cancelWithStatus(status: Status, details: string): void;\n  getPeer(): string;\n  start(metadata: Metadata, listener?: Partial<InterceptingListener>): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessageWithContext(context: MessageContext, message: any): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessage(message: any): void;\n  startRead(): void;\n  halfClose(): void;\n}\n\nexport class InterceptingCall implements InterceptingCallInterface {\n  /**\n   * The requester that this InterceptingCall uses to modify outgoing operations\n   */\n  private requester: FullRequester;\n  /**\n   * Indicates that metadata has been passed to the requester's start\n   * method but it has not been passed to the corresponding next callback\n   */\n  private processingMetadata = false;\n  /**\n   * Message context for a pending message that is waiting for\n   */\n  private pendingMessageContext: MessageContext | null = null;\n  private pendingMessage: any;\n  /**\n   * Indicates that a message has been passed to the requester's sendMessage\n   * method but it has not been passed to the corresponding next callback\n   */\n  private processingMessage = false;\n  /**\n   * Indicates that a status was received but could not be propagated because\n   * a message was still being processed.\n   */\n  private pendingHalfClose = false;\n  constructor(\n    private nextCall: InterceptingCallInterface,\n    requester?: Requester\n  ) {\n    if (requester) {\n      this.requester = {\n        start: requester.start ?? defaultRequester.start,\n        sendMessage: requester.sendMessage ?? defaultRequester.sendMessage,\n        halfClose: requester.halfClose ?? defaultRequester.halfClose,\n        cancel: requester.cancel ?? defaultRequester.cancel,\n      };\n    } else {\n      this.requester = defaultRequester;\n    }\n  }\n\n  cancelWithStatus(status: Status, details: string) {\n    this.requester.cancel(() => {\n      this.nextCall.cancelWithStatus(status, details);\n    });\n  }\n\n  getPeer() {\n    return this.nextCall.getPeer();\n  }\n\n  private processPendingMessage() {\n    if (this.pendingMessageContext) {\n      this.nextCall.sendMessageWithContext(\n        this.pendingMessageContext,\n        this.pendingMessage\n      );\n      this.pendingMessageContext = null;\n      this.pendingMessage = null;\n    }\n  }\n\n  private processPendingHalfClose() {\n    if (this.pendingHalfClose) {\n      this.nextCall.halfClose();\n    }\n  }\n\n  start(\n    metadata: Metadata,\n    interceptingListener?: Partial<InterceptingListener>\n  ): void {\n    const fullInterceptingListener: InterceptingListener = {\n      onReceiveMetadata:\n        interceptingListener?.onReceiveMetadata?.bind(interceptingListener) ??\n        (metadata => {}),\n      onReceiveMessage:\n        interceptingListener?.onReceiveMessage?.bind(interceptingListener) ??\n        (message => {}),\n      onReceiveStatus:\n        interceptingListener?.onReceiveStatus?.bind(interceptingListener) ??\n        (status => {}),\n    };\n    this.processingMetadata = true;\n    this.requester.start(metadata, fullInterceptingListener, (md, listener) => {\n      this.processingMetadata = false;\n      let finalInterceptingListener: InterceptingListener;\n      if (isInterceptingListener(listener)) {\n        finalInterceptingListener = listener;\n      } else {\n        const fullListener: FullListener = {\n          onReceiveMetadata:\n            listener.onReceiveMetadata ?? defaultListener.onReceiveMetadata,\n          onReceiveMessage:\n            listener.onReceiveMessage ?? defaultListener.onReceiveMessage,\n          onReceiveStatus:\n            listener.onReceiveStatus ?? defaultListener.onReceiveStatus,\n        };\n        finalInterceptingListener = new InterceptingListenerImpl(\n          fullListener,\n          fullInterceptingListener\n        );\n      }\n      this.nextCall.start(md, finalInterceptingListener);\n      this.processPendingMessage();\n      this.processPendingHalfClose();\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessageWithContext(context: MessageContext, message: any): void {\n    this.processingMessage = true;\n    this.requester.sendMessage(message, finalMessage => {\n      this.processingMessage = false;\n      if (this.processingMetadata) {\n        this.pendingMessageContext = context;\n        this.pendingMessage = message;\n      } else {\n        this.nextCall.sendMessageWithContext(context, finalMessage);\n        this.processPendingHalfClose();\n      }\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessage(message: any): void {\n    this.sendMessageWithContext({}, message);\n  }\n  startRead(): void {\n    this.nextCall.startRead();\n  }\n  halfClose(): void {\n    this.requester.halfClose(() => {\n      if (this.processingMetadata || this.processingMessage) {\n        this.pendingHalfClose = true;\n      } else {\n        this.nextCall.halfClose();\n      }\n    });\n  }\n}\n\nfunction getCall(channel: Channel, path: string, options: CallOptions): Call {\n  const deadline = options.deadline ?? Infinity;\n  const host = options.host;\n  const parent = options.parent ?? null;\n  const propagateFlags = options.propagate_flags;\n  const credentials = options.credentials;\n  const call = channel.createCall(path, deadline, host, parent, propagateFlags);\n  if (credentials) {\n    call.setCredentials(credentials);\n  }\n  return call;\n}\n\n/**\n * InterceptingCall implementation that directly owns the underlying Call\n * object and handles serialization and deseraizliation.\n */\nclass BaseInterceptingCall implements InterceptingCallInterface {\n  constructor(\n    protected call: Call,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected methodDefinition: ClientMethodDefinition<any, any>\n  ) {}\n  cancelWithStatus(status: Status, details: string): void {\n    this.call.cancelWithStatus(status, details);\n  }\n  getPeer(): string {\n    return this.call.getPeer();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessageWithContext(context: MessageContext, message: any): void {\n    let serialized: Buffer;\n    try {\n      serialized = this.methodDefinition.requestSerialize(message);\n    } catch (e) {\n      this.call.cancelWithStatus(\n        Status.INTERNAL,\n        `Request message serialization failure: ${getErrorMessage(e)}`\n      );\n      return;\n    }\n    this.call.sendMessageWithContext(context, serialized);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sendMessage(message: any) {\n    this.sendMessageWithContext({}, message);\n  }\n  start(\n    metadata: Metadata,\n    interceptingListener?: Partial<InterceptingListener>\n  ): void {\n    let readError: StatusObject | null = null;\n    this.call.start(metadata, {\n      onReceiveMetadata: metadata => {\n        interceptingListener?.onReceiveMetadata?.(metadata);\n      },\n      onReceiveMessage: message => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let deserialized: any;\n        try {\n          deserialized = this.methodDefinition.responseDeserialize(message);\n        } catch (e) {\n          readError = {\n            code: Status.INTERNAL,\n            details: `Response message parsing error: ${getErrorMessage(e)}`,\n            metadata: new Metadata(),\n          };\n          this.call.cancelWithStatus(readError.code, readError.details);\n          return;\n        }\n        interceptingListener?.onReceiveMessage?.(deserialized);\n      },\n      onReceiveStatus: status => {\n        if (readError) {\n          interceptingListener?.onReceiveStatus?.(readError);\n        } else {\n          interceptingListener?.onReceiveStatus?.(status);\n        }\n      },\n    });\n  }\n  startRead() {\n    this.call.startRead();\n  }\n  halfClose(): void {\n    this.call.halfClose();\n  }\n}\n\n/**\n * BaseInterceptingCall with special-cased behavior for methods with unary\n * responses.\n */\nclass BaseUnaryInterceptingCall\n  extends BaseInterceptingCall\n  implements InterceptingCallInterface\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(call: Call, methodDefinition: ClientMethodDefinition<any, any>) {\n    super(call, methodDefinition);\n  }\n  start(metadata: Metadata, listener?: Partial<InterceptingListener>): void {\n    let receivedMessage = false;\n    const wrapperListener: InterceptingListener = {\n      onReceiveMetadata:\n        listener?.onReceiveMetadata?.bind(listener) ?? (metadata => {}),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onReceiveMessage: (message: any) => {\n        receivedMessage = true;\n        listener?.onReceiveMessage?.(message);\n      },\n      onReceiveStatus: (status: StatusObject) => {\n        if (!receivedMessage) {\n          listener?.onReceiveMessage?.(null);\n        }\n        listener?.onReceiveStatus?.(status);\n      },\n    };\n    super.start(metadata, wrapperListener);\n    this.call.startRead();\n  }\n}\n\n/**\n * BaseInterceptingCall with special-cased behavior for methods with streaming\n * responses.\n */\nclass BaseStreamingInterceptingCall\n  extends BaseInterceptingCall\n  implements InterceptingCallInterface {}\n\nfunction getBottomInterceptingCall(\n  channel: Channel,\n  options: InterceptorOptions,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  methodDefinition: ClientMethodDefinition<any, any>\n) {\n  const call = getCall(channel, methodDefinition.path, options);\n  if (methodDefinition.responseStream) {\n    return new BaseStreamingInterceptingCall(call, methodDefinition);\n  } else {\n    return new BaseUnaryInterceptingCall(call, methodDefinition);\n  }\n}\n\nexport interface NextCall {\n  (options: InterceptorOptions): InterceptingCallInterface;\n}\n\nexport interface Interceptor {\n  (options: InterceptorOptions, nextCall: NextCall): InterceptingCall;\n}\n\nexport interface InterceptorProvider {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (methodDefinition: ClientMethodDefinition<any, any>): Interceptor;\n}\n\nexport interface InterceptorArguments {\n  clientInterceptors: Interceptor[];\n  clientInterceptorProviders: InterceptorProvider[];\n  callInterceptors: Interceptor[];\n  callInterceptorProviders: InterceptorProvider[];\n}\n\nexport function getInterceptingCall(\n  interceptorArgs: InterceptorArguments,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  methodDefinition: ClientMethodDefinition<any, any>,\n  options: CallOptions,\n  channel: Channel\n): InterceptingCallInterface {\n  if (\n    interceptorArgs.clientInterceptors.length > 0 &&\n    interceptorArgs.clientInterceptorProviders.length > 0\n  ) {\n    throw new InterceptorConfigurationError(\n      'Both interceptors and interceptor_providers were passed as options ' +\n        'to the client constructor. Only one of these is allowed.'\n    );\n  }\n  if (\n    interceptorArgs.callInterceptors.length > 0 &&\n    interceptorArgs.callInterceptorProviders.length > 0\n  ) {\n    throw new InterceptorConfigurationError(\n      'Both interceptors and interceptor_providers were passed as call ' +\n        'options. Only one of these is allowed.'\n    );\n  }\n  let interceptors: Interceptor[] = [];\n  // Interceptors passed to the call override interceptors passed to the client constructor\n  if (\n    interceptorArgs.callInterceptors.length > 0 ||\n    interceptorArgs.callInterceptorProviders.length > 0\n  ) {\n    interceptors = ([] as Interceptor[])\n      .concat(\n        interceptorArgs.callInterceptors,\n        interceptorArgs.callInterceptorProviders.map(provider =>\n          provider(methodDefinition)\n        )\n      )\n      .filter(interceptor => interceptor);\n    // Filter out falsy values when providers return nothing\n  } else {\n    interceptors = ([] as Interceptor[])\n      .concat(\n        interceptorArgs.clientInterceptors,\n        interceptorArgs.clientInterceptorProviders.map(provider =>\n          provider(methodDefinition)\n        )\n      )\n      .filter(interceptor => interceptor);\n    // Filter out falsy values when providers return nothing\n  }\n  const interceptorOptions = Object.assign({}, options, {\n    method_definition: methodDefinition,\n  });\n  /* For each interceptor in the list, the nextCall function passed to it is\n   * based on the next interceptor in the list, using a nextCall function\n   * constructed with the following interceptor in the list, and so on. The\n   * initialValue, which is effectively at the end of the list, is a nextCall\n   * function that invokes getBottomInterceptingCall, the result of which\n   * handles (de)serialization and also gets the underlying call from the\n   * channel. */\n  const getCall: NextCall = interceptors.reduceRight<NextCall>(\n    (nextCall: NextCall, nextInterceptor: Interceptor) => {\n      return currentOptions => nextInterceptor(currentOptions, nextCall);\n    },\n    (finalOptions: InterceptorOptions) =>\n      getBottomInterceptingCall(channel, finalOptions, methodDefinition)\n  );\n  return getCall(interceptorOptions);\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  ClientDuplexStream,\n  ClientDuplexStreamImpl,\n  ClientReadableStream,\n  ClientReadableStreamImpl,\n  ClientUnaryCall,\n  ClientUnaryCallImpl,\n  ClientWritableStream,\n  ClientWritableStreamImpl,\n  ServiceError,\n  callErrorFromStatus,\n  SurfaceCall,\n} from './call';\nimport { CallCredentials } from './call-credentials';\nimport { StatusObject } from './call-interface';\nimport { Channel, ChannelImplementation } from './channel';\nimport { ConnectivityState } from './connectivity-state';\nimport { ChannelCredentials } from './channel-credentials';\nimport { ChannelOptions } from './channel-options';\nimport { Status } from './constants';\nimport { Metadata } from './metadata';\nimport { ClientMethodDefinition } from './make-client';\nimport {\n  getInterceptingCall,\n  Interceptor,\n  InterceptorProvider,\n  InterceptorArguments,\n  InterceptingCallInterface,\n} from './client-interceptors';\nimport {\n  ServerUnaryCall,\n  ServerReadableStream,\n  ServerWritableStream,\n  ServerDuplexStream,\n} from './server-call';\nimport { Deadline } from './deadline';\n\nconst CHANNEL_SYMBOL = Symbol();\nconst INTERCEPTOR_SYMBOL = Symbol();\nconst INTERCEPTOR_PROVIDER_SYMBOL = Symbol();\nconst CALL_INVOCATION_TRANSFORMER_SYMBOL = Symbol();\n\nfunction isFunction<ResponseType>(\n  arg: Metadata | CallOptions | UnaryCallback<ResponseType> | undefined\n): arg is UnaryCallback<ResponseType> {\n  return typeof arg === 'function';\n}\n\nexport interface UnaryCallback<ResponseType> {\n  (err: ServiceError | null, value?: ResponseType): void;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface CallOptions {\n  deadline?: Deadline;\n  host?: string;\n  parent?:\n    | ServerUnaryCall<any, any>\n    | ServerReadableStream<any, any>\n    | ServerWritableStream<any, any>\n    | ServerDuplexStream<any, any>;\n  propagate_flags?: number;\n  credentials?: CallCredentials;\n  interceptors?: Interceptor[];\n  interceptor_providers?: InterceptorProvider[];\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport interface CallProperties<RequestType, ResponseType> {\n  argument?: RequestType;\n  metadata: Metadata;\n  call: SurfaceCall;\n  channel: Channel;\n  methodDefinition: ClientMethodDefinition<RequestType, ResponseType>;\n  callOptions: CallOptions;\n  callback?: UnaryCallback<ResponseType>;\n}\n\nexport interface CallInvocationTransformer {\n  (callProperties: CallProperties<any, any>): CallProperties<any, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\nexport type ClientOptions = Partial<ChannelOptions> & {\n  channelOverride?: Channel;\n  channelFactoryOverride?: (\n    address: string,\n    credentials: ChannelCredentials,\n    options: ClientOptions\n  ) => Channel;\n  interceptors?: Interceptor[];\n  interceptor_providers?: InterceptorProvider[];\n  callInvocationTransformer?: CallInvocationTransformer;\n};\n\nfunction getErrorStackString(error: Error): string {\n  return error.stack?.split('\\n').slice(1).join('\\n') || 'no stack trace available';\n}\n\n/**\n * A generic gRPC client. Primarily useful as a base class for all generated\n * clients.\n */\nexport class Client {\n  private readonly [CHANNEL_SYMBOL]: Channel;\n  private readonly [INTERCEPTOR_SYMBOL]: Interceptor[];\n  private readonly [INTERCEPTOR_PROVIDER_SYMBOL]: InterceptorProvider[];\n  private readonly [CALL_INVOCATION_TRANSFORMER_SYMBOL]?: CallInvocationTransformer;\n  constructor(\n    address: string,\n    credentials: ChannelCredentials,\n    options: ClientOptions = {}\n  ) {\n    options = Object.assign({}, options);\n    this[INTERCEPTOR_SYMBOL] = options.interceptors ?? [];\n    delete options.interceptors;\n    this[INTERCEPTOR_PROVIDER_SYMBOL] = options.interceptor_providers ?? [];\n    delete options.interceptor_providers;\n    if (\n      this[INTERCEPTOR_SYMBOL].length > 0 &&\n      this[INTERCEPTOR_PROVIDER_SYMBOL].length > 0\n    ) {\n      throw new Error(\n        'Both interceptors and interceptor_providers were passed as options ' +\n          'to the client constructor. Only one of these is allowed.'\n      );\n    }\n    this[CALL_INVOCATION_TRANSFORMER_SYMBOL] =\n      options.callInvocationTransformer;\n    delete options.callInvocationTransformer;\n    if (options.channelOverride) {\n      this[CHANNEL_SYMBOL] = options.channelOverride;\n    } else if (options.channelFactoryOverride) {\n      const channelFactoryOverride = options.channelFactoryOverride;\n      delete options.channelFactoryOverride;\n      this[CHANNEL_SYMBOL] = channelFactoryOverride(\n        address,\n        credentials,\n        options\n      );\n    } else {\n      this[CHANNEL_SYMBOL] = new ChannelImplementation(\n        address,\n        credentials,\n        options\n      );\n    }\n  }\n\n  close(): void {\n    this[CHANNEL_SYMBOL].close();\n  }\n\n  getChannel(): Channel {\n    return this[CHANNEL_SYMBOL];\n  }\n\n  waitForReady(deadline: Deadline, callback: (error?: Error) => void): void {\n    const checkState = (err?: Error) => {\n      if (err) {\n        callback(new Error('Failed to connect before the deadline'));\n        return;\n      }\n      let newState;\n      try {\n        newState = this[CHANNEL_SYMBOL].getConnectivityState(true);\n      } catch (e) {\n        callback(new Error('The channel has been closed'));\n        return;\n      }\n      if (newState === ConnectivityState.READY) {\n        callback();\n      } else {\n        try {\n          this[CHANNEL_SYMBOL].watchConnectivityState(\n            newState,\n            deadline,\n            checkState\n          );\n        } catch (e) {\n          callback(new Error('The channel has been closed'));\n        }\n      }\n    };\n    setImmediate(checkState);\n  }\n\n  private checkOptionalUnaryResponseArguments<ResponseType>(\n    arg1: Metadata | CallOptions | UnaryCallback<ResponseType>,\n    arg2?: CallOptions | UnaryCallback<ResponseType>,\n    arg3?: UnaryCallback<ResponseType>\n  ): {\n    metadata: Metadata;\n    options: CallOptions;\n    callback: UnaryCallback<ResponseType>;\n  } {\n    if (isFunction(arg1)) {\n      return { metadata: new Metadata(), options: {}, callback: arg1 };\n    } else if (isFunction(arg2)) {\n      if (arg1 instanceof Metadata) {\n        return { metadata: arg1, options: {}, callback: arg2 };\n      } else {\n        return { metadata: new Metadata(), options: arg1, callback: arg2 };\n      }\n    } else {\n      if (\n        !(\n          arg1 instanceof Metadata &&\n          arg2 instanceof Object &&\n          isFunction(arg3)\n        )\n      ) {\n        throw new Error('Incorrect arguments passed');\n      }\n      return { metadata: arg1, options: arg2, callback: arg3 };\n    }\n  }\n\n  makeUnaryRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    metadata: Metadata,\n    options: CallOptions,\n    callback: UnaryCallback<ResponseType>\n  ): ClientUnaryCall;\n  makeUnaryRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    metadata: Metadata,\n    callback: UnaryCallback<ResponseType>\n  ): ClientUnaryCall;\n  makeUnaryRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    options: CallOptions,\n    callback: UnaryCallback<ResponseType>\n  ): ClientUnaryCall;\n  makeUnaryRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    callback: UnaryCallback<ResponseType>\n  ): ClientUnaryCall;\n  makeUnaryRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    metadata: Metadata | CallOptions | UnaryCallback<ResponseType>,\n    options?: CallOptions | UnaryCallback<ResponseType>,\n    callback?: UnaryCallback<ResponseType>\n  ): ClientUnaryCall {\n    const checkedArguments =\n      this.checkOptionalUnaryResponseArguments<ResponseType>(\n        metadata,\n        options,\n        callback\n      );\n    const methodDefinition: ClientMethodDefinition<RequestType, ResponseType> =\n      {\n        path: method,\n        requestStream: false,\n        responseStream: false,\n        requestSerialize: serialize,\n        responseDeserialize: deserialize,\n      };\n    let callProperties: CallProperties<RequestType, ResponseType> = {\n      argument: argument,\n      metadata: checkedArguments.metadata,\n      call: new ClientUnaryCallImpl(),\n      channel: this[CHANNEL_SYMBOL],\n      methodDefinition: methodDefinition,\n      callOptions: checkedArguments.options,\n      callback: checkedArguments.callback,\n    };\n    if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n      callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL]!(\n        callProperties\n      ) as CallProperties<RequestType, ResponseType>;\n    }\n    const emitter: ClientUnaryCall = callProperties.call;\n    const interceptorArgs: InterceptorArguments = {\n      clientInterceptors: this[INTERCEPTOR_SYMBOL],\n      clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n      callInterceptors: callProperties.callOptions.interceptors ?? [],\n      callInterceptorProviders:\n        callProperties.callOptions.interceptor_providers ?? [],\n    };\n    const call: InterceptingCallInterface = getInterceptingCall(\n      interceptorArgs,\n      callProperties.methodDefinition,\n      callProperties.callOptions,\n      callProperties.channel\n    );\n    /* This needs to happen before the emitter is used. Unfortunately we can't\n     * enforce this with the type system. We need to construct this emitter\n     * before calling the CallInvocationTransformer, and we need to create the\n     * call after that. */\n    emitter.call = call;\n    let responseMessage: ResponseType | null = null;\n    let receivedStatus = false;\n    let callerStackError: Error | null = new Error();\n    call.start(callProperties.metadata, {\n      onReceiveMetadata: metadata => {\n        emitter.emit('metadata', metadata);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onReceiveMessage(message: any) {\n        if (responseMessage !== null) {\n          call.cancelWithStatus(Status.UNIMPLEMENTED, 'Too many responses received');\n        }\n        responseMessage = message;\n      },\n      onReceiveStatus(status: StatusObject) {\n        if (receivedStatus) {\n          return;\n        }\n        receivedStatus = true;\n        if (status.code === Status.OK) {\n          if (responseMessage === null) {\n            const callerStack = getErrorStackString(callerStackError!);\n            callProperties.callback!(\n              callErrorFromStatus(\n                {\n                  code: Status.UNIMPLEMENTED,\n                  details: 'No message received',\n                  metadata: status.metadata,\n                },\n                callerStack\n              )\n            );\n          } else {\n            callProperties.callback!(null, responseMessage);\n          }\n        } else {\n          const callerStack = getErrorStackString(callerStackError!);\n          callProperties.callback!(callErrorFromStatus(status, callerStack));\n        }\n        /* Avoid retaining the callerStackError object in the call context of\n         * the status event handler. */\n        callerStackError = null;\n        emitter.emit('status', status);\n      },\n    });\n    call.sendMessage(argument);\n    call.halfClose();\n    return emitter;\n  }\n\n  makeClientStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    metadata: Metadata,\n    options: CallOptions,\n    callback: UnaryCallback<ResponseType>\n  ): ClientWritableStream<RequestType>;\n  makeClientStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    metadata: Metadata,\n    callback: UnaryCallback<ResponseType>\n  ): ClientWritableStream<RequestType>;\n  makeClientStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    options: CallOptions,\n    callback: UnaryCallback<ResponseType>\n  ): ClientWritableStream<RequestType>;\n  makeClientStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    callback: UnaryCallback<ResponseType>\n  ): ClientWritableStream<RequestType>;\n  makeClientStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    metadata: Metadata | CallOptions | UnaryCallback<ResponseType>,\n    options?: CallOptions | UnaryCallback<ResponseType>,\n    callback?: UnaryCallback<ResponseType>\n  ): ClientWritableStream<RequestType> {\n    const checkedArguments =\n      this.checkOptionalUnaryResponseArguments<ResponseType>(\n        metadata,\n        options,\n        callback\n      );\n    const methodDefinition: ClientMethodDefinition<RequestType, ResponseType> =\n      {\n        path: method,\n        requestStream: true,\n        responseStream: false,\n        requestSerialize: serialize,\n        responseDeserialize: deserialize,\n      };\n    let callProperties: CallProperties<RequestType, ResponseType> = {\n      metadata: checkedArguments.metadata,\n      call: new ClientWritableStreamImpl<RequestType>(serialize),\n      channel: this[CHANNEL_SYMBOL],\n      methodDefinition: methodDefinition,\n      callOptions: checkedArguments.options,\n      callback: checkedArguments.callback,\n    };\n    if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n      callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL]!(\n        callProperties\n      ) as CallProperties<RequestType, ResponseType>;\n    }\n    const emitter: ClientWritableStream<RequestType> =\n      callProperties.call as ClientWritableStream<RequestType>;\n    const interceptorArgs: InterceptorArguments = {\n      clientInterceptors: this[INTERCEPTOR_SYMBOL],\n      clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n      callInterceptors: callProperties.callOptions.interceptors ?? [],\n      callInterceptorProviders:\n        callProperties.callOptions.interceptor_providers ?? [],\n    };\n    const call: InterceptingCallInterface = getInterceptingCall(\n      interceptorArgs,\n      callProperties.methodDefinition,\n      callProperties.callOptions,\n      callProperties.channel\n    );\n    /* This needs to happen before the emitter is used. Unfortunately we can't\n     * enforce this with the type system. We need to construct this emitter\n     * before calling the CallInvocationTransformer, and we need to create the\n     * call after that. */\n    emitter.call = call;\n    let responseMessage: ResponseType | null = null;\n    let receivedStatus = false;\n    let callerStackError: Error | null = new Error();\n    call.start(callProperties.metadata, {\n      onReceiveMetadata: metadata => {\n        emitter.emit('metadata', metadata);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onReceiveMessage(message: any) {\n        if (responseMessage !== null) {\n          call.cancelWithStatus(Status.UNIMPLEMENTED, 'Too many responses received');\n        }\n        responseMessage = message;\n        call.startRead();\n      },\n      onReceiveStatus(status: StatusObject) {\n        if (receivedStatus) {\n          return;\n        }\n        receivedStatus = true;\n        if (status.code === Status.OK) {\n          if (responseMessage === null) {\n            const callerStack = getErrorStackString(callerStackError!);\n            callProperties.callback!(\n              callErrorFromStatus(\n                {\n                  code: Status.UNIMPLEMENTED,\n                  details: 'No message received',\n                  metadata: status.metadata,\n                },\n                callerStack\n              )\n            );\n          } else {\n            callProperties.callback!(null, responseMessage);\n          }\n        } else {\n          const callerStack = getErrorStackString(callerStackError!);\n          callProperties.callback!(callErrorFromStatus(status, callerStack));\n        }\n        /* Avoid retaining the callerStackError object in the call context of\n         * the status event handler. */\n        callerStackError = null;\n        emitter.emit('status', status);\n      },\n    });\n    return emitter;\n  }\n\n  private checkMetadataAndOptions(\n    arg1?: Metadata | CallOptions,\n    arg2?: CallOptions\n  ): { metadata: Metadata; options: CallOptions } {\n    let metadata: Metadata;\n    let options: CallOptions;\n    if (arg1 instanceof Metadata) {\n      metadata = arg1;\n      if (arg2) {\n        options = arg2;\n      } else {\n        options = {};\n      }\n    } else {\n      if (arg1) {\n        options = arg1;\n      } else {\n        options = {};\n      }\n      metadata = new Metadata();\n    }\n    return { metadata, options };\n  }\n\n  makeServerStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    metadata: Metadata,\n    options?: CallOptions\n  ): ClientReadableStream<ResponseType>;\n  makeServerStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    options?: CallOptions\n  ): ClientReadableStream<ResponseType>;\n  makeServerStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    argument: RequestType,\n    metadata?: Metadata | CallOptions,\n    options?: CallOptions\n  ): ClientReadableStream<ResponseType> {\n    const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n    const methodDefinition: ClientMethodDefinition<RequestType, ResponseType> =\n      {\n        path: method,\n        requestStream: false,\n        responseStream: true,\n        requestSerialize: serialize,\n        responseDeserialize: deserialize,\n      };\n    let callProperties: CallProperties<RequestType, ResponseType> = {\n      argument: argument,\n      metadata: checkedArguments.metadata,\n      call: new ClientReadableStreamImpl<ResponseType>(deserialize),\n      channel: this[CHANNEL_SYMBOL],\n      methodDefinition: methodDefinition,\n      callOptions: checkedArguments.options,\n    };\n    if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n      callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL]!(\n        callProperties\n      ) as CallProperties<RequestType, ResponseType>;\n    }\n    const stream: ClientReadableStream<ResponseType> =\n      callProperties.call as ClientReadableStream<ResponseType>;\n    const interceptorArgs: InterceptorArguments = {\n      clientInterceptors: this[INTERCEPTOR_SYMBOL],\n      clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n      callInterceptors: callProperties.callOptions.interceptors ?? [],\n      callInterceptorProviders:\n        callProperties.callOptions.interceptor_providers ?? [],\n    };\n    const call: InterceptingCallInterface = getInterceptingCall(\n      interceptorArgs,\n      callProperties.methodDefinition,\n      callProperties.callOptions,\n      callProperties.channel\n    );\n    /* This needs to happen before the emitter is used. Unfortunately we can't\n     * enforce this with the type system. We need to construct this emitter\n     * before calling the CallInvocationTransformer, and we need to create the\n     * call after that. */\n    stream.call = call;\n    let receivedStatus = false;\n    let callerStackError: Error | null = new Error();\n    call.start(callProperties.metadata, {\n      onReceiveMetadata(metadata: Metadata) {\n        stream.emit('metadata', metadata);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onReceiveMessage(message: any) {\n        stream.push(message);\n      },\n      onReceiveStatus(status: StatusObject) {\n        if (receivedStatus) {\n          return;\n        }\n        receivedStatus = true;\n        stream.push(null);\n        if (status.code !== Status.OK) {\n          const callerStack = getErrorStackString(callerStackError!);\n          stream.emit('error', callErrorFromStatus(status, callerStack));\n        }\n        /* Avoid retaining the callerStackError object in the call context of\n         * the status event handler. */\n        callerStackError = null;\n        stream.emit('status', status);\n      },\n    });\n    call.sendMessage(argument);\n    call.halfClose();\n    return stream;\n  }\n\n  makeBidiStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    metadata: Metadata,\n    options?: CallOptions\n  ): ClientDuplexStream<RequestType, ResponseType>;\n  makeBidiStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    options?: CallOptions\n  ): ClientDuplexStream<RequestType, ResponseType>;\n  makeBidiStreamRequest<RequestType, ResponseType>(\n    method: string,\n    serialize: (value: RequestType) => Buffer,\n    deserialize: (value: Buffer) => ResponseType,\n    metadata?: Metadata | CallOptions,\n    options?: CallOptions\n  ): ClientDuplexStream<RequestType, ResponseType> {\n    const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n    const methodDefinition: ClientMethodDefinition<RequestType, ResponseType> =\n      {\n        path: method,\n        requestStream: true,\n        responseStream: true,\n        requestSerialize: serialize,\n        responseDeserialize: deserialize,\n      };\n    let callProperties: CallProperties<RequestType, ResponseType> = {\n      metadata: checkedArguments.metadata,\n      call: new ClientDuplexStreamImpl<RequestType, ResponseType>(\n        serialize,\n        deserialize\n      ),\n      channel: this[CHANNEL_SYMBOL],\n      methodDefinition: methodDefinition,\n      callOptions: checkedArguments.options,\n    };\n    if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n      callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL]!(\n        callProperties\n      ) as CallProperties<RequestType, ResponseType>;\n    }\n    const stream: ClientDuplexStream<RequestType, ResponseType> =\n      callProperties.call as ClientDuplexStream<RequestType, ResponseType>;\n    const interceptorArgs: InterceptorArguments = {\n      clientInterceptors: this[INTERCEPTOR_SYMBOL],\n      clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n      callInterceptors: callProperties.callOptions.interceptors ?? [],\n      callInterceptorProviders:\n        callProperties.callOptions.interceptor_providers ?? [],\n    };\n    const call: InterceptingCallInterface = getInterceptingCall(\n      interceptorArgs,\n      callProperties.methodDefinition,\n      callProperties.callOptions,\n      callProperties.channel\n    );\n    /* This needs to happen before the emitter is used. Unfortunately we can't\n     * enforce this with the type system. We need to construct this emitter\n     * before calling the CallInvocationTransformer, and we need to create the\n     * call after that. */\n    stream.call = call;\n    let receivedStatus = false;\n    let callerStackError: Error | null = new Error();\n    call.start(callProperties.metadata, {\n      onReceiveMetadata(metadata: Metadata) {\n        stream.emit('metadata', metadata);\n      },\n      onReceiveMessage(message: Buffer) {\n        stream.push(message);\n      },\n      onReceiveStatus(status: StatusObject) {\n        if (receivedStatus) {\n          return;\n        }\n        receivedStatus = true;\n        stream.push(null);\n        if (status.code !== Status.OK) {\n          const callerStack = getErrorStackString(callerStackError!);\n          stream.emit('error', callErrorFromStatus(status, callerStack));\n        }\n        /* Avoid retaining the callerStackError object in the call context of\n         * the status event handler. */\n        callerStackError = null;\n        stream.emit('status', status);\n      },\n    });\n    return stream;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelCredentials } from './channel-credentials';\nimport { ChannelOptions } from './channel-options';\nimport { Client } from './client';\nimport { UntypedServiceImplementation } from './server';\n\nexport interface Serialize<T> {\n  (value: T): Buffer;\n}\n\nexport interface Deserialize<T> {\n  (bytes: Buffer): T;\n}\n\nexport interface ClientMethodDefinition<RequestType, ResponseType> {\n  path: string;\n  requestStream: boolean;\n  responseStream: boolean;\n  requestSerialize: Serialize<RequestType>;\n  responseDeserialize: Deserialize<ResponseType>;\n  originalName?: string;\n}\n\nexport interface ServerMethodDefinition<RequestType, ResponseType> {\n  path: string;\n  requestStream: boolean;\n  responseStream: boolean;\n  responseSerialize: Serialize<ResponseType>;\n  requestDeserialize: Deserialize<RequestType>;\n  originalName?: string;\n}\n\nexport interface MethodDefinition<RequestType, ResponseType>\n  extends ClientMethodDefinition<RequestType, ResponseType>,\n    ServerMethodDefinition<RequestType, ResponseType> {}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type ServiceDefinition<\n  ImplementationType = UntypedServiceImplementation\n> = {\n  readonly [index in keyof ImplementationType]: MethodDefinition<any, any>;\n};\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport interface ProtobufTypeDefinition {\n  format: string;\n  type: object;\n  fileDescriptorProtos: Buffer[];\n}\n\nexport interface PackageDefinition {\n  [index: string]: ServiceDefinition | ProtobufTypeDefinition;\n}\n\n/**\n * Map with short names for each of the requester maker functions. Used in\n * makeClientConstructor\n * @private\n */\nconst requesterFuncs = {\n  unary: Client.prototype.makeUnaryRequest,\n  server_stream: Client.prototype.makeServerStreamRequest,\n  client_stream: Client.prototype.makeClientStreamRequest,\n  bidi: Client.prototype.makeBidiStreamRequest,\n};\n\nexport interface ServiceClient extends Client {\n  [methodName: string]: Function;\n}\n\nexport interface ServiceClientConstructor {\n  new (\n    address: string,\n    credentials: ChannelCredentials,\n    options?: Partial<ChannelOptions>\n  ): ServiceClient;\n  service: ServiceDefinition;\n  serviceName: string;\n}\n\n/**\n * Returns true, if given key is included in the blacklisted\n * keys.\n * @param key key for check, string.\n */\nfunction isPrototypePolluted(key: string): boolean {\n  return ['__proto__', 'prototype', 'constructor'].includes(key);\n}\n\n/**\n * Creates a constructor for a client with the given methods, as specified in\n * the methods argument. The resulting class will have an instance method for\n * each method in the service, which is a partial application of one of the\n * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n * arguments predefined.\n * @param methods An object mapping method names to\n *     method attributes\n * @param serviceName The fully qualified name of the service\n * @param classOptions An options object.\n * @return New client constructor, which is a subclass of\n *     {@link grpc.Client}, and has the same arguments as that constructor.\n */\nexport function makeClientConstructor(\n  methods: ServiceDefinition,\n  serviceName: string,\n  classOptions?: {}\n): ServiceClientConstructor {\n  if (!classOptions) {\n    classOptions = {};\n  }\n\n  class ServiceClientImpl extends Client implements ServiceClient {\n    static service: ServiceDefinition;\n    static serviceName: string;\n    [methodName: string]: Function;\n  }\n\n  Object.keys(methods).forEach(name => {\n    if (isPrototypePolluted(name)) {\n      return;\n    }\n    const attrs = methods[name];\n    let methodType: keyof typeof requesterFuncs;\n    // TODO(murgatroid99): Verify that we don't need this anymore\n    if (typeof name === 'string' && name.charAt(0) === '$') {\n      throw new Error('Method names cannot start with $');\n    }\n    if (attrs.requestStream) {\n      if (attrs.responseStream) {\n        methodType = 'bidi';\n      } else {\n        methodType = 'client_stream';\n      }\n    } else {\n      if (attrs.responseStream) {\n        methodType = 'server_stream';\n      } else {\n        methodType = 'unary';\n      }\n    }\n    const serialize = attrs.requestSerialize;\n    const deserialize = attrs.responseDeserialize;\n    const methodFunc = partial(\n      requesterFuncs[methodType],\n      attrs.path,\n      serialize,\n      deserialize\n    );\n    ServiceClientImpl.prototype[name] = methodFunc;\n    // Associate all provided attributes with the method\n    Object.assign(ServiceClientImpl.prototype[name], attrs);\n    if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n      ServiceClientImpl.prototype[attrs.originalName] =\n        ServiceClientImpl.prototype[name];\n    }\n  });\n\n  ServiceClientImpl.service = methods;\n  ServiceClientImpl.serviceName = serviceName;\n\n  return ServiceClientImpl;\n}\n\nfunction partial(\n  fn: Function,\n  path: string,\n  serialize: Function,\n  deserialize: Function\n): Function {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]) {\n    return fn.call(this, path, serialize, deserialize, ...args);\n  };\n}\n\nexport interface GrpcObject {\n  [index: string]:\n    | GrpcObject\n    | ServiceClientConstructor\n    | ProtobufTypeDefinition;\n}\n\nfunction isProtobufTypeDefinition(\n  obj: ServiceDefinition | ProtobufTypeDefinition\n): obj is ProtobufTypeDefinition {\n  return 'format' in obj;\n}\n\n/**\n * Load a gRPC package definition as a gRPC object hierarchy.\n * @param packageDef The package definition object.\n * @return The resulting gRPC object.\n */\nexport function loadPackageDefinition(\n  packageDef: PackageDefinition\n): GrpcObject {\n  const result: GrpcObject = {};\n  for (const serviceFqn in packageDef) {\n    if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n      const service = packageDef[serviceFqn];\n      const nameComponents = serviceFqn.split('.');\n      if (nameComponents.some((comp: string) => isPrototypePolluted(comp))) {\n        continue;\n      }\n      const serviceName = nameComponents[nameComponents.length - 1];\n      let current = result;\n      for (const packageName of nameComponents.slice(0, -1)) {\n        if (!current[packageName]) {\n          current[packageName] = {};\n        }\n        current = current[packageName] as GrpcObject;\n      }\n      if (isProtobufTypeDefinition(service)) {\n        current[serviceName] = service;\n      } else {\n        current[serviceName] = makeClientConstructor(service, serviceName, {});\n      }\n    }\n  }\n  return result;\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d\u00E9j\u00E0 vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n", "\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n */\r\nutil.isNode = Boolean(typeof global !== \"undefined\"\r\n                   && global\r\n                   && global.process\r\n                   && global.process.versions\r\n                   && global.process.versions.node);\r\n\r\n/**\r\n * Global object reference.\r\n * @memberof util\r\n * @type {Object}\r\n */\r\nutil.global = util.isNode && global\r\n           || typeof window !== \"undefined\" && window\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    CustomError.prototype = Object.create(Error.prototype, {\r\n        constructor: {\r\n            value: CustomError,\r\n            writable: true,\r\n            enumerable: false,\r\n            configurable: true,\r\n        },\r\n        name: {\r\n            get: function get() { return name; },\r\n            set: undefined,\r\n            enumerable: false,\r\n            // configurable: false would accurately preserve the behavior of\r\n            // the original, but I'm guessing that was not intentional.\r\n            // For an actual error subclass, this property would\r\n            // be configurable.\r\n            configurable: true,\r\n        },\r\n        toString: {\r\n            value: function value() { return this.name + \": \" + this.message; },\r\n            writable: true,\r\n            enumerable: false,\r\n            configurable: true,\r\n        },\r\n    });\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup() {\r\n            return (Writer.create = function create_buffer() {\r\n                return new BufferWriter();\r\n            })();\r\n        }\r\n        /* istanbul ignore next */\r\n        : function create_array() {\r\n            return new Writer();\r\n        };\r\n};\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = create();\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n    Writer.create = create();\r\n    BufferWriter._configure();\r\n};\r\n", "\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\nBufferWriter._configure = function () {\r\n    /**\r\n     * Allocates a buffer of the specified size.\r\n     * @function\r\n     * @param {number} size Buffer size\r\n     * @returns {Buffer} Buffer\r\n     */\r\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\r\n\r\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\r\n        ? function writeBytesBuffer_set(val, buf, pos) {\r\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n          // also works for plain array values\r\n        }\r\n        /* istanbul ignore next */\r\n        : function writeBytesBuffer_copy(val, buf, pos) {\r\n          if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n          else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n        };\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(BufferWriter.writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else if (buf.utf8Write)\r\n        buf.utf8Write(val, pos);\r\n    else\r\n        buf.write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = util.Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\r\nBufferWriter._configure();\r\n", "\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup(buffer) {\r\n            return (Reader.create = function create_buffer(buffer) {\r\n                return util.Buffer.isBuffer(buffer)\r\n                    ? new BufferReader(buffer)\r\n                    /* istanbul ignore next */\r\n                    : create_array(buffer);\r\n            })(buffer);\r\n        }\r\n        /* istanbul ignore next */\r\n        : create_array;\r\n};\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = create();\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n\r\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        var nativeBuffer = util.Buffer;\r\n        return nativeBuffer\r\n            ? nativeBuffer.alloc(0)\r\n            : new this.buf.constructor(0);\r\n    }\r\n    return this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n    Reader.create = create();\r\n    BufferReader._configure();\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n", "\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\nBufferReader._configure = function () {\r\n    /* istanbul ignore else */\r\n    if (util.Buffer)\r\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice\r\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\r\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\r\nBufferReader._configure();\r\n", "\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n", "\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available across modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n", "\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.util._configure();\r\n    protobuf.Writer._configure(protobuf.BufferWriter);\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nconfigure();\r\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n", "\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    if (rule === \"proto3_optional\") {\r\n        rule = \"optional\";\r\n    }\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    } else if (this.options && this.options.proto3_optional) {\r\n        // proto3 scalar value marked optional; should default to null\r\n        this.typeDefault = null;\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = require(\"./field\"),\r\n    util     = require(\"./util\"),\r\n    OneOf    = require(\"./oneof\");\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\r\n */\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Options properly parsed into an object\r\n     */\r\n    this.parsedOptions = parsedOptions;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n * @property {string} comment Method comments\r\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined,\r\n        \"parsedOptions\"  , this.parsedOptions,\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i: {\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"var c2 = r.uint32()+r.pos\");\r\n\r\n            if (types.defaults[field.keyType] !== undefined) gen\r\n                (\"k=%j\", types.defaults[field.keyType]);\r\n            else gen\r\n                (\"k=null\");\r\n\r\n            if (types.defaults[type] !== undefined) gen\r\n                (\"value=%j\", types.defaults[type]);\r\n            else gen\r\n                (\"value=null\");\r\n\r\n            gen\r\n                (\"while(r.pos<c2){\")\r\n                    (\"var tag2=r.uint32()\")\r\n                    (\"switch(tag2>>>3){\")\r\n                        (\"case 1: k=r.%s(); break\", field.keyType)\r\n                        (\"case 2:\");\r\n\r\n            if (types.basic[type] === undefined) gen\r\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\r\n            else gen\r\n                            (\"value=r.%s()\", type);\r\n\r\n            gen\r\n                            (\"break\")\r\n                        (\"default:\")\r\n                            (\"r.skipType(tag2&7)\")\r\n                            (\"break\")\r\n                    (\"}\")\r\n                (\"}\");\r\n\r\n            if (types.long[field.keyType] !== undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\r\n            else gen\r\n                (\"%s[k]=value\", ref);\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\")\r\n            (\"}\");\r\n        // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n", "\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}", "\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    var defaultAlreadyEmitted = false;\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                // enum unknown values passthrough\r\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\r\n                    (\"default:\")\r\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\r\n                    if (!field.repeated) gen // fallback to default value only for\r\n                                             // arrays, to avoid leaving holes.\r\n                        (\"break\");           // for non-repeated fields, just ignore\r\n                    defaultAlreadyEmitted = true;\r\n                }\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-next-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length >= 0)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-next-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n             // Only use fully qualified type name after the last '/'\r\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].slice(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                if (type_url.indexOf(\"/\") === -1) {\r\n                    type_url = \"/\" + type_url;\r\n                }\r\n                return this.create({\r\n                    type_url: type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // Default prefix\r\n        var googleApi = \"type.googleapis.com/\";\r\n        var prefix = \"\";\r\n        var name = \"\";\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            // Separate the prefix used\r\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            var messageName = message.$type.fullName[0] === \".\" ?\r\n                message.$type.fullName.slice(1) : message.$type.fullName;\r\n            // Default to type.googleapis.com prefix if no prefix is used\r\n            if (prefix === \"\") {\r\n                prefix = googleApi;\r\n            }\r\n            name = prefix + messageName;\r\n            object[\"@type\"] = name;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n/**\r\n * Fetch content from file path or url\r\n * This method exists so you can override it with your own logic.\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.fetch = util.fetch;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        if (sync)\r\n            throw err;\r\n        var cb = callback;\r\n        callback = null;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Bundled definition existence checking\r\n    function getBundledFileName(filename) {\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common) return altname;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n        filename = getBundledFileName(filename) || filename;\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            self.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        //do not allow to extend same field twice to prevent the error\r\n        if (extendedType.get(sisterField.name)) {\r\n            return true;\r\n        }\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n\r\n/**\r\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {string} path dot '.' delimited path of the property to set\r\n * @param {Object} value the value to set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nutil.setProperty = function setProperty(dst, path, value) {\r\n    function setProp(dst, path, value) {\r\n        var part = path.shift();\r\n        if (part === \"__proto__\" || part === \"prototype\") {\r\n          return dst;\r\n        }\r\n        if (path.length > 0) {\r\n            dst[part] = setProp(dst[part] || {}, path, value);\r\n        } else {\r\n            var prevValue = dst[part];\r\n            if (prevValue)\r\n                value = [].concat(prevValue).concat(value);\r\n            dst[part] = value;\r\n        }\r\n        return dst;\r\n    }\r\n\r\n    if (typeof dst !== \"object\")\r\n        throw TypeError(\"dst must be an object\");\r\n    if (!path)\r\n        throw TypeError(\"path must be specified\");\r\n\r\n    path = path.split(\".\");\r\n    return setProp(dst, path, value);\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n", "\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Parsed Options.\r\n     * @type {Array.<Object.<string,*>>|undefined}\r\n     */\r\n    this.parsedOptions = null;\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a parsed option.\r\n * @param {string} name parsed Option name\r\n * @param {*} value Option value\r\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\r\n    if (!this.parsedOptions) {\r\n        this.parsedOptions = [];\r\n    }\r\n    var parsedOptions = this.parsedOptions;\r\n    if (propName) {\r\n        // If setting a sub property of an option then try to merge it\r\n        // with an existing option\r\n        var opt = parsedOptions.find(function (opt) {\r\n            return Object.prototype.hasOwnProperty.call(opt, name);\r\n        });\r\n        if (opt) {\r\n            // If we found an existing option - just merge the property value\r\n            var newValue = opt[name];\r\n            util.setProperty(newValue, propName, value);\r\n        } else {\r\n            // otherwise, create a new option, set it's property and add it to the list\r\n            opt = {};\r\n            opt[name] = util.setProperty({}, propName, value);\r\n            parsedOptions.push(opt);\r\n        }\r\n    } else {\r\n        // Always create a new option when setting the value of the option itself\r\n        var newOpt = {};\r\n        newOpt[name] = value;\r\n        parsedOptions.push(newOpt);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Values options, if any\r\n     * @type {Object<string, Object<string, *>>|undefined}\r\n     */\r\n    this.valuesOptions = valuesOptions;\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"       , this.options,\r\n        \"valuesOptions\" , this.valuesOptions,\r\n        \"values\"        , this.values,\r\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"       , keepComments ? this.comment : undefined,\r\n        \"comments\"      , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @param {Object.<string, *>|undefined} [options] Options, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment, options) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    if (options) {\r\n        if (this.valuesOptions === undefined)\r\n            this.valuesOptions = {};\r\n        this.valuesOptions[name] = options || null;\r\n    }\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n    if (this.valuesOptions)\r\n        delete this.valuesOptions[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n", "\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n", "\"use strict\";\r\nmodule.exports = tokenize;\r\n\r\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\r\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\r\n\r\nvar setCommentRe = /^ *[*/]+ */,\r\n    setCommentAltRe = /^\\s*\\*?\\/*/,\r\n    setCommentSplitRe = /\\n/g,\r\n    whitespaceRe = /\\s/,\r\n    unescapeRe = /\\\\(.?)/g;\r\n\r\nvar unescapeMap = {\r\n    \"0\": \"\\0\",\r\n    \"r\": \"\\r\",\r\n    \"n\": \"\\n\",\r\n    \"t\": \"\\t\"\r\n};\r\n\r\n/**\r\n * Unescapes a string.\r\n * @param {string} str String to unescape\r\n * @returns {string} Unescaped string\r\n * @property {Object.<string,string>} map Special characters map\r\n * @memberof tokenize\r\n */\r\nfunction unescape(str) {\r\n    return str.replace(unescapeRe, function($0, $1) {\r\n        switch ($1) {\r\n            case \"\\\\\":\r\n            case \"\":\r\n                return $1;\r\n            default:\r\n                return unescapeMap[$1] || \"\";\r\n        }\r\n    });\r\n}\r\n\r\ntokenize.unescape = unescape;\r\n\r\n/**\r\n * Gets the next token and advances.\r\n * @typedef TokenizerHandleNext\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Peeks for the next token.\r\n * @typedef TokenizerHandlePeek\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Pushes a token back to the stack.\r\n * @typedef TokenizerHandlePush\r\n * @type {function}\r\n * @param {string} token Token\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Skips the next token.\r\n * @typedef TokenizerHandleSkip\r\n * @type {function}\r\n * @param {string} expected Expected token\r\n * @param {boolean} [optional=false] If optional\r\n * @returns {boolean} Whether the token matched\r\n * @throws {Error} If the token didn't match and is not optional\r\n */\r\n\r\n/**\r\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\r\n * @typedef TokenizerHandleCmnt\r\n * @type {function}\r\n * @param {number} [line] Line number\r\n * @returns {string|null} Comment text or `null` if none\r\n */\r\n\r\n/**\r\n * Handle object returned from {@link tokenize}.\r\n * @interface ITokenizerHandle\r\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\r\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\r\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\r\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\r\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\r\n * @property {number} line Current line number\r\n */\r\n\r\n/**\r\n * Tokenizes the given .proto source and returns an object with useful utility functions.\r\n * @param {string} source Source contents\r\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\r\n * @returns {ITokenizerHandle} Tokenizer handle\r\n */\r\nfunction tokenize(source, alternateCommentMode) {\r\n    /* eslint-disable callback-return */\r\n    source = source.toString();\r\n\r\n    var offset = 0,\r\n        length = source.length,\r\n        line = 1,\r\n        lastCommentLine = 0,\r\n        comments = {};\r\n\r\n    var stack = [];\r\n\r\n    var stringDelim = null;\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Creates an error for illegal syntax.\r\n     * @param {string} subject Subject\r\n     * @returns {Error} Error created\r\n     * @inner\r\n     */\r\n    function illegal(subject) {\r\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\r\n    }\r\n\r\n    /**\r\n     * Reads a string till its end.\r\n     * @returns {string} String read\r\n     * @inner\r\n     */\r\n    function readString() {\r\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\r\n        re.lastIndex = offset - 1;\r\n        var match = re.exec(source);\r\n        if (!match)\r\n            throw illegal(\"string\");\r\n        offset = re.lastIndex;\r\n        push(stringDelim);\r\n        stringDelim = null;\r\n        return unescape(match[1]);\r\n    }\r\n\r\n    /**\r\n     * Gets the character at `pos` within the source.\r\n     * @param {number} pos Position\r\n     * @returns {string} Character\r\n     * @inner\r\n     */\r\n    function charAt(pos) {\r\n        return source.charAt(pos);\r\n    }\r\n\r\n    /**\r\n     * Sets the current comment text.\r\n     * @param {number} start Start offset\r\n     * @param {number} end End offset\r\n     * @param {boolean} isLeading set if a leading comment\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function setComment(start, end, isLeading) {\r\n        var comment = {\r\n            type: source.charAt(start++),\r\n            lineEmpty: false,\r\n            leading: isLeading,\r\n        };\r\n        var lookback;\r\n        if (alternateCommentMode) {\r\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\r\n        } else {\r\n            lookback = 3;  // \"///\" or \"/**\"\r\n        }\r\n        var commentOffset = start - lookback,\r\n            c;\r\n        do {\r\n            if (--commentOffset < 0 ||\r\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\r\n                comment.lineEmpty = true;\r\n                break;\r\n            }\r\n        } while (c === \" \" || c === \"\\t\");\r\n        var lines = source\r\n            .substring(start, end)\r\n            .split(setCommentSplitRe);\r\n        for (var i = 0; i < lines.length; ++i)\r\n            lines[i] = lines[i]\r\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\r\n                .trim();\r\n        comment.text = lines\r\n            .join(\"\\n\")\r\n            .trim();\r\n\r\n        comments[line] = comment;\r\n        lastCommentLine = line;\r\n    }\r\n\r\n    function isDoubleSlashCommentLine(startOffset) {\r\n        var endOffset = findEndOfLine(startOffset);\r\n\r\n        // see if remaining line matches comment pattern\r\n        var lineText = source.substring(startOffset, endOffset);\r\n        var isComment = /^\\s*\\/\\//.test(lineText);\r\n        return isComment;\r\n    }\r\n\r\n    function findEndOfLine(cursor) {\r\n        // find end of cursor's line\r\n        var endOffset = cursor;\r\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\r\n            endOffset++;\r\n        }\r\n        return endOffset;\r\n    }\r\n\r\n    /**\r\n     * Obtains the next token.\r\n     * @returns {string|null} Next token or `null` on eof\r\n     * @inner\r\n     */\r\n    function next() {\r\n        if (stack.length > 0)\r\n            return stack.shift();\r\n        if (stringDelim)\r\n            return readString();\r\n        var repeat,\r\n            prev,\r\n            curr,\r\n            start,\r\n            isDoc,\r\n            isLeadingComment = offset === 0;\r\n        do {\r\n            if (offset === length)\r\n                return null;\r\n            repeat = false;\r\n            while (whitespaceRe.test(curr = charAt(offset))) {\r\n                if (curr === \"\\n\") {\r\n                    isLeadingComment = true;\r\n                    ++line;\r\n                }\r\n                if (++offset === length)\r\n                    return null;\r\n            }\r\n\r\n            if (charAt(offset) === \"/\") {\r\n                if (++offset === length) {\r\n                    throw illegal(\"comment\");\r\n                }\r\n                if (charAt(offset) === \"/\") { // Line\r\n                    if (!alternateCommentMode) {\r\n                        // check for triple-slash comment\r\n                        isDoc = charAt(start = offset + 1) === \"/\";\r\n\r\n                        while (charAt(++offset) !== \"\\n\") {\r\n                            if (offset === length) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        ++offset;\r\n                        if (isDoc) {\r\n                            setComment(start, offset - 1, isLeadingComment);\r\n                            // Trailing comment cannot not be multi-line,\r\n                            // so leading comment state should be reset to handle potential next comments\r\n                            isLeadingComment = true;\r\n                        }\r\n                        ++line;\r\n                        repeat = true;\r\n                    } else {\r\n                        // check for double-slash comments, consolidating consecutive lines\r\n                        start = offset;\r\n                        isDoc = false;\r\n                        if (isDoubleSlashCommentLine(offset - 1)) {\r\n                            isDoc = true;\r\n                            do {\r\n                                offset = findEndOfLine(offset);\r\n                                if (offset === length) {\r\n                                    break;\r\n                                }\r\n                                offset++;\r\n                                if (!isLeadingComment) {\r\n                                    // Trailing comment cannot not be multi-line\r\n                                    break;\r\n                                }\r\n                            } while (isDoubleSlashCommentLine(offset));\r\n                        } else {\r\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\r\n                        }\r\n                        if (isDoc) {\r\n                            setComment(start, offset, isLeadingComment);\r\n                            isLeadingComment = true;\r\n                        }\r\n                        line++;\r\n                        repeat = true;\r\n                    }\r\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\r\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\r\n                    start = offset + 1;\r\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\r\n                    do {\r\n                        if (curr === \"\\n\") {\r\n                            ++line;\r\n                        }\r\n                        if (++offset === length) {\r\n                            throw illegal(\"comment\");\r\n                        }\r\n                        prev = curr;\r\n                        curr = charAt(offset);\r\n                    } while (prev !== \"*\" || curr !== \"/\");\r\n                    ++offset;\r\n                    if (isDoc) {\r\n                        setComment(start, offset - 2, isLeadingComment);\r\n                        isLeadingComment = true;\r\n                    }\r\n                    repeat = true;\r\n                } else {\r\n                    return \"/\";\r\n                }\r\n            }\r\n        } while (repeat);\r\n\r\n        // offset !== length if we got here\r\n\r\n        var end = offset;\r\n        delimRe.lastIndex = 0;\r\n        var delim = delimRe.test(charAt(end++));\r\n        if (!delim)\r\n            while (end < length && !delimRe.test(charAt(end)))\r\n                ++end;\r\n        var token = source.substring(offset, offset = end);\r\n        if (token === \"\\\"\" || token === \"'\")\r\n            stringDelim = token;\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * Pushes a token back to the stack.\r\n     * @param {string} token Token\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function push(token) {\r\n        stack.push(token);\r\n    }\r\n\r\n    /**\r\n     * Peeks for the next token.\r\n     * @returns {string|null} Token or `null` on eof\r\n     * @inner\r\n     */\r\n    function peek() {\r\n        if (!stack.length) {\r\n            var token = next();\r\n            if (token === null)\r\n                return null;\r\n            push(token);\r\n        }\r\n        return stack[0];\r\n    }\r\n\r\n    /**\r\n     * Skips a token.\r\n     * @param {string} expected Expected token\r\n     * @param {boolean} [optional=false] Whether the token is optional\r\n     * @returns {boolean} `true` when skipped, `false` if not\r\n     * @throws {Error} When a required token is not present\r\n     * @inner\r\n     */\r\n    function skip(expected, optional) {\r\n        var actual = peek(),\r\n            equals = actual === expected;\r\n        if (equals) {\r\n            next();\r\n            return true;\r\n        }\r\n        if (!optional)\r\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets a comment.\r\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\r\n     * @returns {string|null} Comment text\r\n     * @inner\r\n     */\r\n    function cmnt(trailingLine) {\r\n        var ret = null;\r\n        var comment;\r\n        if (trailingLine === undefined) {\r\n            comment = comments[line - 1];\r\n            delete comments[line - 1];\r\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\r\n                ret = comment.leading ? comment.text : null;\r\n            }\r\n        } else {\r\n            /* istanbul ignore else */\r\n            if (lastCommentLine < trailingLine) {\r\n                peek();\r\n            }\r\n            comment = comments[trailingLine];\r\n            delete comments[trailingLine];\r\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\r\n                ret = comment.leading ? null : comment.text;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return Object.defineProperty({\r\n        next: next,\r\n        peek: peek,\r\n        push: push,\r\n        skip: skip,\r\n        cmnt: cmnt\r\n    }, \"line\", {\r\n        get: function() { return line; }\r\n    });\r\n    /* eslint-enable callback-return */\r\n}\r\n", "\"use strict\";\r\nmodule.exports = parse;\r\n\r\nparse.filename = null;\r\nparse.defaults = { keepCase: false };\r\n\r\nvar tokenize  = require(\"./tokenize\"),\r\n    Root      = require(\"./root\"),\r\n    Type      = require(\"./type\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Enum      = require(\"./enum\"),\r\n    Service   = require(\"./service\"),\r\n    Method    = require(\"./method\"),\r\n    types     = require(\"./types\"),\r\n    util      = require(\"./util\");\r\n\r\nvar base10Re    = /^[1-9][0-9]*$/,\r\n    base10NegRe = /^-?[1-9][0-9]*$/,\r\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\r\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\r\n    base8Re     = /^0[0-7]+$/,\r\n    base8NegRe  = /^-?0[0-7]+$/,\r\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\r\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\r\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\r\n\r\n/**\r\n * Result object returned from {@link parse}.\r\n * @interface IParserResult\r\n * @property {string|undefined} package Package name, if declared\r\n * @property {string[]|undefined} imports Imports, if any\r\n * @property {string[]|undefined} weakImports Weak imports, if any\r\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\r\n * @property {Root} root Populated root instance\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of {@link parse}.\r\n * @interface IParseOptions\r\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\r\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\r\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of JSON serialization.\r\n * @interface IToJSONOptions\r\n * @property {boolean} [keepComments=false] Serializes comments.\r\n */\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @param {string} source Source contents\r\n * @param {Root} root Root to populate\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n */\r\nfunction parse(source, root, options) {\r\n    /* eslint-disable callback-return */\r\n    if (!(root instanceof Root)) {\r\n        options = root;\r\n        root = new Root();\r\n    }\r\n    if (!options)\r\n        options = parse.defaults;\r\n\r\n    var preferTrailingComment = options.preferTrailingComment || false;\r\n    var tn = tokenize(source, options.alternateCommentMode || false),\r\n        next = tn.next,\r\n        push = tn.push,\r\n        peek = tn.peek,\r\n        skip = tn.skip,\r\n        cmnt = tn.cmnt;\r\n\r\n    var head = true,\r\n        pkg,\r\n        imports,\r\n        weakImports,\r\n        syntax,\r\n        isProto3 = false;\r\n\r\n    var ptr = root;\r\n\r\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\r\n\r\n    /* istanbul ignore next */\r\n    function illegal(token, name, insideTryCatch) {\r\n        var filename = parse.filename;\r\n        if (!insideTryCatch)\r\n            parse.filename = null;\r\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\r\n    }\r\n\r\n    function readString() {\r\n        var values = [],\r\n            token;\r\n        do {\r\n            /* istanbul ignore if */\r\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\r\n                throw illegal(token);\r\n\r\n            values.push(next());\r\n            skip(token);\r\n            token = peek();\r\n        } while (token === \"\\\"\" || token === \"'\");\r\n        return values.join(\"\");\r\n    }\r\n\r\n    function readValue(acceptTypeRef) {\r\n        var token = next();\r\n        switch (token) {\r\n            case \"'\":\r\n            case \"\\\"\":\r\n                push(token);\r\n                return readString();\r\n            case \"true\": case \"TRUE\":\r\n                return true;\r\n            case \"false\": case \"FALSE\":\r\n                return false;\r\n        }\r\n        try {\r\n            return parseNumber(token, /* insideTryCatch */ true);\r\n        } catch (e) {\r\n\r\n            /* istanbul ignore else */\r\n            if (acceptTypeRef && typeRefRe.test(token))\r\n                return token;\r\n\r\n            /* istanbul ignore next */\r\n            throw illegal(token, \"value\");\r\n        }\r\n    }\r\n\r\n    function readRanges(target, acceptStrings) {\r\n        var token, start;\r\n        do {\r\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\r\n                target.push(readString());\r\n            else\r\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\r\n        } while (skip(\",\", true));\r\n        var dummy = {options: undefined};\r\n        dummy.setOption = function(name, value) {\r\n          if (this.options === undefined) this.options = {};\r\n          this.options[name] = value;\r\n        };\r\n        ifBlock(\r\n            dummy,\r\n            function parseRange_block(token) {\r\n              /* istanbul ignore else */\r\n              if (token === \"option\") {\r\n                parseOption(dummy, token);  // skip\r\n                skip(\";\");\r\n              } else\r\n                throw illegal(token);\r\n            },\r\n            function parseRange_line() {\r\n              parseInlineOptions(dummy);  // skip\r\n            });\r\n    }\r\n\r\n    function parseNumber(token, insideTryCatch) {\r\n        var sign = 1;\r\n        if (token.charAt(0) === \"-\") {\r\n            sign = -1;\r\n            token = token.substring(1);\r\n        }\r\n        switch (token) {\r\n            case \"inf\": case \"INF\": case \"Inf\":\r\n                return sign * Infinity;\r\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\r\n                return NaN;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n        if (base10Re.test(token))\r\n            return sign * parseInt(token, 10);\r\n        if (base16Re.test(token))\r\n            return sign * parseInt(token, 16);\r\n        if (base8Re.test(token))\r\n            return sign * parseInt(token, 8);\r\n\r\n        /* istanbul ignore else */\r\n        if (numberRe.test(token))\r\n            return sign * parseFloat(token);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"number\", insideTryCatch);\r\n    }\r\n\r\n    function parseId(token, acceptNegative) {\r\n        switch (token) {\r\n            case \"max\": case \"MAX\": case \"Max\":\r\n                return 536870911;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!acceptNegative && token.charAt(0) === \"-\")\r\n            throw illegal(token, \"id\");\r\n\r\n        if (base10NegRe.test(token))\r\n            return parseInt(token, 10);\r\n        if (base16NegRe.test(token))\r\n            return parseInt(token, 16);\r\n\r\n        /* istanbul ignore else */\r\n        if (base8NegRe.test(token))\r\n            return parseInt(token, 8);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"id\");\r\n    }\r\n\r\n    function parsePackage() {\r\n\r\n        /* istanbul ignore if */\r\n        if (pkg !== undefined)\r\n            throw illegal(\"package\");\r\n\r\n        pkg = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(pkg))\r\n            throw illegal(pkg, \"name\");\r\n\r\n        ptr = ptr.define(pkg);\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseImport() {\r\n        var token = peek();\r\n        var whichImports;\r\n        switch (token) {\r\n            case \"weak\":\r\n                whichImports = weakImports || (weakImports = []);\r\n                next();\r\n                break;\r\n            case \"public\":\r\n                next();\r\n                // eslint-disable-next-line no-fallthrough\r\n            default:\r\n                whichImports = imports || (imports = []);\r\n                break;\r\n        }\r\n        token = readString();\r\n        skip(\";\");\r\n        whichImports.push(token);\r\n    }\r\n\r\n    function parseSyntax() {\r\n        skip(\"=\");\r\n        syntax = readString();\r\n        isProto3 = syntax === \"proto3\";\r\n\r\n        /* istanbul ignore if */\r\n        if (!isProto3 && syntax !== \"proto2\")\r\n            throw illegal(syntax, \"syntax\");\r\n\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseCommon(parent, token) {\r\n        switch (token) {\r\n\r\n            case \"option\":\r\n                parseOption(parent, token);\r\n                skip(\";\");\r\n                return true;\r\n\r\n            case \"message\":\r\n                parseType(parent, token);\r\n                return true;\r\n\r\n            case \"enum\":\r\n                parseEnum(parent, token);\r\n                return true;\r\n\r\n            case \"service\":\r\n                parseService(parent, token);\r\n                return true;\r\n\r\n            case \"extend\":\r\n                parseExtension(parent, token);\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function ifBlock(obj, fnIf, fnElse) {\r\n        var trailingLine = tn.line;\r\n        if (obj) {\r\n            if(typeof obj.comment !== \"string\") {\r\n              obj.comment = cmnt(); // try block-type comment\r\n            }\r\n            obj.filename = parse.filename;\r\n        }\r\n        if (skip(\"{\", true)) {\r\n            var token;\r\n            while ((token = next()) !== \"}\")\r\n                fnIf(token);\r\n            skip(\";\", true);\r\n        } else {\r\n            if (fnElse)\r\n                fnElse();\r\n            skip(\";\");\r\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\r\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\r\n        }\r\n    }\r\n\r\n    function parseType(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"type name\");\r\n\r\n        var type = new Type(token);\r\n        ifBlock(type, function parseType_block(token) {\r\n            if (parseCommon(type, token))\r\n                return;\r\n\r\n            switch (token) {\r\n\r\n                case \"map\":\r\n                    parseMapField(type, token);\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(type, \"proto3_optional\");\r\n                    } else {\r\n                        parseField(type, \"optional\");\r\n                    }\r\n                    break;\r\n\r\n                case \"oneof\":\r\n                    parseOneOf(type, token);\r\n                    break;\r\n\r\n                case \"extensions\":\r\n                    readRanges(type.extensions || (type.extensions = []));\r\n                    break;\r\n\r\n                case \"reserved\":\r\n                    readRanges(type.reserved || (type.reserved = []), true);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n\r\n                    push(token);\r\n                    parseField(type, \"optional\");\r\n                    break;\r\n            }\r\n        });\r\n        parent.add(type);\r\n    }\r\n\r\n    function parseField(parent, rule, extend) {\r\n        var type = next();\r\n        if (type === \"group\") {\r\n            parseGroup(parent, rule);\r\n            return;\r\n        }\r\n        // Type names can consume multiple tokens, in multiple variants:\r\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\r\n        // Keep reading tokens until we get a type name with no period at the end,\r\n        // and the next token does not start with a period.\r\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\r\n            type += next();\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(type))\r\n            throw illegal(type, \"type\");\r\n\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        name = applyCase(name);\r\n        skip(\"=\");\r\n\r\n        var field = new Field(name, parseId(next()), type, rule, extend);\r\n        ifBlock(field, function parseField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n\r\n        if (rule === \"proto3_optional\") {\r\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\r\n            var oneof = new OneOf(\"_\" + name);\r\n            field.setOption(\"proto3_optional\", true);\r\n            oneof.add(field);\r\n            parent.add(oneof);\r\n        } else {\r\n            parent.add(field);\r\n        }\r\n\r\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\r\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\r\n        // all known packable types and anything that could be an enum (= is not a basic type).\r\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\r\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\r\n    }\r\n\r\n    function parseGroup(parent, rule) {\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        var fieldName = util.lcFirst(name);\r\n        if (name === fieldName)\r\n            name = util.ucFirst(name);\r\n        skip(\"=\");\r\n        var id = parseId(next());\r\n        var type = new Type(name);\r\n        type.group = true;\r\n        var field = new Field(fieldName, id, name, rule);\r\n        field.filename = parse.filename;\r\n        ifBlock(type, function parseGroup_block(token) {\r\n            switch (token) {\r\n\r\n                case \"option\":\r\n                    parseOption(type, token);\r\n                    skip(\";\");\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(type, \"proto3_optional\");\r\n                    } else {\r\n                        parseField(type, \"optional\");\r\n                    }\r\n                    break;\r\n\r\n                case \"message\":\r\n                    parseType(type, token);\r\n                    break;\r\n\r\n                case \"enum\":\r\n                    parseEnum(type, token);\r\n                    break;\r\n\r\n                /* istanbul ignore next */\r\n                default:\r\n                    throw illegal(token); // there are no groups with proto3 semantics\r\n            }\r\n        });\r\n        parent.add(type)\r\n              .add(field);\r\n    }\r\n\r\n    function parseMapField(parent) {\r\n        skip(\"<\");\r\n        var keyType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (types.mapKey[keyType] === undefined)\r\n            throw illegal(keyType, \"type\");\r\n\r\n        skip(\",\");\r\n        var valueType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(valueType))\r\n            throw illegal(valueType, \"type\");\r\n\r\n        skip(\">\");\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        skip(\"=\");\r\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\r\n        ifBlock(field, function parseMapField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseMapField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n    }\r\n\r\n    function parseOneOf(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var oneof = new OneOf(applyCase(token));\r\n        ifBlock(oneof, function parseOneOf_block(token) {\r\n            if (token === \"option\") {\r\n                parseOption(oneof, token);\r\n                skip(\";\");\r\n            } else {\r\n                push(token);\r\n                parseField(oneof, \"optional\");\r\n            }\r\n        });\r\n        parent.add(oneof);\r\n    }\r\n\r\n    function parseEnum(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var enm = new Enum(token);\r\n        ifBlock(enm, function parseEnum_block(token) {\r\n          switch(token) {\r\n            case \"option\":\r\n              parseOption(enm, token);\r\n              skip(\";\");\r\n              break;\r\n\r\n            case \"reserved\":\r\n              readRanges(enm.reserved || (enm.reserved = []), true);\r\n              break;\r\n\r\n            default:\r\n              parseEnumValue(enm, token);\r\n          }\r\n        });\r\n        parent.add(enm);\r\n    }\r\n\r\n    function parseEnumValue(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token))\r\n            throw illegal(token, \"name\");\r\n\r\n        skip(\"=\");\r\n        var value = parseId(next(), true),\r\n            dummy = {\r\n                options: undefined\r\n            };\r\n        dummy.setOption = function(name, value) {\r\n            if (this.options === undefined)\r\n                this.options = {};\r\n            this.options[name] = value;\r\n        };\r\n        ifBlock(dummy, function parseEnumValue_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(dummy, token); // skip\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseEnumValue_line() {\r\n            parseInlineOptions(dummy); // skip\r\n        });\r\n        parent.add(token, value, dummy.comment, dummy.options);\r\n    }\r\n\r\n    function parseOption(parent, token) {\r\n        var isCustom = skip(\"(\", true);\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token;\r\n        var option = name;\r\n        var propName;\r\n\r\n        if (isCustom) {\r\n            skip(\")\");\r\n            name = \"(\" + name + \")\";\r\n            option = name;\r\n            token = peek();\r\n            if (fqTypeRefRe.test(token)) {\r\n                propName = token.slice(1); //remove '.' before property name\r\n                name += token;\r\n                next();\r\n            }\r\n        }\r\n        skip(\"=\");\r\n        var optionValue = parseOptionValue(parent, name);\r\n        setParsedOption(parent, option, optionValue, propName);\r\n    }\r\n\r\n    function parseOptionValue(parent, name) {\r\n        // { a: \"foo\" b { c: \"bar\" } }\r\n        if (skip(\"{\", true)) {\r\n            var objectResult = {};\r\n\r\n            while (!skip(\"}\", true)) {\r\n                /* istanbul ignore if */\r\n                if (!nameRe.test(token = next())) {\r\n                    throw illegal(token, \"name\");\r\n                }\r\n                if (token === null) {\r\n                  throw illegal(token, \"end of input\");\r\n                }\r\n\r\n                var value;\r\n                var propName = token;\r\n\r\n                skip(\":\", true);\r\n\r\n                if (peek() === \"{\")\r\n                    value = parseOptionValue(parent, name + \".\" + token);\r\n                else if (peek() === \"[\") {\r\n                    // option (my_option) = {\r\n                    //     repeated_value: [ \"foo\", \"bar\" ]\r\n                    // };\r\n                    value = [];\r\n                    var lastValue;\r\n                    if (skip(\"[\", true)) {\r\n                        do {\r\n                            lastValue = readValue(true);\r\n                            value.push(lastValue);\r\n                        } while (skip(\",\", true));\r\n                        skip(\"]\");\r\n                        if (typeof lastValue !== \"undefined\") {\r\n                            setOption(parent, name + \".\" + token, lastValue);\r\n                        }\r\n                    }\r\n                } else {\r\n                    value = readValue(true);\r\n                    setOption(parent, name + \".\" + token, value);\r\n                }\r\n\r\n                var prevValue = objectResult[propName];\r\n\r\n                if (prevValue)\r\n                    value = [].concat(prevValue).concat(value);\r\n\r\n                objectResult[propName] = value;\r\n\r\n                // Semicolons and commas can be optional\r\n                skip(\",\", true);\r\n                skip(\";\", true);\r\n            }\r\n\r\n            return objectResult;\r\n        }\r\n\r\n        var simpleValue = readValue(true);\r\n        setOption(parent, name, simpleValue);\r\n        return simpleValue;\r\n        // Does not enforce a delimiter to be universal\r\n    }\r\n\r\n    function setOption(parent, name, value) {\r\n        if (parent.setOption)\r\n            parent.setOption(name, value);\r\n    }\r\n\r\n    function setParsedOption(parent, name, value, propName) {\r\n        if (parent.setParsedOption)\r\n            parent.setParsedOption(name, value, propName);\r\n    }\r\n\r\n    function parseInlineOptions(parent) {\r\n        if (skip(\"[\", true)) {\r\n            do {\r\n                parseOption(parent, \"option\");\r\n            } while (skip(\",\", true));\r\n            skip(\"]\");\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function parseService(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"service name\");\r\n\r\n        var service = new Service(token);\r\n        ifBlock(service, function parseService_block(token) {\r\n            if (parseCommon(service, token))\r\n                return;\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"rpc\")\r\n                parseMethod(service, token);\r\n            else\r\n                throw illegal(token);\r\n        });\r\n        parent.add(service);\r\n    }\r\n\r\n    function parseMethod(parent, token) {\r\n        // Get the comment of the preceding line now (if one exists) in case the\r\n        // method is defined across multiple lines.\r\n        var commentText = cmnt();\r\n\r\n        var type = token;\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token,\r\n            requestType, requestStream,\r\n            responseType, responseStream;\r\n\r\n        skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            requestStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        requestType = token;\r\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            responseStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        responseType = token;\r\n        skip(\")\");\r\n\r\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\r\n        method.comment = commentText;\r\n        ifBlock(method, function parseMethod_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(method, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        });\r\n        parent.add(method);\r\n    }\r\n\r\n    function parseExtension(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"reference\");\r\n\r\n        var reference = token;\r\n        ifBlock(null, function parseExtension_block(token) {\r\n            switch (token) {\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                    parseField(parent, token, reference);\r\n                    break;\r\n\r\n                case \"optional\":\r\n                    /* istanbul ignore if */\r\n                    if (isProto3) {\r\n                        parseField(parent, \"proto3_optional\", reference);\r\n                    } else {\r\n                        parseField(parent, \"optional\", reference);\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n                    push(token);\r\n                    parseField(parent, \"optional\", reference);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    var token;\r\n    while ((token = next()) !== null) {\r\n        switch (token) {\r\n\r\n            case \"package\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parsePackage();\r\n                break;\r\n\r\n            case \"import\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseImport();\r\n                break;\r\n\r\n            case \"syntax\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseSyntax();\r\n                break;\r\n\r\n            case \"option\":\r\n\r\n                parseOption(ptr, token);\r\n                skip(\";\");\r\n                break;\r\n\r\n            default:\r\n\r\n                /* istanbul ignore else */\r\n                if (parseCommon(ptr, token)) {\r\n                    head = false;\r\n                    continue;\r\n                }\r\n\r\n                /* istanbul ignore next */\r\n                throw illegal(token);\r\n        }\r\n    }\r\n\r\n    parse.filename = null;\r\n    return {\r\n        \"package\"     : pkg,\r\n        \"imports\"     : imports,\r\n         weakImports  : weakImports,\r\n         syntax       : syntax,\r\n         root         : root\r\n    };\r\n}\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @name parse\r\n * @function\r\n * @param {string} source Source contents\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n * @variation 2\r\n */\r\n", "\"use strict\";\r\nmodule.exports = common;\r\n\r\nvar commonRe = /\\/|\\./;\r\n\r\n/**\r\n * Provides common type definitions.\r\n * Can also be used to provide additional google types or your own custom types.\r\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n * @returns {undefined}\r\n * @property {INamespace} google/protobuf/any.proto Any\r\n * @property {INamespace} google/protobuf/duration.proto Duration\r\n * @property {INamespace} google/protobuf/empty.proto Empty\r\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n * @example\r\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n * protobuf.common(\"descriptor\", descriptorJson);\r\n *\r\n * // manually provides a custom definition (uses my.foo namespace)\r\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n */\r\nfunction common(name, json) {\r\n    if (!commonRe.test(name)) {\r\n        name = \"google/protobuf/\" + name + \".proto\";\r\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\r\n    }\r\n    common[name] = json;\r\n}\r\n\r\n// Not provided because of limited use (feel free to discuss or to provide yourself):\r\n//\r\n// google/protobuf/descriptor.proto\r\n// google/protobuf/source_context.proto\r\n// google/protobuf/type.proto\r\n//\r\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\r\n// the repository or package within the google/protobuf directory.\r\n\r\ncommon(\"any\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Any message.\r\n     * @interface IAny\r\n     * @type {Object}\r\n     * @property {string} [typeUrl]\r\n     * @property {Uint8Array} [bytes]\r\n     * @memberof common\r\n     */\r\n    Any: {\r\n        fields: {\r\n            type_url: {\r\n                type: \"string\",\r\n                id: 1\r\n            },\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nvar timeType;\r\n\r\ncommon(\"duration\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Duration message.\r\n     * @interface IDuration\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Duration: timeType = {\r\n        fields: {\r\n            seconds: {\r\n                type: \"int64\",\r\n                id: 1\r\n            },\r\n            nanos: {\r\n                type: \"int32\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"timestamp\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Timestamp message.\r\n     * @interface ITimestamp\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Timestamp: timeType\r\n});\r\n\r\ncommon(\"empty\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Empty message.\r\n     * @interface IEmpty\r\n     * @memberof common\r\n     */\r\n    Empty: {\r\n        fields: {}\r\n    }\r\n});\r\n\r\ncommon(\"struct\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Struct message.\r\n     * @interface IStruct\r\n     * @type {Object}\r\n     * @property {Object.<string,IValue>} [fields]\r\n     * @memberof common\r\n     */\r\n    Struct: {\r\n        fields: {\r\n            fields: {\r\n                keyType: \"string\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Value message.\r\n     * @interface IValue\r\n     * @type {Object}\r\n     * @property {string} [kind]\r\n     * @property {0} [nullValue]\r\n     * @property {number} [numberValue]\r\n     * @property {string} [stringValue]\r\n     * @property {boolean} [boolValue]\r\n     * @property {IStruct} [structValue]\r\n     * @property {IListValue} [listValue]\r\n     * @memberof common\r\n     */\r\n    Value: {\r\n        oneofs: {\r\n            kind: {\r\n                oneof: [\r\n                    \"nullValue\",\r\n                    \"numberValue\",\r\n                    \"stringValue\",\r\n                    \"boolValue\",\r\n                    \"structValue\",\r\n                    \"listValue\"\r\n                ]\r\n            }\r\n        },\r\n        fields: {\r\n            nullValue: {\r\n                type: \"NullValue\",\r\n                id: 1\r\n            },\r\n            numberValue: {\r\n                type: \"double\",\r\n                id: 2\r\n            },\r\n            stringValue: {\r\n                type: \"string\",\r\n                id: 3\r\n            },\r\n            boolValue: {\r\n                type: \"bool\",\r\n                id: 4\r\n            },\r\n            structValue: {\r\n                type: \"Struct\",\r\n                id: 5\r\n            },\r\n            listValue: {\r\n                type: \"ListValue\",\r\n                id: 6\r\n            }\r\n        }\r\n    },\r\n\r\n    NullValue: {\r\n        values: {\r\n            NULL_VALUE: 0\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.ListValue message.\r\n     * @interface IListValue\r\n     * @type {Object}\r\n     * @property {Array.<IValue>} [values]\r\n     * @memberof common\r\n     */\r\n    ListValue: {\r\n        fields: {\r\n            values: {\r\n                rule: \"repeated\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"wrappers\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.DoubleValue message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    DoubleValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"double\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FloatValue message.\r\n     * @interface IFloatValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FloatValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"float\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int64Value message.\r\n     * @interface IInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    Int64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt64Value message.\r\n     * @interface IUInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    UInt64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int32Value message.\r\n     * @interface IInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    Int32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt32Value message.\r\n     * @interface IUInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    UInt32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BoolValue message.\r\n     * @interface IBoolValue\r\n     * @type {Object}\r\n     * @property {boolean} [value]\r\n     * @memberof common\r\n     */\r\n    BoolValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bool\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.StringValue message.\r\n     * @interface IStringValue\r\n     * @type {Object}\r\n     * @property {string} [value]\r\n     * @memberof common\r\n     */\r\n    StringValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BytesValue message.\r\n     * @interface IBytesValue\r\n     * @type {Object}\r\n     * @property {Uint8Array} [value]\r\n     * @memberof common\r\n     */\r\n    BytesValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"field_mask\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FieldMask message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FieldMask: {\r\n        fields: {\r\n            paths: {\r\n                rule: \"repeated\",\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Gets the root definition of the specified common proto file.\r\n *\r\n * Bundled definitions are:\r\n * - google/protobuf/any.proto\r\n * - google/protobuf/duration.proto\r\n * - google/protobuf/empty.proto\r\n * - google/protobuf/field_mask.proto\r\n * - google/protobuf/struct.proto\r\n * - google/protobuf/timestamp.proto\r\n * - google/protobuf/wrappers.proto\r\n *\r\n * @param {string} file Proto file name\r\n * @returns {INamespace|null} Root definition or `null` if not defined\r\n */\r\ncommon.get = function get(file) {\r\n    return common[file] || null;\r\n};\r\n", "\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-light\");\r\n\r\nprotobuf.build = \"full\";\r\n\r\n// Parser\r\nprotobuf.tokenize         = require(\"./tokenize\");\r\nprotobuf.parse            = require(\"./parse\");\r\nprotobuf.common           = require(\"./common\");\r\n\r\n// Configure parser\r\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\r\n", "// full library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index\");\r\n", "{\r\n  \"nested\": {\r\n    \"google\": {\r\n      \"nested\": {\r\n        \"protobuf\": {\r\n          \"nested\": {\r\n            \"FileDescriptorSet\": {\r\n              \"fields\": {\r\n                \"file\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"FileDescriptorProto\",\r\n                  \"id\": 1\r\n                }\r\n              }\r\n            },\r\n            \"FileDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"package\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 2\r\n                },\r\n                \"dependency\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"string\",\r\n                  \"id\": 3\r\n                },\r\n                \"publicDependency\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"int32\",\r\n                  \"id\": 10,\r\n                  \"options\": {\r\n                    \"packed\": false\r\n                  }\r\n                },\r\n                \"weakDependency\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"int32\",\r\n                  \"id\": 11,\r\n                  \"options\": {\r\n                    \"packed\": false\r\n                  }\r\n                },\r\n                \"messageType\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"DescriptorProto\",\r\n                  \"id\": 4\r\n                },\r\n                \"enumType\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"EnumDescriptorProto\",\r\n                  \"id\": 5\r\n                },\r\n                \"service\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"ServiceDescriptorProto\",\r\n                  \"id\": 6\r\n                },\r\n                \"extension\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"FieldDescriptorProto\",\r\n                  \"id\": 7\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"FileOptions\",\r\n                  \"id\": 8\r\n                },\r\n                \"sourceCodeInfo\": {\r\n                  \"type\": \"SourceCodeInfo\",\r\n                  \"id\": 9\r\n                },\r\n                \"syntax\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 12\r\n                }\r\n              }\r\n            },\r\n            \"DescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"field\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"FieldDescriptorProto\",\r\n                  \"id\": 2\r\n                },\r\n                \"extension\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"FieldDescriptorProto\",\r\n                  \"id\": 6\r\n                },\r\n                \"nestedType\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"DescriptorProto\",\r\n                  \"id\": 3\r\n                },\r\n                \"enumType\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"EnumDescriptorProto\",\r\n                  \"id\": 4\r\n                },\r\n                \"extensionRange\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"ExtensionRange\",\r\n                  \"id\": 5\r\n                },\r\n                \"oneofDecl\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"OneofDescriptorProto\",\r\n                  \"id\": 8\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"MessageOptions\",\r\n                  \"id\": 7\r\n                },\r\n                \"reservedRange\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"ReservedRange\",\r\n                  \"id\": 9\r\n                },\r\n                \"reservedName\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"string\",\r\n                  \"id\": 10\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"ExtensionRange\": {\r\n                  \"fields\": {\r\n                    \"start\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 1\r\n                    },\r\n                    \"end\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 2\r\n                    }\r\n                  }\r\n                },\r\n                \"ReservedRange\": {\r\n                  \"fields\": {\r\n                    \"start\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 1\r\n                    },\r\n                    \"end\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 2\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"FieldDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"number\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 3\r\n                },\r\n                \"label\": {\r\n                  \"type\": \"Label\",\r\n                  \"id\": 4\r\n                },\r\n                \"type\": {\r\n                  \"type\": \"Type\",\r\n                  \"id\": 5\r\n                },\r\n                \"typeName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 6\r\n                },\r\n                \"extendee\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 2\r\n                },\r\n                \"defaultValue\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 7\r\n                },\r\n                \"oneofIndex\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 9\r\n                },\r\n                \"jsonName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 10\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"FieldOptions\",\r\n                  \"id\": 8\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"Type\": {\r\n                  \"values\": {\r\n                    \"TYPE_DOUBLE\": 1,\r\n                    \"TYPE_FLOAT\": 2,\r\n                    \"TYPE_INT64\": 3,\r\n                    \"TYPE_UINT64\": 4,\r\n                    \"TYPE_INT32\": 5,\r\n                    \"TYPE_FIXED64\": 6,\r\n                    \"TYPE_FIXED32\": 7,\r\n                    \"TYPE_BOOL\": 8,\r\n                    \"TYPE_STRING\": 9,\r\n                    \"TYPE_GROUP\": 10,\r\n                    \"TYPE_MESSAGE\": 11,\r\n                    \"TYPE_BYTES\": 12,\r\n                    \"TYPE_UINT32\": 13,\r\n                    \"TYPE_ENUM\": 14,\r\n                    \"TYPE_SFIXED32\": 15,\r\n                    \"TYPE_SFIXED64\": 16,\r\n                    \"TYPE_SINT32\": 17,\r\n                    \"TYPE_SINT64\": 18\r\n                  }\r\n                },\r\n                \"Label\": {\r\n                  \"values\": {\r\n                    \"LABEL_OPTIONAL\": 1,\r\n                    \"LABEL_REQUIRED\": 2,\r\n                    \"LABEL_REPEATED\": 3\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"OneofDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"OneofOptions\",\r\n                  \"id\": 2\r\n                }\r\n              }\r\n            },\r\n            \"EnumDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"value\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"EnumValueDescriptorProto\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"EnumOptions\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            },\r\n            \"EnumValueDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"number\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"EnumValueOptions\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            },\r\n            \"ServiceDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"method\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"MethodDescriptorProto\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"ServiceOptions\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            },\r\n            \"MethodDescriptorProto\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"inputType\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 2\r\n                },\r\n                \"outputType\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 3\r\n                },\r\n                \"options\": {\r\n                  \"type\": \"MethodOptions\",\r\n                  \"id\": 4\r\n                },\r\n                \"clientStreaming\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 5\r\n                },\r\n                \"serverStreaming\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 6\r\n                }\r\n              }\r\n            },\r\n            \"FileOptions\": {\r\n              \"fields\": {\r\n                \"javaPackage\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"javaOuterClassname\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 8\r\n                },\r\n                \"javaMultipleFiles\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 10\r\n                },\r\n                \"javaGenerateEqualsAndHash\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 20,\r\n                  \"options\": {\r\n                    \"deprecated\": true\r\n                  }\r\n                },\r\n                \"javaStringCheckUtf8\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 27\r\n                },\r\n                \"optimizeFor\": {\r\n                  \"type\": \"OptimizeMode\",\r\n                  \"id\": 9,\r\n                  \"options\": {\r\n                    \"default\": \"SPEED\"\r\n                  }\r\n                },\r\n                \"goPackage\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 11\r\n                },\r\n                \"ccGenericServices\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 16\r\n                },\r\n                \"javaGenericServices\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 17\r\n                },\r\n                \"pyGenericServices\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 18\r\n                },\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 23\r\n                },\r\n                \"ccEnableArenas\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 31\r\n                },\r\n                \"objcClassPrefix\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 36\r\n                },\r\n                \"csharpNamespace\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 37\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ],\r\n              \"reserved\": [\r\n                [\r\n                  38,\r\n                  38\r\n                ]\r\n              ],\r\n              \"nested\": {\r\n                \"OptimizeMode\": {\r\n                  \"values\": {\r\n                    \"SPEED\": 1,\r\n                    \"CODE_SIZE\": 2,\r\n                    \"LITE_RUNTIME\": 3\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"MessageOptions\": {\r\n              \"fields\": {\r\n                \"messageSetWireFormat\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 1\r\n                },\r\n                \"noStandardDescriptorAccessor\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 2\r\n                },\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 3\r\n                },\r\n                \"mapEntry\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 7\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ],\r\n              \"reserved\": [\r\n                [\r\n                  8,\r\n                  8\r\n                ]\r\n              ]\r\n            },\r\n            \"FieldOptions\": {\r\n              \"fields\": {\r\n                \"ctype\": {\r\n                  \"type\": \"CType\",\r\n                  \"id\": 1,\r\n                  \"options\": {\r\n                    \"default\": \"STRING\"\r\n                  }\r\n                },\r\n                \"packed\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 2\r\n                },\r\n                \"jstype\": {\r\n                  \"type\": \"JSType\",\r\n                  \"id\": 6,\r\n                  \"options\": {\r\n                    \"default\": \"JS_NORMAL\"\r\n                  }\r\n                },\r\n                \"lazy\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 5\r\n                },\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 3\r\n                },\r\n                \"weak\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 10\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ],\r\n              \"reserved\": [\r\n                [\r\n                  4,\r\n                  4\r\n                ]\r\n              ],\r\n              \"nested\": {\r\n                \"CType\": {\r\n                  \"values\": {\r\n                    \"STRING\": 0,\r\n                    \"CORD\": 1,\r\n                    \"STRING_PIECE\": 2\r\n                  }\r\n                },\r\n                \"JSType\": {\r\n                  \"values\": {\r\n                    \"JS_NORMAL\": 0,\r\n                    \"JS_STRING\": 1,\r\n                    \"JS_NUMBER\": 2\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"OneofOptions\": {\r\n              \"fields\": {\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ]\r\n            },\r\n            \"EnumOptions\": {\r\n              \"fields\": {\r\n                \"allowAlias\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 2\r\n                },\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 3\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ]\r\n            },\r\n            \"EnumValueOptions\": {\r\n              \"fields\": {\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 1\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ]\r\n            },\r\n            \"ServiceOptions\": {\r\n              \"fields\": {\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 33\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ]\r\n            },\r\n            \"MethodOptions\": {\r\n              \"fields\": {\r\n                \"deprecated\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 33\r\n                },\r\n                \"uninterpretedOption\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"UninterpretedOption\",\r\n                  \"id\": 999\r\n                }\r\n              },\r\n              \"extensions\": [\r\n                [\r\n                  1000,\r\n                  536870911\r\n                ]\r\n              ]\r\n            },\r\n            \"UninterpretedOption\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"NamePart\",\r\n                  \"id\": 2\r\n                },\r\n                \"identifierValue\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 3\r\n                },\r\n                \"positiveIntValue\": {\r\n                  \"type\": \"uint64\",\r\n                  \"id\": 4\r\n                },\r\n                \"negativeIntValue\": {\r\n                  \"type\": \"int64\",\r\n                  \"id\": 5\r\n                },\r\n                \"doubleValue\": {\r\n                  \"type\": \"double\",\r\n                  \"id\": 6\r\n                },\r\n                \"stringValue\": {\r\n                  \"type\": \"bytes\",\r\n                  \"id\": 7\r\n                },\r\n                \"aggregateValue\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 8\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"NamePart\": {\r\n                  \"fields\": {\r\n                    \"namePart\": {\r\n                      \"rule\": \"required\",\r\n                      \"type\": \"string\",\r\n                      \"id\": 1\r\n                    },\r\n                    \"isExtension\": {\r\n                      \"rule\": \"required\",\r\n                      \"type\": \"bool\",\r\n                      \"id\": 2\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"SourceCodeInfo\": {\r\n              \"fields\": {\r\n                \"location\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Location\",\r\n                  \"id\": 1\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"Location\": {\r\n                  \"fields\": {\r\n                    \"path\": {\r\n                      \"rule\": \"repeated\",\r\n                      \"type\": \"int32\",\r\n                      \"id\": 1\r\n                    },\r\n                    \"span\": {\r\n                      \"rule\": \"repeated\",\r\n                      \"type\": \"int32\",\r\n                      \"id\": 2\r\n                    },\r\n                    \"leadingComments\": {\r\n                      \"type\": \"string\",\r\n                      \"id\": 3\r\n                    },\r\n                    \"trailingComments\": {\r\n                      \"type\": \"string\",\r\n                      \"id\": 4\r\n                    },\r\n                    \"leadingDetachedComments\": {\r\n                      \"rule\": \"repeated\",\r\n                      \"type\": \"string\",\r\n                      \"id\": 6\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"GeneratedCodeInfo\": {\r\n              \"fields\": {\r\n                \"annotation\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Annotation\",\r\n                  \"id\": 1\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"Annotation\": {\r\n                  \"fields\": {\r\n                    \"path\": {\r\n                      \"rule\": \"repeated\",\r\n                      \"type\": \"int32\",\r\n                      \"id\": 1\r\n                    },\r\n                    \"sourceFile\": {\r\n                      \"type\": \"string\",\r\n                      \"id\": 2\r\n                    },\r\n                    \"begin\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 3\r\n                    },\r\n                    \"end\": {\r\n                      \"type\": \"int32\",\r\n                      \"id\": 4\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}", "\"use strict\";\r\nvar $protobuf = require(\"../..\");\r\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\r\n\r\nvar Namespace = $protobuf.Namespace,\r\n    Root      = $protobuf.Root,\r\n    Enum      = $protobuf.Enum,\r\n    Type      = $protobuf.Type,\r\n    Field     = $protobuf.Field,\r\n    MapField  = $protobuf.MapField,\r\n    OneOf     = $protobuf.OneOf,\r\n    Service   = $protobuf.Service,\r\n    Method    = $protobuf.Method;\r\n\r\n// --- Root ---\r\n\r\n/**\r\n * Properties of a FileDescriptorSet message.\r\n * @interface IFileDescriptorSet\r\n * @property {IFileDescriptorProto[]} file Files\r\n */\r\n\r\n/**\r\n * Properties of a FileDescriptorProto message.\r\n * @interface IFileDescriptorProto\r\n * @property {string} [name] File name\r\n * @property {string} [package] Package\r\n * @property {*} [dependency] Not supported\r\n * @property {*} [publicDependency] Not supported\r\n * @property {*} [weakDependency] Not supported\r\n * @property {IDescriptorProto[]} [messageType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IServiceDescriptorProto[]} [service] Nested services\r\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\r\n * @property {IFileOptions} [options] Options\r\n * @property {*} [sourceCodeInfo] Not supported\r\n * @property {string} [syntax=\"proto2\"] Syntax\r\n */\r\n\r\n/**\r\n * Properties of a FileOptions message.\r\n * @interface IFileOptions\r\n * @property {string} [javaPackage]\r\n * @property {string} [javaOuterClassname]\r\n * @property {boolean} [javaMultipleFiles]\r\n * @property {boolean} [javaGenerateEqualsAndHash]\r\n * @property {boolean} [javaStringCheckUtf8]\r\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\r\n * @property {string} [goPackage]\r\n * @property {boolean} [ccGenericServices]\r\n * @property {boolean} [javaGenericServices]\r\n * @property {boolean} [pyGenericServices]\r\n * @property {boolean} [deprecated]\r\n * @property {boolean} [ccEnableArenas]\r\n * @property {string} [objcClassPrefix]\r\n * @property {string} [csharpNamespace]\r\n */\r\n\r\n/**\r\n * Values of he FileOptions.OptimizeMode enum.\r\n * @typedef IFileOptionsOptimizeMode\r\n * @type {number}\r\n * @property {number} SPEED=1\r\n * @property {number} CODE_SIZE=2\r\n * @property {number} LITE_RUNTIME=3\r\n */\r\n\r\n/**\r\n * Creates a root from a descriptor set.\r\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Root} Root instance\r\n */\r\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\r\n\r\n    var root = new Root();\r\n\r\n    if (descriptor.file) {\r\n        var fileDescriptor,\r\n            filePackage;\r\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\r\n            filePackage = root;\r\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\r\n                filePackage = root.define(fileDescriptor[\"package\"]);\r\n            if (fileDescriptor.name && fileDescriptor.name.length)\r\n                root.files.push(filePackage.filename = fileDescriptor.name);\r\n            if (fileDescriptor.messageType)\r\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\r\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\r\n            if (fileDescriptor.enumType)\r\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\r\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\r\n            if (fileDescriptor.extension)\r\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\r\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\r\n            if (fileDescriptor.service)\r\n                for (i = 0; i < fileDescriptor.service.length; ++i)\r\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\r\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\r\n            if (opts) {\r\n                var ks = Object.keys(opts);\r\n                for (i = 0; i < ks.length; ++i)\r\n                    filePackage.setOption(ks[i], opts[ks[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n};\r\n\r\n/**\r\n * Converts a root to a descriptor set.\r\n * @returns {Message<IFileDescriptorSet>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var set = exports.FileDescriptorSet.create();\r\n    Root_toDescriptorRecursive(this, set.file, syntax);\r\n    return set;\r\n};\r\n\r\n// Traverses a namespace and assembles the descriptor set\r\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\r\n\r\n    // Create a new file\r\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\r\n    if (syntax)\r\n        file.syntax = syntax;\r\n    if (!(ns instanceof Root))\r\n        file[\"package\"] = ns.fullName.substring(1);\r\n\r\n    // Add nested types\r\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\r\n        if ((nested = ns._nestedArray[i]) instanceof Type)\r\n            file.messageType.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Enum)\r\n            file.enumType.push(nested.toDescriptor());\r\n        else if (nested instanceof Field)\r\n            file.extension.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Service)\r\n            file.service.push(nested.toDescriptor());\r\n        else if (nested instanceof /* plain */ Namespace)\r\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\r\n\r\n    // Keep package-level options\r\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\r\n\r\n    // And keep the file only if there is at least one nested object\r\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\r\n        files.push(file);\r\n}\r\n\r\n// --- Type ---\r\n\r\n/**\r\n * Properties of a DescriptorProto message.\r\n * @interface IDescriptorProto\r\n * @property {string} [name] Message type name\r\n * @property {IFieldDescriptorProto[]} [field] Fields\r\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\r\n * @property {IDescriptorProto[]} [nestedType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\r\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\r\n * @property {IMessageOptions} [options] Not supported\r\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\r\n * @property {string[]} [reservedName] Reserved names\r\n */\r\n\r\n/**\r\n * Properties of a MessageOptions message.\r\n * @interface IMessageOptions\r\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\r\n */\r\n\r\n/**\r\n * Properties of an ExtensionRange message.\r\n * @interface IDescriptorProtoExtensionRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\n/**\r\n * Properties of a ReservedRange message.\r\n * @interface IDescriptorProtoReservedRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\nvar unnamedMessageIndex = 0;\r\n\r\n/**\r\n * Creates a type from a descriptor.\r\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Type} Type instance\r\n */\r\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    // Create the message type\r\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\r\n        i;\r\n\r\n    /* Oneofs */ if (descriptor.oneofDecl)\r\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\r\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\r\n    /* Fields */ if (descriptor.field)\r\n        for (i = 0; i < descriptor.field.length; ++i) {\r\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\r\n            type.add(field);\r\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\r\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\r\n        }\r\n    /* Extension fields */ if (descriptor.extension)\r\n        for (i = 0; i < descriptor.extension.length; ++i)\r\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\r\n    /* Nested types */ if (descriptor.nestedType)\r\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\r\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\r\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\r\n                type.setOption(\"map_entry\", true);\r\n        }\r\n    /* Nested enums */ if (descriptor.enumType)\r\n        for (i = 0; i < descriptor.enumType.length; ++i)\r\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\r\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\r\n        type.extensions = [];\r\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\r\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\r\n    }\r\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\r\n        type.reserved = [];\r\n        /* Ranges */ if (descriptor.reservedRange)\r\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\r\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\r\n        /* Names */ if (descriptor.reservedName)\r\n            for (i = 0; i < descriptor.reservedName.length; ++i)\r\n                type.reserved.push(descriptor.reservedName[i]);\r\n    }\r\n\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts a type to a descriptor.\r\n * @returns {Message<IDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nType.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\r\n        i;\r\n\r\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\r\n        var fieldDescriptor;\r\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\r\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\r\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\r\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\r\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\r\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\r\n                    : undefined;\r\n            descriptor.nestedType.push(exports.DescriptorProto.create({\r\n                name: fieldDescriptor.typeName,\r\n                field: [\r\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\r\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\r\n                ],\r\n                options: exports.MessageOptions.create({ mapEntry: true })\r\n            }));\r\n        }\r\n    }\r\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\r\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\r\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\r\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\r\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\r\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\r\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\r\n        // plain nested namespaces become packages instead in Root#toDescriptor\r\n    }\r\n    /* Extension ranges */ if (this.extensions)\r\n        for (i = 0; i < this.extensions.length; ++i)\r\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\r\n    /* Reserved... */ if (this.reserved)\r\n        for (i = 0; i < this.reserved.length; ++i)\r\n            /* Names */ if (typeof this.reserved[i] === \"string\")\r\n                descriptor.reservedName.push(this.reserved[i]);\r\n            /* Ranges */ else\r\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\r\n\r\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Field ---\r\n\r\n/**\r\n * Properties of a FieldDescriptorProto message.\r\n * @interface IFieldDescriptorProto\r\n * @property {string} [name] Field name\r\n * @property {number} [number] Field id\r\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\r\n * @property {IFieldDescriptorProtoType} [type] Field basic type\r\n * @property {string} [typeName] Field type name\r\n * @property {string} [extendee] Extended type name\r\n * @property {string} [defaultValue] Literal default value\r\n * @property {number} [oneofIndex] Oneof index if part of a oneof\r\n * @property {*} [jsonName] Not supported\r\n * @property {IFieldOptions} [options] Field options\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Label enum.\r\n * @typedef IFieldDescriptorProtoLabel\r\n * @type {number}\r\n * @property {number} LABEL_OPTIONAL=1\r\n * @property {number} LABEL_REQUIRED=2\r\n * @property {number} LABEL_REPEATED=3\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Type enum.\r\n * @typedef IFieldDescriptorProtoType\r\n * @type {number}\r\n * @property {number} TYPE_DOUBLE=1\r\n * @property {number} TYPE_FLOAT=2\r\n * @property {number} TYPE_INT64=3\r\n * @property {number} TYPE_UINT64=4\r\n * @property {number} TYPE_INT32=5\r\n * @property {number} TYPE_FIXED64=6\r\n * @property {number} TYPE_FIXED32=7\r\n * @property {number} TYPE_BOOL=8\r\n * @property {number} TYPE_STRING=9\r\n * @property {number} TYPE_GROUP=10\r\n * @property {number} TYPE_MESSAGE=11\r\n * @property {number} TYPE_BYTES=12\r\n * @property {number} TYPE_UINT32=13\r\n * @property {number} TYPE_ENUM=14\r\n * @property {number} TYPE_SFIXED32=15\r\n * @property {number} TYPE_SFIXED64=16\r\n * @property {number} TYPE_SINT32=17\r\n * @property {number} TYPE_SINT64=18\r\n */\r\n\r\n/**\r\n * Properties of a FieldOptions message.\r\n * @interface IFieldOptions\r\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\r\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\r\n */\r\n\r\n/**\r\n * Values of the FieldOptions.JSType enum.\r\n * @typedef IFieldOptionsJSType\r\n * @type {number}\r\n * @property {number} JS_NORMAL=0\r\n * @property {number} JS_STRING=1\r\n * @property {number} JS_NUMBER=2\r\n */\r\n\r\n// copied here from parse.js\r\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\r\n\r\n/**\r\n * Creates a field from a descriptor.\r\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Field} Field instance\r\n */\r\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    if (typeof descriptor.number !== \"number\")\r\n        throw Error(\"missing field id\");\r\n\r\n    // Rewire field type\r\n    var fieldType;\r\n    if (descriptor.typeName && descriptor.typeName.length)\r\n        fieldType = descriptor.typeName;\r\n    else\r\n        fieldType = fromDescriptorType(descriptor.type);\r\n\r\n    // Rewire field rule\r\n    var fieldRule;\r\n    switch (descriptor.label) {\r\n        // 0 is reserved for errors\r\n        case 1: fieldRule = undefined; break;\r\n        case 2: fieldRule = \"required\"; break;\r\n        case 3: fieldRule = \"repeated\"; break;\r\n        default: throw Error(\"illegal label: \" + descriptor.label);\r\n    }\r\n\r\n\tvar extendee = descriptor.extendee;\r\n\tif (descriptor.extendee !== undefined) {\r\n\t\textendee = extendee.length ? extendee : undefined;\r\n\t}\r\n    var field = new Field(\r\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\r\n        descriptor.number,\r\n        fieldType,\r\n        fieldRule,\r\n        extendee\r\n    );\r\n\r\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\r\n\r\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\r\n        var defaultValue = descriptor.defaultValue;\r\n        switch (defaultValue) {\r\n            case \"true\": case \"TRUE\":\r\n                defaultValue = true;\r\n                break;\r\n            case \"false\": case \"FALSE\":\r\n                defaultValue = false;\r\n                break;\r\n            default:\r\n                var match = numberRe.exec(defaultValue);\r\n                if (match)\r\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\r\n                break;\r\n        }\r\n        field.setOption(\"default\", defaultValue);\r\n    }\r\n\r\n    if (packableDescriptorType(descriptor.type)) {\r\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\r\n            if (descriptor.options && !descriptor.options.packed)\r\n                field.setOption(\"packed\", false);\r\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\r\n            field.setOption(\"packed\", false);\r\n    }\r\n\r\n    return field;\r\n};\r\n\r\n/**\r\n * Converts a field to a descriptor.\r\n * @returns {Message<IFieldDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nField.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\r\n\r\n    if (this.map) {\r\n\r\n        descriptor.type = 11; // message\r\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\r\n        descriptor.label = 3; // repeated\r\n\r\n    } else {\r\n\r\n        // Rewire field type\r\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\r\n            case 10: // group\r\n            case 11: // type\r\n            case 14: // enum\r\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\r\n                break;\r\n        }\r\n\r\n        // Rewire field rule\r\n        switch (this.rule) {\r\n            case \"repeated\": descriptor.label = 3; break;\r\n            case \"required\": descriptor.label = 2; break;\r\n            default: descriptor.label = 1; break;\r\n        }\r\n\r\n    }\r\n\r\n    // Handle extension field\r\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\r\n\r\n    // Handle part of oneof\r\n    if (this.partOf)\r\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\r\n            throw Error(\"missing oneof\");\r\n\r\n    if (this.options) {\r\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\r\n        if (this.options[\"default\"] != null)\r\n            descriptor.defaultValue = String(this.options[\"default\"]);\r\n    }\r\n\r\n    if (syntax === \"proto3\") { // defaults to packed=true\r\n        if (!this.packed)\r\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\r\n    } else if (this.packed) // defaults to packed=false\r\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Enum ---\r\n\r\n/**\r\n * Properties of an EnumDescriptorProto message.\r\n * @interface IEnumDescriptorProto\r\n * @property {string} [name] Enum name\r\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\r\n * @property {IEnumOptions} [options] Enum options\r\n */\r\n\r\n/**\r\n * Properties of an EnumValueDescriptorProto message.\r\n * @interface IEnumValueDescriptorProto\r\n * @property {string} [name] Name\r\n * @property {number} [number] Value\r\n * @property {*} [options] Not supported\r\n */\r\n\r\n/**\r\n * Properties of an EnumOptions message.\r\n * @interface IEnumOptions\r\n * @property {boolean} [allowAlias] Whether aliases are allowed\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedEnumIndex = 0;\r\n\r\n/**\r\n * Creates an enum from a descriptor.\r\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Enum} Enum instance\r\n */\r\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\r\n\r\n    // Construct values object\r\n    var values = {};\r\n    if (descriptor.value)\r\n        for (var i = 0; i < descriptor.value.length; ++i) {\r\n            var name  = descriptor.value[i].name,\r\n                value = descriptor.value[i].number || 0;\r\n            values[name && name.length ? name : \"NAME\" + value] = value;\r\n        }\r\n\r\n    return new Enum(\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\r\n        values,\r\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts an enum to a descriptor.\r\n * @returns {Message<IEnumDescriptorProto>} Descriptor\r\n */\r\nEnum.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Values\r\n    var values = [];\r\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\r\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\r\n\r\n    return exports.EnumDescriptorProto.create({\r\n        name: this.name,\r\n        value: values,\r\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\r\n    });\r\n};\r\n\r\n// --- OneOf ---\r\n\r\n/**\r\n * Properties of a OneofDescriptorProto message.\r\n * @interface IOneofDescriptorProto\r\n * @property {string} [name] Oneof name\r\n * @property {*} [options] Not supported\r\n */\r\n\r\nvar unnamedOneofIndex = 0;\r\n\r\n/**\r\n * Creates a oneof from a descriptor.\r\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {OneOf} OneOf instance\r\n */\r\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\r\n\r\n    return new OneOf(\r\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\r\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a oneof to a descriptor.\r\n * @returns {Message<IOneofDescriptorProto>} Descriptor\r\n */\r\nOneOf.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.OneofDescriptorProto.create({\r\n        name: this.name\r\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\r\n    });\r\n};\r\n\r\n// --- Service ---\r\n\r\n/**\r\n * Properties of a ServiceDescriptorProto message.\r\n * @interface IServiceDescriptorProto\r\n * @property {string} [name] Service name\r\n * @property {IMethodDescriptorProto[]} [method] Methods\r\n * @property {IServiceOptions} [options] Options\r\n */\r\n\r\n/**\r\n * Properties of a ServiceOptions message.\r\n * @interface IServiceOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedServiceIndex = 0;\r\n\r\n/**\r\n * Creates a service from a descriptor.\r\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Service} Service instance\r\n */\r\nService.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\r\n\r\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\r\n    if (descriptor.method)\r\n        for (var i = 0; i < descriptor.method.length; ++i)\r\n            service.add(Method.fromDescriptor(descriptor.method[i]));\r\n\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts a service to a descriptor.\r\n * @returns {Message<IServiceDescriptorProto>} Descriptor\r\n */\r\nService.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Methods\r\n    var methods = [];\r\n    for (var i = 0; i < this.methodsArray.length; ++i)\r\n        methods.push(this._methodsArray[i].toDescriptor());\r\n\r\n    return exports.ServiceDescriptorProto.create({\r\n        name: this.name,\r\n        method: methods,\r\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\r\n    });\r\n};\r\n\r\n// --- Method ---\r\n\r\n/**\r\n * Properties of a MethodDescriptorProto message.\r\n * @interface IMethodDescriptorProto\r\n * @property {string} [name] Method name\r\n * @property {string} [inputType] Request type name\r\n * @property {string} [outputType] Response type name\r\n * @property {IMethodOptions} [options] Not supported\r\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\r\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\r\n */\r\n\r\n/**\r\n * Properties of a MethodOptions message.\r\n * @interface IMethodOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedMethodIndex = 0;\r\n\r\n/**\r\n * Creates a method from a descriptor.\r\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Method} Reflected method instance\r\n */\r\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\r\n\r\n    return new Method(\r\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\r\n        \"rpc\",\r\n        descriptor.inputType,\r\n        descriptor.outputType,\r\n        Boolean(descriptor.clientStreaming),\r\n        Boolean(descriptor.serverStreaming),\r\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a method to a descriptor.\r\n * @returns {Message<IMethodDescriptorProto>} Descriptor\r\n */\r\nMethod.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.MethodDescriptorProto.create({\r\n        name: this.name,\r\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\r\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\r\n        clientStreaming: this.requestStream,\r\n        serverStreaming: this.responseStream,\r\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\r\n    });\r\n};\r\n\r\n// --- utility ---\r\n\r\n// Converts a descriptor type to a protobuf.js basic type\r\nfunction fromDescriptorType(type) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case 1: return \"double\";\r\n        case 2: return \"float\";\r\n        case 3: return \"int64\";\r\n        case 4: return \"uint64\";\r\n        case 5: return \"int32\";\r\n        case 6: return \"fixed64\";\r\n        case 7: return \"fixed32\";\r\n        case 8: return \"bool\";\r\n        case 9: return \"string\";\r\n        case 12: return \"bytes\";\r\n        case 13: return \"uint32\";\r\n        case 15: return \"sfixed32\";\r\n        case 16: return \"sfixed64\";\r\n        case 17: return \"sint32\";\r\n        case 18: return \"sint64\";\r\n    }\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Tests if a descriptor type is packable\r\nfunction packableDescriptorType(type) {\r\n    switch (type) {\r\n        case 1: // double\r\n        case 2: // float\r\n        case 3: // int64\r\n        case 4: // uint64\r\n        case 5: // int32\r\n        case 6: // fixed64\r\n        case 7: // fixed32\r\n        case 8: // bool\r\n        case 13: // uint32\r\n        case 14: // enum (!)\r\n        case 15: // sfixed32\r\n        case 16: // sfixed64\r\n        case 17: // sint32\r\n        case 18: // sint64\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Converts a protobuf.js basic type to a descriptor type\r\nfunction toDescriptorType(type, resolvedType) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case \"double\": return 1;\r\n        case \"float\": return 2;\r\n        case \"int64\": return 3;\r\n        case \"uint64\": return 4;\r\n        case \"int32\": return 5;\r\n        case \"fixed64\": return 6;\r\n        case \"fixed32\": return 7;\r\n        case \"bool\": return 8;\r\n        case \"string\": return 9;\r\n        case \"bytes\": return 12;\r\n        case \"uint32\": return 13;\r\n        case \"sfixed32\": return 15;\r\n        case \"sfixed64\": return 16;\r\n        case \"sint32\": return 17;\r\n        case \"sint64\": return 18;\r\n    }\r\n    if (resolvedType instanceof Enum)\r\n        return 14;\r\n    if (resolvedType instanceof Type)\r\n        return resolvedType.group ? 10 : 11;\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Converts descriptor options to an options object\r\nfunction fromDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\r\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\r\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\r\n                val = options[key];\r\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\r\n                    val = field.resolvedType.valuesById[val];\r\n                out.push(underScore(key), val);\r\n            }\r\n    return out.length ? $protobuf.util.toObject(out) : undefined;\r\n}\r\n\r\n// Converts an options object to descriptor options\r\nfunction toDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\r\n        val = options[key = ks[i]];\r\n        if (key === \"default\")\r\n            continue;\r\n        var field = type.fields[key];\r\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\r\n            continue;\r\n        out.push(key, val);\r\n    }\r\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\r\n}\r\n\r\n// Calculates the shortest relative path from `from` to `to`.\r\nfunction shortname(from, to) {\r\n    var fromPath = from.fullName.split(\".\"),\r\n        toPath = to.fullName.split(\".\"),\r\n        i = 0,\r\n        j = 0,\r\n        k = toPath.length - 1;\r\n    if (!(from instanceof Root) && to instanceof Namespace)\r\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\r\n            var other = to.lookup(fromPath[i++], true);\r\n            if (other !== null && other !== to)\r\n                break;\r\n            ++j;\r\n        }\r\n    else\r\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\r\n    return toPath.slice(j).join(\".\");\r\n}\r\n\r\n// copied here from cli/targets/proto.js\r\nfunction underScore(str) {\r\n    return str.substring(0,1)\r\n         + str.substring(1)\r\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\r\n}\r\n\r\n// --- exports ---\r\n\r\n/**\r\n * Reflected file descriptor set.\r\n * @name FileDescriptorSet\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file descriptor proto.\r\n * @name FileDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected descriptor proto.\r\n * @name DescriptorProto\r\n * @type {Type}\r\n * @property {Type} ExtensionRange\r\n * @property {Type} ReservedRange\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     ExtensionRange: $protobuf.Type,\r\n *     ReservedRange: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected field descriptor proto.\r\n * @name FieldDescriptorProto\r\n * @type {Type}\r\n * @property {Enum} Label\r\n * @property {Enum} Type\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Label: $protobuf.Enum,\r\n *     Type: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof descriptor proto.\r\n * @name OneofDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum descriptor proto.\r\n * @name EnumDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service descriptor proto.\r\n * @name ServiceDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value descriptor proto.\r\n * @name EnumValueDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method descriptor proto.\r\n * @name MethodDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file options.\r\n * @name FileOptions\r\n * @type {Type}\r\n * @property {Enum} OptimizeMode\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     OptimizeMode: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected message options.\r\n * @name MessageOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected field options.\r\n * @name FieldOptions\r\n * @type {Type}\r\n * @property {Enum} CType\r\n * @property {Enum} JSType\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     CType: $protobuf.Enum,\r\n *     JSType: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof options.\r\n * @name OneofOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum options.\r\n * @name EnumOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value options.\r\n * @name EnumValueOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service options.\r\n * @name ServiceOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method options.\r\n * @name MethodOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected uninterpretet option.\r\n * @name UninterpretedOption\r\n * @type {Type}\r\n * @property {Type} NamePart\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     NamePart: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected source code info.\r\n * @name SourceCodeInfo\r\n * @type {Type}\r\n * @property {Type} Location\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Location: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected generated code info.\r\n * @name GeneratedCodeInfo\r\n * @type {Type}\r\n * @property {Type} Annotation\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Annotation: $protobuf.Type\r\n * }\r\n */\r\n", "{\r\n  \"nested\": {\r\n    \"google\": {\r\n      \"nested\": {\r\n        \"protobuf\": {\r\n          \"nested\": {\r\n            \"Api\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"methods\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Method\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 3\r\n                },\r\n                \"version\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 4\r\n                },\r\n                \"sourceContext\": {\r\n                  \"type\": \"SourceContext\",\r\n                  \"id\": 5\r\n                },\r\n                \"mixins\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Mixin\",\r\n                  \"id\": 6\r\n                },\r\n                \"syntax\": {\r\n                  \"type\": \"Syntax\",\r\n                  \"id\": 7\r\n                }\r\n              }\r\n            },\r\n            \"Method\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"requestTypeUrl\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 2\r\n                },\r\n                \"requestStreaming\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 3\r\n                },\r\n                \"responseTypeUrl\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 4\r\n                },\r\n                \"responseStreaming\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 5\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 6\r\n                },\r\n                \"syntax\": {\r\n                  \"type\": \"Syntax\",\r\n                  \"id\": 7\r\n                }\r\n              }\r\n            },\r\n            \"Mixin\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"root\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 2\r\n                }\r\n              }\r\n            },\r\n            \"SourceContext\": {\r\n              \"fields\": {\r\n                \"fileName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                }\r\n              }\r\n            },\r\n            \"Option\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"value\": {\r\n                  \"type\": \"Any\",\r\n                  \"id\": 2\r\n                }\r\n              }\r\n            },\r\n            \"Syntax\": {\r\n              \"values\": {\r\n                \"SYNTAX_PROTO2\": 0,\r\n                \"SYNTAX_PROTO3\": 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}", "{\r\n  \"nested\": {\r\n    \"google\": {\r\n      \"nested\": {\r\n        \"protobuf\": {\r\n          \"nested\": {\r\n            \"SourceContext\": {\r\n              \"fields\": {\r\n                \"fileName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}", "{\r\n  \"nested\": {\r\n    \"google\": {\r\n      \"nested\": {\r\n        \"protobuf\": {\r\n          \"nested\": {\r\n            \"Type\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"fields\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Field\",\r\n                  \"id\": 2\r\n                },\r\n                \"oneofs\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"string\",\r\n                  \"id\": 3\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 4\r\n                },\r\n                \"sourceContext\": {\r\n                  \"type\": \"SourceContext\",\r\n                  \"id\": 5\r\n                },\r\n                \"syntax\": {\r\n                  \"type\": \"Syntax\",\r\n                  \"id\": 6\r\n                }\r\n              }\r\n            },\r\n            \"Field\": {\r\n              \"fields\": {\r\n                \"kind\": {\r\n                  \"type\": \"Kind\",\r\n                  \"id\": 1\r\n                },\r\n                \"cardinality\": {\r\n                  \"type\": \"Cardinality\",\r\n                  \"id\": 2\r\n                },\r\n                \"number\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 3\r\n                },\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 4\r\n                },\r\n                \"typeUrl\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 6\r\n                },\r\n                \"oneofIndex\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 7\r\n                },\r\n                \"packed\": {\r\n                  \"type\": \"bool\",\r\n                  \"id\": 8\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 9\r\n                },\r\n                \"jsonName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 10\r\n                },\r\n                \"defaultValue\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 11\r\n                }\r\n              },\r\n              \"nested\": {\r\n                \"Kind\": {\r\n                  \"values\": {\r\n                    \"TYPE_UNKNOWN\": 0,\r\n                    \"TYPE_DOUBLE\": 1,\r\n                    \"TYPE_FLOAT\": 2,\r\n                    \"TYPE_INT64\": 3,\r\n                    \"TYPE_UINT64\": 4,\r\n                    \"TYPE_INT32\": 5,\r\n                    \"TYPE_FIXED64\": 6,\r\n                    \"TYPE_FIXED32\": 7,\r\n                    \"TYPE_BOOL\": 8,\r\n                    \"TYPE_STRING\": 9,\r\n                    \"TYPE_GROUP\": 10,\r\n                    \"TYPE_MESSAGE\": 11,\r\n                    \"TYPE_BYTES\": 12,\r\n                    \"TYPE_UINT32\": 13,\r\n                    \"TYPE_ENUM\": 14,\r\n                    \"TYPE_SFIXED32\": 15,\r\n                    \"TYPE_SFIXED64\": 16,\r\n                    \"TYPE_SINT32\": 17,\r\n                    \"TYPE_SINT64\": 18\r\n                  }\r\n                },\r\n                \"Cardinality\": {\r\n                  \"values\": {\r\n                    \"CARDINALITY_UNKNOWN\": 0,\r\n                    \"CARDINALITY_OPTIONAL\": 1,\r\n                    \"CARDINALITY_REQUIRED\": 2,\r\n                    \"CARDINALITY_REPEATED\": 3\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"Enum\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"enumvalue\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"EnumValue\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 3\r\n                },\r\n                \"sourceContext\": {\r\n                  \"type\": \"SourceContext\",\r\n                  \"id\": 4\r\n                },\r\n                \"syntax\": {\r\n                  \"type\": \"Syntax\",\r\n                  \"id\": 5\r\n                }\r\n              }\r\n            },\r\n            \"EnumValue\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"number\": {\r\n                  \"type\": \"int32\",\r\n                  \"id\": 2\r\n                },\r\n                \"options\": {\r\n                  \"rule\": \"repeated\",\r\n                  \"type\": \"Option\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            },\r\n            \"Option\": {\r\n              \"fields\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"value\": {\r\n                  \"type\": \"Any\",\r\n                  \"id\": 2\r\n                }\r\n              }\r\n            },\r\n            \"Syntax\": {\r\n              \"values\": {\r\n                \"SYNTAX_PROTO2\": 0,\r\n                \"SYNTAX_PROTO3\": 1\r\n              }\r\n            },\r\n            \"Any\": {\r\n              \"fields\": {\r\n                \"type_url\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                },\r\n                \"value\": {\r\n                  \"type\": \"bytes\",\r\n                  \"id\": 2\r\n                }\r\n              }\r\n            },\r\n            \"SourceContext\": {\r\n              \"fields\": {\r\n                \"fileName\": {\r\n                  \"type\": \"string\",\r\n                  \"id\": 1\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}", null, "// GENERATED FILE. DO NOT EDIT.\nvar Long = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  /**\n   * @license\n   * Copyright 2009 The Closure Library Authors\n   * Copyright 2020 Daniel Wirtz / The long.js Authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * SPDX-License-Identifier: Apache-2.0\n   */\n  // WebAssembly optimizations to do native i64 multiplication and divide\n  var wasm = null;\n  \n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch (e) {// no wasm support :(\n  }\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   * @exports Long\n   * @class A Long class for representing a 64 bit two's-complement integer value.\n   * @param {number} low The low (signed) 32 bits of the long\n   * @param {number} high The high (signed) 32 bits of the long\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @constructor\n   */\n  \n  \n  function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n  \n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n  \n    this.unsigned = !!unsigned;\n  } // The internal representation of a long is the two given signed, 32-bit values.\n  // We use 32-bit pieces because these are the size of integers on which\n  // Javascript performs bit-operations.  For operations like addition and\n  // multiplication, we split each number into 16 bit pieces, which can easily be\n  // multiplied within Javascript's floating-point representation without overflow\n  // or change in sign.\n  //\n  // In the algorithms below, we frequently reduce the negative case to the\n  // positive case by negating the input(s) and then post-processing the result.\n  // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n  // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n  // a positive number, it overflows back into a negative).  Not handling this\n  // case would often result in infinite recursion.\n  //\n  // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n  // methods on which they depend.\n  \n  /**\n   * An indicator used to reliably determine if an object is a Long or not.\n   * @type {boolean}\n   * @const\n   * @private\n   */\n  \n  \n  Long.prototype.__isLong__;\n  Object.defineProperty(Long.prototype, \"__isLong__\", {\n    value: true\n  });\n  /**\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   * @inner\n   */\n  \n  function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n  }\n  /**\n   * @function\n   * @param {*} value number\n   * @returns {number}\n   * @inner\n   */\n  \n  \n  function ctz32(value) {\n    var c = Math.clz32(value & -value);\n    return value ? 31 - c : c;\n  }\n  /**\n   * Tests if the specified object is a Long.\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   */\n  \n  \n  Long.isLong = isLong;\n  /**\n   * A cache of the Long representations of small integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var INT_CACHE = {};\n  /**\n   * A cache of the Long representations of small unsigned integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var UINT_CACHE = {};\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n  \n    if (unsigned) {\n      value >>>= 0;\n  \n      if (cache = 0 <= value && value < 256) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n  \n      if (cache = -128 <= value && value < 128) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @function\n   * @param {number} value The 32 bit integer in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromInt = fromInt;\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromNumber(value, unsigned) {\n    if (isNaN(value)) return unsigned ? UZERO : ZERO;\n  \n    if (unsigned) {\n      if (value < 0) return UZERO;\n      if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n    }\n  \n    if (value < 0) return fromNumber(-value, unsigned).neg();\n    return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n  }\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @function\n   * @param {number} value The number in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromNumber = fromNumber;\n  /**\n   * @param {number} lowBits\n   * @param {number} highBits\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n  }\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n   *  assumed to use 32 bits.\n   * @function\n   * @param {number} lowBits The low 32 bits\n   * @param {number} highBits The high 32 bits\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBits = fromBits;\n  /**\n   * @function\n   * @param {number} base\n   * @param {number} exponent\n   * @returns {number}\n   * @inner\n   */\n  \n  var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n  \n  /**\n   * @param {string} str\n   * @param {(boolean|number)=} unsigned\n   * @param {number=} radix\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromString(str, unsigned, radix) {\n    if (str.length === 0) throw Error('empty string');\n  \n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      radix = unsigned;\n      unsigned = false;\n    } else {\n      unsigned = !!unsigned;\n    }\n  \n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return unsigned ? UZERO : ZERO;\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n      return fromString(str.substring(1), unsigned, radix).neg();\n    } // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n  \n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n  \n      if (size < 8) {\n        var power = fromNumber(pow_dbl(radix, size));\n        result = result.mul(power).add(fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(fromNumber(value));\n      }\n    }\n  \n    result.unsigned = unsigned;\n    return result;\n  }\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @function\n   * @param {string} str The textual representation of the Long\n   * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n   * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromString = fromString;\n  /**\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromValue(val, unsigned) {\n    if (typeof val === 'number') return fromNumber(val, unsigned);\n    if (typeof val === 'string') return fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n  \n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n  }\n  /**\n   * Converts the specified value to a Long using the appropriate from* function for its type.\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long}\n   */\n  \n  \n  Long.fromValue = fromValue; // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n  // no runtime penalty for these.\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_16_DBL = 1 << 16;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24_DBL = 1 << 24;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  /**\n   * @type {!Long}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ZERO = fromInt(0);\n  /**\n   * Signed zero.\n   * @type {!Long}\n   */\n  \n  Long.ZERO = ZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UZERO = fromInt(0, true);\n  /**\n   * Unsigned zero.\n   * @type {!Long}\n   */\n  \n  Long.UZERO = UZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ONE = fromInt(1);\n  /**\n   * Signed one.\n   * @type {!Long}\n   */\n  \n  Long.ONE = ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UONE = fromInt(1, true);\n  /**\n   * Unsigned one.\n   * @type {!Long}\n   */\n  \n  Long.UONE = UONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var NEG_ONE = fromInt(-1);\n  /**\n   * Signed negative one.\n   * @type {!Long}\n   */\n  \n  Long.NEG_ONE = NEG_ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n  /**\n   * Maximum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_VALUE = MAX_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n  /**\n   * Maximum unsigned value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n  /**\n   * Minimum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MIN_VALUE = MIN_VALUE;\n  /**\n   * @alias Long.prototype\n   * @inner\n   */\n  \n  var LongPrototype = Long.prototype;\n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  LongPrototype.toInt = function toInt() {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  };\n  /**\n   * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.toNumber = function toNumber() {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  };\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @this {!Long}\n   * @param {number=} radix Radix (2-36), defaults to 10\n   * @returns {string}\n   * @override\n   * @throws {RangeError} If `radix` is out of range\n   */\n  \n  \n  LongPrototype.toString = function toString(radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n  \n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    } // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n  \n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n    var result = '';\n  \n    while (true) {\n      var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) return digits + result;else {\n        while (digits.length < 6) digits = '0' + digits;\n  \n        result = '' + digits + result;\n      }\n    }\n  };\n  /**\n   * Gets the high 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed high bits\n   */\n  \n  \n  LongPrototype.getHighBits = function getHighBits() {\n    return this.high;\n  };\n  /**\n   * Gets the high 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned high bits\n   */\n  \n  \n  LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n    return this.high >>> 0;\n  };\n  /**\n   * Gets the low 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed low bits\n   */\n  \n  \n  LongPrototype.getLowBits = function getLowBits() {\n    return this.low;\n  };\n  /**\n   * Gets the low 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned low bits\n   */\n  \n  \n  LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n    return this.low >>> 0;\n  };\n  /**\n   * Gets the number of bits needed to represent the absolute value of this Long.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n    if (this.isNegative()) // Unsigned Longs are never negative\n      return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    var val = this.high != 0 ? this.high : this.low;\n  \n    for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n  \n    return this.high != 0 ? bit + 33 : bit + 1;\n  };\n  /**\n   * Tests if this Long's value equals zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isZero = function isZero() {\n    return this.high === 0 && this.low === 0;\n  };\n  /**\n   * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eqz = LongPrototype.isZero;\n  /**\n   * Tests if this Long's value is negative.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  LongPrototype.isNegative = function isNegative() {\n    return !this.unsigned && this.high < 0;\n  };\n  /**\n   * Tests if this Long's value is positive or zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isPositive = function isPositive() {\n    return this.unsigned || this.high >= 0;\n  };\n  /**\n   * Tests if this Long's value is odd.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isOdd = function isOdd() {\n    return (this.low & 1) === 1;\n  };\n  /**\n   * Tests if this Long's value is even.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isEven = function isEven() {\n    return (this.low & 1) === 0;\n  };\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.equals = function equals(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  };\n  /**\n   * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eq = LongPrototype.equals;\n  /**\n   * Tests if this Long's value differs from the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.notEquals = function notEquals(other) {\n    return !this.eq(\n    /* validates */\n    other);\n  };\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.neq = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ne = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value is less than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThan = function lessThan(other) {\n    return this.comp(\n    /* validates */\n    other) < 0;\n  };\n  /**\n   * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lt = LongPrototype.lessThan;\n  /**\n   * Tests if this Long's value is less than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) <= 0;\n  };\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lte = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.le = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThan = function greaterThan(other) {\n    return this.comp(\n    /* validates */\n    other) > 0;\n  };\n  /**\n   * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gt = LongPrototype.greaterThan;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) >= 0;\n  };\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n  /**\n   * Compares this Long's value with the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  LongPrototype.compare = function compare(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.eq(other)) return 0;\n    var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n  \n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1; // Both are positive if at least one is unsigned\n  \n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  };\n  /**\n   * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  \n  LongPrototype.comp = LongPrototype.compare;\n  /**\n   * Negates this Long's value.\n   * @this {!Long}\n   * @returns {!Long} Negated Long\n   */\n  \n  LongPrototype.negate = function negate() {\n    if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n    return this.not().add(ONE);\n  };\n  /**\n   * Negates this Long's value. This is an alias of {@link Long#negate}.\n   * @function\n   * @returns {!Long} Negated Long\n   */\n  \n  \n  LongPrototype.neg = LongPrototype.negate;\n  /**\n   * Returns the sum of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} addend Addend\n   * @returns {!Long} Sum\n   */\n  \n  LongPrototype.add = function add(addend) {\n    if (!isLong(addend)) addend = fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the difference of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.subtract = function subtract(subtrahend) {\n    if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  };\n  /**\n   * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n   * @function\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.sub = LongPrototype.subtract;\n  /**\n   * Returns the product of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  LongPrototype.multiply = function multiply(multiplier) {\n    if (this.isZero()) return this;\n    if (!isLong(multiplier)) multiplier = fromValue(multiplier); // use wasm support if present\n  \n    if (wasm) {\n      var low = wasm[\"mul\"](this.low, this.high, multiplier.low, multiplier.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n    if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n    if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n  \n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg(); // If both longs are small, use float multiplication\n  \n  \n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n   * @function\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  \n  LongPrototype.mul = LongPrototype.multiply;\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or\n   *  unsigned if this Long is unsigned.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  LongPrototype.divide = function divide(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero'); // use wasm support if present\n  \n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n  \n      var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n  \n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(MIN_VALUE)) {\n        if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n  \n          if (approx.eq(ZERO)) {\n            return divisor.isNegative() ? ONE : NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n  \n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n  \n      res = ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return UZERO;\n      if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return UONE;\n      res = UZERO;\n    } // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n  \n  \n    rem = this;\n  \n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber())); // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n  \n      var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n  \n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      } // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n  \n  \n      if (approxRes.isZero()) approxRes = ONE;\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n  \n    return res;\n  };\n  /**\n   * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  \n  LongPrototype.div = LongPrototype.divide;\n  /**\n   * Returns this Long modulo the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.modulo = function modulo(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor); // use wasm support if present\n  \n    if (wasm) {\n      var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    return this.sub(this.div(divisor).mul(divisor));\n  };\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  \n  LongPrototype.mod = LongPrototype.modulo;\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.rem = LongPrototype.modulo;\n  /**\n   * Returns the bitwise NOT of this Long.\n   * @this {!Long}\n   * @returns {!Long}\n   */\n  \n  LongPrototype.not = function not() {\n    return fromBits(~this.low, ~this.high, this.unsigned);\n  };\n  /**\n   * Returns count leading zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.countLeadingZeros = function countLeadingZeros() {\n    return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n  };\n  /**\n   * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.clz = LongPrototype.countLeadingZeros;\n  /**\n   * Returns count trailing zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  LongPrototype.countTrailingZeros = function countTrailingZeros() {\n    return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n  };\n  /**\n   * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.ctz = LongPrototype.countTrailingZeros;\n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  LongPrototype.and = function and(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.or = function or(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.xor = function xor(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shiftLeft = function shiftLeft(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shl = LongPrototype.shiftLeft;\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRight = function shiftRight(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shr = LongPrototype.shiftRight;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);\n    if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n    return fromBits(this.high >>> numBits - 32, 0, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits rotated to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotl = LongPrototype.rotateLeft;\n  /**\n   * Returns this Long with bits rotated to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotr = LongPrototype.rotateRight;\n  /**\n   * Converts this Long to signed.\n   * @this {!Long}\n   * @returns {!Long} Signed long\n   */\n  \n  LongPrototype.toSigned = function toSigned() {\n    if (!this.unsigned) return this;\n    return fromBits(this.low, this.high, false);\n  };\n  /**\n   * Converts this Long to unsigned.\n   * @this {!Long}\n   * @returns {!Long} Unsigned long\n   */\n  \n  \n  LongPrototype.toUnsigned = function toUnsigned() {\n    if (this.unsigned) return this;\n    return fromBits(this.low, this.high, true);\n  };\n  /**\n   * Converts this Long to its byte representation.\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @this {!Long}\n   * @returns {!Array.<number>} Byte representation\n   */\n  \n  \n  LongPrototype.toBytes = function toBytes(le) {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  };\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Little endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesLE = function toBytesLE() {\n    var hi = this.high,\n        lo = this.low;\n    return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n  };\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Big endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesBE = function toBytesBE() {\n    var hi = this.high,\n        lo = this.low;\n    return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n  };\n  /**\n   * Creates a Long from its byte representation.\n   * @param {!Array.<number>} bytes Byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  };\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param {!Array.<number>} bytes Little endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n  };\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param {!Array.<number>} bytes Big endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n  };\n  \n  var _default = Long;\n  exports.default = _default;\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return Long; });\nelse if (typeof module === 'object' && typeof exports === 'object') module.exports = Long;\n", null, "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isIPv4, isIPv6 } from 'net';\nimport { OrderedMap, type OrderedMapIterator } from '@js-sdsl/ordered-map';\nimport { ConnectivityState } from './connectivity-state';\nimport { Status } from './constants';\nimport { Timestamp } from './generated/google/protobuf/Timestamp';\nimport { Channel as ChannelMessage } from './generated/grpc/channelz/v1/Channel';\nimport { ChannelConnectivityState__Output } from './generated/grpc/channelz/v1/ChannelConnectivityState';\nimport { ChannelRef as ChannelRefMessage } from './generated/grpc/channelz/v1/ChannelRef';\nimport { ChannelTrace } from './generated/grpc/channelz/v1/ChannelTrace';\nimport { GetChannelRequest__Output } from './generated/grpc/channelz/v1/GetChannelRequest';\nimport { GetChannelResponse } from './generated/grpc/channelz/v1/GetChannelResponse';\nimport { sendUnaryData, ServerUnaryCall } from './server-call';\nimport { ServerRef as ServerRefMessage } from './generated/grpc/channelz/v1/ServerRef';\nimport { SocketRef as SocketRefMessage } from './generated/grpc/channelz/v1/SocketRef';\nimport {\n  isTcpSubchannelAddress,\n  SubchannelAddress,\n} from './subchannel-address';\nimport { SubchannelRef as SubchannelRefMessage } from './generated/grpc/channelz/v1/SubchannelRef';\nimport { GetServerRequest__Output } from './generated/grpc/channelz/v1/GetServerRequest';\nimport { GetServerResponse } from './generated/grpc/channelz/v1/GetServerResponse';\nimport { Server as ServerMessage } from './generated/grpc/channelz/v1/Server';\nimport { GetServersRequest__Output } from './generated/grpc/channelz/v1/GetServersRequest';\nimport { GetServersResponse } from './generated/grpc/channelz/v1/GetServersResponse';\nimport { GetTopChannelsRequest__Output } from './generated/grpc/channelz/v1/GetTopChannelsRequest';\nimport { GetTopChannelsResponse } from './generated/grpc/channelz/v1/GetTopChannelsResponse';\nimport { GetSubchannelRequest__Output } from './generated/grpc/channelz/v1/GetSubchannelRequest';\nimport { GetSubchannelResponse } from './generated/grpc/channelz/v1/GetSubchannelResponse';\nimport { Subchannel as SubchannelMessage } from './generated/grpc/channelz/v1/Subchannel';\nimport { GetSocketRequest__Output } from './generated/grpc/channelz/v1/GetSocketRequest';\nimport { GetSocketResponse } from './generated/grpc/channelz/v1/GetSocketResponse';\nimport { Socket as SocketMessage } from './generated/grpc/channelz/v1/Socket';\nimport { Address } from './generated/grpc/channelz/v1/Address';\nimport { Security } from './generated/grpc/channelz/v1/Security';\nimport { GetServerSocketsRequest__Output } from './generated/grpc/channelz/v1/GetServerSocketsRequest';\nimport { GetServerSocketsResponse } from './generated/grpc/channelz/v1/GetServerSocketsResponse';\nimport {\n  ChannelzDefinition,\n  ChannelzHandlers,\n} from './generated/grpc/channelz/v1/Channelz';\nimport { ProtoGrpcType as ChannelzProtoGrpcType } from './generated/channelz';\nimport type { loadSync } from '@grpc/proto-loader';\nimport { registerAdminService } from './admin';\nimport { loadPackageDefinition } from './make-client';\n\nexport type TraceSeverity =\n  | 'CT_UNKNOWN'\n  | 'CT_INFO'\n  | 'CT_WARNING'\n  | 'CT_ERROR';\n\ninterface Ref {\n  kind: EntityTypes;\n  id: number;\n  name: string;\n}\n\nexport interface ChannelRef extends Ref {\n  kind: EntityTypes.channel;\n}\n\nexport interface SubchannelRef extends Ref {\n  kind: EntityTypes.subchannel;\n}\n\nexport interface ServerRef extends Ref {\n  kind: EntityTypes.server;\n}\n\nexport interface SocketRef extends Ref {\n  kind: EntityTypes.socket;\n}\n\nfunction channelRefToMessage(ref: ChannelRef): ChannelRefMessage {\n  return {\n    channel_id: ref.id,\n    name: ref.name,\n  };\n}\n\nfunction subchannelRefToMessage(ref: SubchannelRef): SubchannelRefMessage {\n  return {\n    subchannel_id: ref.id,\n    name: ref.name,\n  };\n}\n\nfunction serverRefToMessage(ref: ServerRef): ServerRefMessage {\n  return {\n    server_id: ref.id,\n  };\n}\n\nfunction socketRefToMessage(ref: SocketRef): SocketRefMessage {\n  return {\n    socket_id: ref.id,\n    name: ref.name,\n  };\n}\n\ninterface TraceEvent {\n  description: string;\n  severity: TraceSeverity;\n  timestamp: Date;\n  childChannel?: ChannelRef;\n  childSubchannel?: SubchannelRef;\n}\n\n/**\n * The loose upper bound on the number of events that should be retained in a\n * trace. This may be exceeded by up to a factor of 2. Arbitrarily chosen as a\n * number that should be large enough to contain the recent relevant\n * information, but small enough to not use excessive memory.\n */\nconst TARGET_RETAINED_TRACES = 32;\n\n/**\n * Default number of sockets/servers/channels/subchannels to return\n */\nconst DEFAULT_MAX_RESULTS = 100;\n\nexport class ChannelzTraceStub {\n  readonly events: TraceEvent[] = [];\n  readonly creationTimestamp: Date = new Date();\n  readonly eventsLogged = 0;\n\n  addTrace(): void {}\n  getTraceMessage(): ChannelTrace {\n    return {\n      creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n      num_events_logged: this.eventsLogged,\n      events: [],\n    };\n  }\n}\n\nexport class ChannelzTrace {\n  events: TraceEvent[] = [];\n  creationTimestamp: Date;\n  eventsLogged = 0;\n\n  constructor() {\n    this.creationTimestamp = new Date();\n  }\n\n  addTrace(\n    severity: TraceSeverity,\n    description: string,\n    child?: ChannelRef | SubchannelRef\n  ) {\n    const timestamp = new Date();\n    this.events.push({\n      description: description,\n      severity: severity,\n      timestamp: timestamp,\n      childChannel: child?.kind === 'channel' ? child : undefined,\n      childSubchannel: child?.kind === 'subchannel' ? child : undefined,\n    });\n    // Whenever the trace array gets too large, discard the first half\n    if (this.events.length >= TARGET_RETAINED_TRACES * 2) {\n      this.events = this.events.slice(TARGET_RETAINED_TRACES);\n    }\n    this.eventsLogged += 1;\n  }\n\n  getTraceMessage(): ChannelTrace {\n    return {\n      creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n      num_events_logged: this.eventsLogged,\n      events: this.events.map(event => {\n        return {\n          description: event.description,\n          severity: event.severity,\n          timestamp: dateToProtoTimestamp(event.timestamp),\n          channel_ref: event.childChannel\n            ? channelRefToMessage(event.childChannel)\n            : null,\n          subchannel_ref: event.childSubchannel\n            ? subchannelRefToMessage(event.childSubchannel)\n            : null,\n        };\n      }),\n    };\n  }\n}\n\ntype RefOrderedMap = OrderedMap<\n  number,\n  { ref: { id: number; kind: EntityTypes; name: string }; count: number }\n>;\n\nexport class ChannelzChildrenTracker {\n  private channelChildren: RefOrderedMap = new OrderedMap();\n  private subchannelChildren: RefOrderedMap = new OrderedMap();\n  private socketChildren: RefOrderedMap = new OrderedMap();\n  private trackerMap = {\n    [EntityTypes.channel]: this.channelChildren,\n    [EntityTypes.subchannel]: this.subchannelChildren,\n    [EntityTypes.socket]: this.socketChildren,\n  } as const;\n\n  refChild(child: ChannelRef | SubchannelRef | SocketRef) {\n    const tracker = this.trackerMap[child.kind];\n    const trackedChild = tracker.find(child.id);\n\n    if (trackedChild.equals(tracker.end())) {\n      tracker.setElement(\n        child.id,\n        {\n          ref: child,\n          count: 1,\n        },\n        trackedChild\n      );\n    } else {\n      trackedChild.pointer[1].count += 1;\n    }\n  }\n\n  unrefChild(child: ChannelRef | SubchannelRef | SocketRef) {\n    const tracker = this.trackerMap[child.kind];\n    const trackedChild = tracker.getElementByKey(child.id);\n    if (trackedChild !== undefined) {\n      trackedChild.count -= 1;\n      if (trackedChild.count === 0) {\n        tracker.eraseElementByKey(child.id);\n      }\n    }\n  }\n\n  getChildLists(): ChannelzChildren {\n    return {\n      channels: this.channelChildren as ChannelzChildren['channels'],\n      subchannels: this.subchannelChildren as ChannelzChildren['subchannels'],\n      sockets: this.socketChildren as ChannelzChildren['sockets'],\n    };\n  }\n}\n\nexport class ChannelzChildrenTrackerStub extends ChannelzChildrenTracker {\n  override refChild(): void {}\n  override unrefChild(): void {}\n}\n\nexport class ChannelzCallTracker {\n  callsStarted = 0;\n  callsSucceeded = 0;\n  callsFailed = 0;\n  lastCallStartedTimestamp: Date | null = null;\n\n  addCallStarted() {\n    this.callsStarted += 1;\n    this.lastCallStartedTimestamp = new Date();\n  }\n  addCallSucceeded() {\n    this.callsSucceeded += 1;\n  }\n  addCallFailed() {\n    this.callsFailed += 1;\n  }\n}\n\nexport class ChannelzCallTrackerStub extends ChannelzCallTracker {\n  override addCallStarted() {}\n  override addCallSucceeded() {}\n  override addCallFailed() {}\n}\n\nexport interface ChannelzChildren {\n  channels: OrderedMap<number, { ref: ChannelRef; count: number }>;\n  subchannels: OrderedMap<number, { ref: SubchannelRef; count: number }>;\n  sockets: OrderedMap<number, { ref: SocketRef; count: number }>;\n}\n\nexport interface ChannelInfo {\n  target: string;\n  state: ConnectivityState;\n  trace: ChannelzTrace | ChannelzTraceStub;\n  callTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n  children: ChannelzChildren;\n}\n\nexport type SubchannelInfo = ChannelInfo;\n\nexport interface ServerInfo {\n  trace: ChannelzTrace;\n  callTracker: ChannelzCallTracker;\n  listenerChildren: ChannelzChildren;\n  sessionChildren: ChannelzChildren;\n}\n\nexport interface TlsInfo {\n  cipherSuiteStandardName: string | null;\n  cipherSuiteOtherName: string | null;\n  localCertificate: Buffer | null;\n  remoteCertificate: Buffer | null;\n}\n\nexport interface SocketInfo {\n  localAddress: SubchannelAddress | null;\n  remoteAddress: SubchannelAddress | null;\n  security: TlsInfo | null;\n  remoteName: string | null;\n  streamsStarted: number;\n  streamsSucceeded: number;\n  streamsFailed: number;\n  messagesSent: number;\n  messagesReceived: number;\n  keepAlivesSent: number;\n  lastLocalStreamCreatedTimestamp: Date | null;\n  lastRemoteStreamCreatedTimestamp: Date | null;\n  lastMessageSentTimestamp: Date | null;\n  lastMessageReceivedTimestamp: Date | null;\n  localFlowControlWindow: number | null;\n  remoteFlowControlWindow: number | null;\n}\n\ninterface ChannelEntry {\n  ref: ChannelRef;\n  getInfo(): ChannelInfo;\n}\n\ninterface SubchannelEntry {\n  ref: SubchannelRef;\n  getInfo(): SubchannelInfo;\n}\n\ninterface ServerEntry {\n  ref: ServerRef;\n  getInfo(): ServerInfo;\n}\n\ninterface SocketEntry {\n  ref: SocketRef;\n  getInfo(): SocketInfo;\n}\n\nexport const enum EntityTypes {\n  channel = 'channel',\n  subchannel = 'subchannel',\n  server = 'server',\n  socket = 'socket',\n}\n\ntype EntryOrderedMap = OrderedMap<number, { ref: Ref; getInfo: () => any }>;\n\nconst entityMaps = {\n  [EntityTypes.channel]: new OrderedMap<number, ChannelEntry>(),\n  [EntityTypes.subchannel]: new OrderedMap<number, SubchannelEntry>(),\n  [EntityTypes.server]: new OrderedMap<number, ServerEntry>(),\n  [EntityTypes.socket]: new OrderedMap<number, SocketEntry>(),\n} as const;\n\nexport type RefByType<T extends EntityTypes> = T extends EntityTypes.channel\n  ? ChannelRef\n  : T extends EntityTypes.server\n  ? ServerRef\n  : T extends EntityTypes.socket\n  ? SocketRef\n  : T extends EntityTypes.subchannel\n  ? SubchannelRef\n  : never;\n\nexport type EntryByType<T extends EntityTypes> = T extends EntityTypes.channel\n  ? ChannelEntry\n  : T extends EntityTypes.server\n  ? ServerEntry\n  : T extends EntityTypes.socket\n  ? SocketEntry\n  : T extends EntityTypes.subchannel\n  ? SubchannelEntry\n  : never;\n\nexport type InfoByType<T extends EntityTypes> = T extends EntityTypes.channel\n  ? ChannelInfo\n  : T extends EntityTypes.subchannel\n  ? SubchannelInfo\n  : T extends EntityTypes.server\n  ? ServerInfo\n  : T extends EntityTypes.socket\n  ? SocketInfo\n  : never;\n\nconst generateRegisterFn = <R extends EntityTypes>(kind: R) => {\n  let nextId = 1;\n  function getNextId(): number {\n    return nextId++;\n  }\n\n  const entityMap: EntryOrderedMap = entityMaps[kind];\n\n  return (\n    name: string,\n    getInfo: () => InfoByType<R>,\n    channelzEnabled: boolean\n  ): RefByType<R> => {\n    const id = getNextId();\n    const ref = { id, name, kind } as RefByType<R>;\n    if (channelzEnabled) {\n      entityMap.setElement(id, { ref, getInfo });\n    }\n    return ref;\n  };\n};\n\nexport const registerChannelzChannel = generateRegisterFn(EntityTypes.channel);\nexport const registerChannelzSubchannel = generateRegisterFn(\n  EntityTypes.subchannel\n);\nexport const registerChannelzServer = generateRegisterFn(EntityTypes.server);\nexport const registerChannelzSocket = generateRegisterFn(EntityTypes.socket);\n\nexport function unregisterChannelzRef(\n  ref: ChannelRef | SubchannelRef | ServerRef | SocketRef\n) {\n  entityMaps[ref.kind].eraseElementByKey(ref.id);\n}\n\n/**\n * Parse a single section of an IPv6 address as two bytes\n * @param addressSection A hexadecimal string of length up to 4\n * @returns The pair of bytes representing this address section\n */\nfunction parseIPv6Section(addressSection: string): [number, number] {\n  const numberValue = Number.parseInt(addressSection, 16);\n  return [(numberValue / 256) | 0, numberValue % 256];\n}\n\n/**\n * Parse a chunk of an IPv6 address string to some number of bytes\n * @param addressChunk Some number of segments of up to 4 hexadecimal\n *   characters each, joined by colons.\n * @returns The list of bytes representing this address chunk\n */\nfunction parseIPv6Chunk(addressChunk: string): number[] {\n  if (addressChunk === '') {\n    return [];\n  }\n  const bytePairs = addressChunk\n    .split(':')\n    .map(section => parseIPv6Section(section));\n  const result: number[] = [];\n  return result.concat(...bytePairs);\n}\n\n/**\n * Converts an IPv4 or IPv6 address from string representation to binary\n * representation\n * @param ipAddress an IP address in standard IPv4 or IPv6 text format\n * @returns\n */\nfunction ipAddressStringToBuffer(ipAddress: string): Buffer | null {\n  if (isIPv4(ipAddress)) {\n    return Buffer.from(\n      Uint8Array.from(\n        ipAddress.split('.').map(segment => Number.parseInt(segment))\n      )\n    );\n  } else if (isIPv6(ipAddress)) {\n    let leftSection: string;\n    let rightSection: string;\n    const doubleColonIndex = ipAddress.indexOf('::');\n    if (doubleColonIndex === -1) {\n      leftSection = ipAddress;\n      rightSection = '';\n    } else {\n      leftSection = ipAddress.substring(0, doubleColonIndex);\n      rightSection = ipAddress.substring(doubleColonIndex + 2);\n    }\n    const leftBuffer = Buffer.from(parseIPv6Chunk(leftSection));\n    const rightBuffer = Buffer.from(parseIPv6Chunk(rightSection));\n    const middleBuffer = Buffer.alloc(\n      16 - leftBuffer.length - rightBuffer.length,\n      0\n    );\n    return Buffer.concat([leftBuffer, middleBuffer, rightBuffer]);\n  } else {\n    return null;\n  }\n}\n\nfunction connectivityStateToMessage(\n  state: ConnectivityState\n): ChannelConnectivityState__Output {\n  switch (state) {\n    case ConnectivityState.CONNECTING:\n      return {\n        state: 'CONNECTING',\n      };\n    case ConnectivityState.IDLE:\n      return {\n        state: 'IDLE',\n      };\n    case ConnectivityState.READY:\n      return {\n        state: 'READY',\n      };\n    case ConnectivityState.SHUTDOWN:\n      return {\n        state: 'SHUTDOWN',\n      };\n    case ConnectivityState.TRANSIENT_FAILURE:\n      return {\n        state: 'TRANSIENT_FAILURE',\n      };\n    default:\n      return {\n        state: 'UNKNOWN',\n      };\n  }\n}\n\nfunction dateToProtoTimestamp(date?: Date | null): Timestamp | null {\n  if (!date) {\n    return null;\n  }\n  const millisSinceEpoch = date.getTime();\n  return {\n    seconds: (millisSinceEpoch / 1000) | 0,\n    nanos: (millisSinceEpoch % 1000) * 1_000_000,\n  };\n}\n\nfunction getChannelMessage(channelEntry: ChannelEntry): ChannelMessage {\n  const resolvedInfo = channelEntry.getInfo();\n  const channelRef: ChannelRefMessage[] = [];\n  const subchannelRef: SubchannelRefMessage[] = [];\n\n  resolvedInfo.children.channels.forEach(el => {\n    channelRef.push(channelRefToMessage(el[1].ref));\n  });\n\n  resolvedInfo.children.subchannels.forEach(el => {\n    subchannelRef.push(subchannelRefToMessage(el[1].ref));\n  });\n\n  return {\n    ref: channelRefToMessage(channelEntry.ref),\n    data: {\n      target: resolvedInfo.target,\n      state: connectivityStateToMessage(resolvedInfo.state),\n      calls_started: resolvedInfo.callTracker.callsStarted,\n      calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n      calls_failed: resolvedInfo.callTracker.callsFailed,\n      last_call_started_timestamp: dateToProtoTimestamp(\n        resolvedInfo.callTracker.lastCallStartedTimestamp\n      ),\n      trace: resolvedInfo.trace.getTraceMessage(),\n    },\n    channel_ref: channelRef,\n    subchannel_ref: subchannelRef,\n  };\n}\n\nfunction GetChannel(\n  call: ServerUnaryCall<GetChannelRequest__Output, GetChannelResponse>,\n  callback: sendUnaryData<GetChannelResponse>\n): void {\n  const channelId = parseInt(call.request.channel_id, 10);\n  const channelEntry =\n    entityMaps[EntityTypes.channel].getElementByKey(channelId);\n  if (channelEntry === undefined) {\n    callback({\n      code: Status.NOT_FOUND,\n      details: 'No channel data found for id ' + channelId,\n    });\n    return;\n  }\n  callback(null, { channel: getChannelMessage(channelEntry) });\n}\n\nfunction GetTopChannels(\n  call: ServerUnaryCall<GetTopChannelsRequest__Output, GetTopChannelsResponse>,\n  callback: sendUnaryData<GetTopChannelsResponse>\n): void {\n  const maxResults =\n    parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n  const resultList: ChannelMessage[] = [];\n  const startId = parseInt(call.request.start_channel_id, 10);\n  const channelEntries = entityMaps[EntityTypes.channel];\n\n  let i: OrderedMapIterator<number, ChannelEntry>;\n  for (\n    i = channelEntries.lowerBound(startId);\n    !i.equals(channelEntries.end()) && resultList.length < maxResults;\n    i = i.next()\n  ) {\n    resultList.push(getChannelMessage(i.pointer[1]));\n  }\n\n  callback(null, {\n    channel: resultList,\n    end: i.equals(channelEntries.end()),\n  });\n}\n\nfunction getServerMessage(serverEntry: ServerEntry): ServerMessage {\n  const resolvedInfo = serverEntry.getInfo();\n  const listenSocket: SocketRefMessage[] = [];\n\n  resolvedInfo.listenerChildren.sockets.forEach(el => {\n    listenSocket.push(socketRefToMessage(el[1].ref));\n  });\n\n  return {\n    ref: serverRefToMessage(serverEntry.ref),\n    data: {\n      calls_started: resolvedInfo.callTracker.callsStarted,\n      calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n      calls_failed: resolvedInfo.callTracker.callsFailed,\n      last_call_started_timestamp: dateToProtoTimestamp(\n        resolvedInfo.callTracker.lastCallStartedTimestamp\n      ),\n      trace: resolvedInfo.trace.getTraceMessage(),\n    },\n    listen_socket: listenSocket,\n  };\n}\n\nfunction GetServer(\n  call: ServerUnaryCall<GetServerRequest__Output, GetServerResponse>,\n  callback: sendUnaryData<GetServerResponse>\n): void {\n  const serverId = parseInt(call.request.server_id, 10);\n  const serverEntries = entityMaps[EntityTypes.server];\n  const serverEntry = serverEntries.getElementByKey(serverId);\n  if (serverEntry === undefined) {\n    callback({\n      code: Status.NOT_FOUND,\n      details: 'No server data found for id ' + serverId,\n    });\n    return;\n  }\n  callback(null, { server: getServerMessage(serverEntry) });\n}\n\nfunction GetServers(\n  call: ServerUnaryCall<GetServersRequest__Output, GetServersResponse>,\n  callback: sendUnaryData<GetServersResponse>\n): void {\n  const maxResults =\n    parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n  const startId = parseInt(call.request.start_server_id, 10);\n  const serverEntries = entityMaps[EntityTypes.server];\n  const resultList: ServerMessage[] = [];\n\n  let i: OrderedMapIterator<number, ServerEntry>;\n  for (\n    i = serverEntries.lowerBound(startId);\n    !i.equals(serverEntries.end()) && resultList.length < maxResults;\n    i = i.next()\n  ) {\n    resultList.push(getServerMessage(i.pointer[1]));\n  }\n\n  callback(null, {\n    server: resultList,\n    end: i.equals(serverEntries.end()),\n  });\n}\n\nfunction GetSubchannel(\n  call: ServerUnaryCall<GetSubchannelRequest__Output, GetSubchannelResponse>,\n  callback: sendUnaryData<GetSubchannelResponse>\n): void {\n  const subchannelId = parseInt(call.request.subchannel_id, 10);\n  const subchannelEntry =\n    entityMaps[EntityTypes.subchannel].getElementByKey(subchannelId);\n  if (subchannelEntry === undefined) {\n    callback({\n      code: Status.NOT_FOUND,\n      details: 'No subchannel data found for id ' + subchannelId,\n    });\n    return;\n  }\n  const resolvedInfo = subchannelEntry.getInfo();\n  const listenSocket: SocketRefMessage[] = [];\n\n  resolvedInfo.children.sockets.forEach(el => {\n    listenSocket.push(socketRefToMessage(el[1].ref));\n  });\n\n  const subchannelMessage: SubchannelMessage = {\n    ref: subchannelRefToMessage(subchannelEntry.ref),\n    data: {\n      target: resolvedInfo.target,\n      state: connectivityStateToMessage(resolvedInfo.state),\n      calls_started: resolvedInfo.callTracker.callsStarted,\n      calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n      calls_failed: resolvedInfo.callTracker.callsFailed,\n      last_call_started_timestamp: dateToProtoTimestamp(\n        resolvedInfo.callTracker.lastCallStartedTimestamp\n      ),\n      trace: resolvedInfo.trace.getTraceMessage(),\n    },\n    socket_ref: listenSocket,\n  };\n  callback(null, { subchannel: subchannelMessage });\n}\n\nfunction subchannelAddressToAddressMessage(\n  subchannelAddress: SubchannelAddress\n): Address {\n  if (isTcpSubchannelAddress(subchannelAddress)) {\n    return {\n      address: 'tcpip_address',\n      tcpip_address: {\n        ip_address:\n          ipAddressStringToBuffer(subchannelAddress.host) ?? undefined,\n        port: subchannelAddress.port,\n      },\n    };\n  } else {\n    return {\n      address: 'uds_address',\n      uds_address: {\n        filename: subchannelAddress.path,\n      },\n    };\n  }\n}\n\nfunction GetSocket(\n  call: ServerUnaryCall<GetSocketRequest__Output, GetSocketResponse>,\n  callback: sendUnaryData<GetSocketResponse>\n): void {\n  const socketId = parseInt(call.request.socket_id, 10);\n  const socketEntry = entityMaps[EntityTypes.socket].getElementByKey(socketId);\n  if (socketEntry === undefined) {\n    callback({\n      code: Status.NOT_FOUND,\n      details: 'No socket data found for id ' + socketId,\n    });\n    return;\n  }\n  const resolvedInfo = socketEntry.getInfo();\n  const securityMessage: Security | null = resolvedInfo.security\n    ? {\n        model: 'tls',\n        tls: {\n          cipher_suite: resolvedInfo.security.cipherSuiteStandardName\n            ? 'standard_name'\n            : 'other_name',\n          standard_name:\n            resolvedInfo.security.cipherSuiteStandardName ?? undefined,\n          other_name: resolvedInfo.security.cipherSuiteOtherName ?? undefined,\n          local_certificate:\n            resolvedInfo.security.localCertificate ?? undefined,\n          remote_certificate:\n            resolvedInfo.security.remoteCertificate ?? undefined,\n        },\n      }\n    : null;\n  const socketMessage: SocketMessage = {\n    ref: socketRefToMessage(socketEntry.ref),\n    local: resolvedInfo.localAddress\n      ? subchannelAddressToAddressMessage(resolvedInfo.localAddress)\n      : null,\n    remote: resolvedInfo.remoteAddress\n      ? subchannelAddressToAddressMessage(resolvedInfo.remoteAddress)\n      : null,\n    remote_name: resolvedInfo.remoteName ?? undefined,\n    security: securityMessage,\n    data: {\n      keep_alives_sent: resolvedInfo.keepAlivesSent,\n      streams_started: resolvedInfo.streamsStarted,\n      streams_succeeded: resolvedInfo.streamsSucceeded,\n      streams_failed: resolvedInfo.streamsFailed,\n      last_local_stream_created_timestamp: dateToProtoTimestamp(\n        resolvedInfo.lastLocalStreamCreatedTimestamp\n      ),\n      last_remote_stream_created_timestamp: dateToProtoTimestamp(\n        resolvedInfo.lastRemoteStreamCreatedTimestamp\n      ),\n      messages_received: resolvedInfo.messagesReceived,\n      messages_sent: resolvedInfo.messagesSent,\n      last_message_received_timestamp: dateToProtoTimestamp(\n        resolvedInfo.lastMessageReceivedTimestamp\n      ),\n      last_message_sent_timestamp: dateToProtoTimestamp(\n        resolvedInfo.lastMessageSentTimestamp\n      ),\n      local_flow_control_window: resolvedInfo.localFlowControlWindow\n        ? { value: resolvedInfo.localFlowControlWindow }\n        : null,\n      remote_flow_control_window: resolvedInfo.remoteFlowControlWindow\n        ? { value: resolvedInfo.remoteFlowControlWindow }\n        : null,\n    },\n  };\n  callback(null, { socket: socketMessage });\n}\n\nfunction GetServerSockets(\n  call: ServerUnaryCall<\n    GetServerSocketsRequest__Output,\n    GetServerSocketsResponse\n  >,\n  callback: sendUnaryData<GetServerSocketsResponse>\n): void {\n  const serverId = parseInt(call.request.server_id, 10);\n  const serverEntry = entityMaps[EntityTypes.server].getElementByKey(serverId);\n\n  if (serverEntry === undefined) {\n    callback({\n      code: Status.NOT_FOUND,\n      details: 'No server data found for id ' + serverId,\n    });\n    return;\n  }\n\n  const startId = parseInt(call.request.start_socket_id, 10);\n  const maxResults =\n    parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n  const resolvedInfo = serverEntry.getInfo();\n  // If we wanted to include listener sockets in the result, this line would\n  // instead say\n  // const allSockets = resolvedInfo.listenerChildren.sockets.concat(resolvedInfo.sessionChildren.sockets).sort((ref1, ref2) => ref1.id - ref2.id);\n  const allSockets = resolvedInfo.sessionChildren.sockets;\n  const resultList: SocketRefMessage[] = [];\n\n  let i: OrderedMapIterator<number, { ref: SocketRef }>;\n  for (\n    i = allSockets.lowerBound(startId);\n    !i.equals(allSockets.end()) && resultList.length < maxResults;\n    i = i.next()\n  ) {\n    resultList.push(socketRefToMessage(i.pointer[1].ref));\n  }\n\n  callback(null, {\n    socket_ref: resultList,\n    end: i.equals(allSockets.end()),\n  });\n}\n\nexport function getChannelzHandlers(): ChannelzHandlers {\n  return {\n    GetChannel,\n    GetTopChannels,\n    GetServer,\n    GetServers,\n    GetSubchannel,\n    GetSocket,\n    GetServerSockets,\n  };\n}\n\nlet loadedChannelzDefinition: ChannelzDefinition | null = null;\n\nexport function getChannelzServiceDefinition(): ChannelzDefinition {\n  if (loadedChannelzDefinition) {\n    return loadedChannelzDefinition;\n  }\n  /* The purpose of this complexity is to avoid loading @grpc/proto-loader at\n   * runtime for users who will not use/enable channelz. */\n  const loaderLoadSync = require('@grpc/proto-loader')\n    .loadSync as typeof loadSync;\n  const loadedProto = loaderLoadSync('channelz.proto', {\n    keepCase: true,\n    longs: String,\n    enums: String,\n    defaults: true,\n    oneofs: true,\n    includeDirs: [`${__dirname}/../../proto`],\n  });\n  const channelzGrpcObject = loadPackageDefinition(\n    loadedProto\n  ) as unknown as ChannelzProtoGrpcType;\n  loadedChannelzDefinition =\n    channelzGrpcObject.grpc.channelz.v1.Channelz.service;\n  return loadedChannelzDefinition;\n}\n\nexport function setup() {\n  registerAdminService(getChannelzServiceDefinition, getChannelzHandlers);\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelCredentials } from './channel-credentials';\nimport { Metadata } from './metadata';\nimport { ChannelOptions } from './channel-options';\nimport { ConnectivityState } from './connectivity-state';\nimport { BackoffTimeout, BackoffOptions } from './backoff-timeout';\nimport * as logging from './logging';\nimport { LogVerbosity, Status } from './constants';\nimport { GrpcUri, uriToString } from './uri-parser';\nimport {\n  SubchannelAddress,\n  subchannelAddressToString,\n} from './subchannel-address';\nimport {\n  SubchannelRef,\n  ChannelzTrace,\n  ChannelzChildrenTracker,\n  ChannelzChildrenTrackerStub,\n  SubchannelInfo,\n  registerChannelzSubchannel,\n  ChannelzCallTracker,\n  ChannelzCallTrackerStub,\n  unregisterChannelzRef,\n  ChannelzTraceStub,\n} from './channelz';\nimport {\n  ConnectivityStateListener,\n  SubchannelInterface,\n} from './subchannel-interface';\nimport { SubchannelCallInterceptingListener } from './subchannel-call';\nimport { SubchannelCall } from './subchannel-call';\nimport { CallEventTracker, SubchannelConnector, Transport } from './transport';\n\nconst TRACER_NAME = 'subchannel';\n\n/* setInterval and setTimeout only accept signed 32 bit integers. JS doesn't\n * have a constant for the max signed 32 bit integer, so this is a simple way\n * to calculate it */\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\n\nexport class Subchannel {\n  /**\n   * The subchannel's current connectivity state. Invariant: `session` === `null`\n   * if and only if `connectivityState` is IDLE or TRANSIENT_FAILURE.\n   */\n  private connectivityState: ConnectivityState = ConnectivityState.IDLE;\n  /**\n   * The underlying http2 session used to make requests.\n   */\n  private transport: Transport | null = null;\n  /**\n   * Indicates that the subchannel should transition from TRANSIENT_FAILURE to\n   * CONNECTING instead of IDLE when the backoff timeout ends.\n   */\n  private continueConnecting = false;\n  /**\n   * A list of listener functions that will be called whenever the connectivity\n   * state changes. Will be modified by `addConnectivityStateListener` and\n   * `removeConnectivityStateListener`\n   */\n  private stateListeners: Set<ConnectivityStateListener> = new Set();\n\n  private backoffTimeout: BackoffTimeout;\n\n  private keepaliveTime: number;\n  /**\n   * Tracks channels and subchannel pools with references to this subchannel\n   */\n  private refcount = 0;\n\n  /**\n   * A string representation of the subchannel address, for logging/tracing\n   */\n  private subchannelAddressString: string;\n\n  // Channelz info\n  private readonly channelzEnabled: boolean = true;\n  private channelzRef: SubchannelRef;\n\n  private channelzTrace: ChannelzTrace | ChannelzTraceStub;\n  private callTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n  private childrenTracker:\n    | ChannelzChildrenTracker\n    | ChannelzChildrenTrackerStub;\n\n  // Channelz socket info\n  private streamTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n\n  /**\n   * A class representing a connection to a single backend.\n   * @param channelTarget The target string for the channel as a whole\n   * @param subchannelAddress The address for the backend that this subchannel\n   *     will connect to\n   * @param options The channel options, plus any specific subchannel options\n   *     for this subchannel\n   * @param credentials The channel credentials used to establish this\n   *     connection\n   */\n  constructor(\n    private channelTarget: GrpcUri,\n    private subchannelAddress: SubchannelAddress,\n    private options: ChannelOptions,\n    private credentials: ChannelCredentials,\n    private connector: SubchannelConnector\n  ) {\n    const backoffOptions: BackoffOptions = {\n      initialDelay: options['grpc.initial_reconnect_backoff_ms'],\n      maxDelay: options['grpc.max_reconnect_backoff_ms'],\n    };\n    this.backoffTimeout = new BackoffTimeout(() => {\n      this.handleBackoffTimer();\n    }, backoffOptions);\n    this.backoffTimeout.unref();\n    this.subchannelAddressString = subchannelAddressToString(subchannelAddress);\n\n    this.keepaliveTime = options['grpc.keepalive_time_ms'] ?? -1;\n\n    if (options['grpc.enable_channelz'] === 0) {\n      this.channelzEnabled = false;\n      this.channelzTrace = new ChannelzTraceStub();\n      this.callTracker = new ChannelzCallTrackerStub();\n      this.childrenTracker = new ChannelzChildrenTrackerStub();\n      this.streamTracker = new ChannelzCallTrackerStub();\n    } else {\n      this.channelzTrace = new ChannelzTrace();\n      this.callTracker = new ChannelzCallTracker();\n      this.childrenTracker = new ChannelzChildrenTracker();\n      this.streamTracker = new ChannelzCallTracker();\n    }\n\n    this.channelzRef = registerChannelzSubchannel(\n      this.subchannelAddressString,\n      () => this.getChannelzInfo(),\n      this.channelzEnabled\n    );\n\n    this.channelzTrace.addTrace('CT_INFO', 'Subchannel created');\n    this.trace(\n      'Subchannel constructed with options ' +\n        JSON.stringify(options, undefined, 2)\n    );\n  }\n\n  private getChannelzInfo(): SubchannelInfo {\n    return {\n      state: this.connectivityState,\n      trace: this.channelzTrace,\n      callTracker: this.callTracker,\n      children: this.childrenTracker.getChildLists(),\n      target: this.subchannelAddressString,\n    };\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  private refTrace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      'subchannel_refcount',\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  private handleBackoffTimer() {\n    if (this.continueConnecting) {\n      this.transitionToState(\n        [ConnectivityState.TRANSIENT_FAILURE],\n        ConnectivityState.CONNECTING\n      );\n    } else {\n      this.transitionToState(\n        [ConnectivityState.TRANSIENT_FAILURE],\n        ConnectivityState.IDLE\n      );\n    }\n  }\n\n  /**\n   * Start a backoff timer with the current nextBackoff timeout\n   */\n  private startBackoff() {\n    this.backoffTimeout.runOnce();\n  }\n\n  private stopBackoff() {\n    this.backoffTimeout.stop();\n    this.backoffTimeout.reset();\n  }\n\n  private startConnectingInternal() {\n    let options = this.options;\n    if (options['grpc.keepalive_time_ms']) {\n      const adjustedKeepaliveTime = Math.min(\n        this.keepaliveTime,\n        KEEPALIVE_MAX_TIME_MS\n      );\n      options = { ...options, 'grpc.keepalive_time_ms': adjustedKeepaliveTime };\n    }\n    this.connector\n      .connect(this.subchannelAddress, this.credentials, options)\n      .then(\n        transport => {\n          if (\n            this.transitionToState(\n              [ConnectivityState.CONNECTING],\n              ConnectivityState.READY\n            )\n          ) {\n            this.transport = transport;\n            if (this.channelzEnabled) {\n              this.childrenTracker.refChild(transport.getChannelzRef());\n            }\n            transport.addDisconnectListener(tooManyPings => {\n              this.transitionToState(\n                [ConnectivityState.READY],\n                ConnectivityState.IDLE\n              );\n              if (tooManyPings && this.keepaliveTime > 0) {\n                this.keepaliveTime *= 2;\n                logging.log(\n                  LogVerbosity.ERROR,\n                  `Connection to ${uriToString(this.channelTarget)} at ${\n                    this.subchannelAddressString\n                  } rejected by server because of excess pings. Increasing ping interval to ${\n                    this.keepaliveTime\n                  } ms`\n                );\n              }\n            });\n          } else {\n            /* If we can't transition from CONNECTING to READY here, we will\n             * not be using this transport, so release its resources. */\n            transport.shutdown();\n          }\n        },\n        error => {\n          this.transitionToState(\n            [ConnectivityState.CONNECTING],\n            ConnectivityState.TRANSIENT_FAILURE,\n            `${error}`\n          );\n        }\n      );\n  }\n\n  /**\n   * Initiate a state transition from any element of oldStates to the new\n   * state. If the current connectivityState is not in oldStates, do nothing.\n   * @param oldStates The set of states to transition from\n   * @param newState The state to transition to\n   * @returns True if the state changed, false otherwise\n   */\n  private transitionToState(\n    oldStates: ConnectivityState[],\n    newState: ConnectivityState,\n    errorMessage?: string\n  ): boolean {\n    if (oldStates.indexOf(this.connectivityState) === -1) {\n      return false;\n    }\n    this.trace(\n      ConnectivityState[this.connectivityState] +\n        ' -> ' +\n        ConnectivityState[newState]\n    );\n    if (this.channelzEnabled) {\n      this.channelzTrace.addTrace(\n        'CT_INFO',\n        'Connectivity state change to ' + ConnectivityState[newState]\n      );\n    }\n    const previousState = this.connectivityState;\n    this.connectivityState = newState;\n    switch (newState) {\n      case ConnectivityState.READY:\n        this.stopBackoff();\n        break;\n      case ConnectivityState.CONNECTING:\n        this.startBackoff();\n        this.startConnectingInternal();\n        this.continueConnecting = false;\n        break;\n      case ConnectivityState.TRANSIENT_FAILURE:\n        if (this.channelzEnabled && this.transport) {\n          this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n        }\n        this.transport?.shutdown();\n        this.transport = null;\n        /* If the backoff timer has already ended by the time we get to the\n         * TRANSIENT_FAILURE state, we want to immediately transition out of\n         * TRANSIENT_FAILURE as though the backoff timer is ending right now */\n        if (!this.backoffTimeout.isRunning()) {\n          process.nextTick(() => {\n            this.handleBackoffTimer();\n          });\n        }\n        break;\n      case ConnectivityState.IDLE:\n        if (this.channelzEnabled && this.transport) {\n          this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n        }\n        this.transport?.shutdown();\n        this.transport = null;\n        break;\n      default:\n        throw new Error(`Invalid state: unknown ConnectivityState ${newState}`);\n    }\n    for (const listener of this.stateListeners) {\n      listener(this, previousState, newState, this.keepaliveTime, errorMessage);\n    }\n    return true;\n  }\n\n  ref() {\n    this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount + 1));\n    this.refcount += 1;\n  }\n\n  unref() {\n    this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount - 1));\n    this.refcount -= 1;\n    if (this.refcount === 0) {\n      this.channelzTrace.addTrace('CT_INFO', 'Shutting down');\n      unregisterChannelzRef(this.channelzRef);\n      process.nextTick(() => {\n        this.transitionToState(\n          [ConnectivityState.CONNECTING, ConnectivityState.READY],\n          ConnectivityState.IDLE\n        );\n      });\n    }\n  }\n\n  unrefIfOneRef(): boolean {\n    if (this.refcount === 1) {\n      this.unref();\n      return true;\n    }\n    return false;\n  }\n\n  createCall(\n    metadata: Metadata,\n    host: string,\n    method: string,\n    listener: SubchannelCallInterceptingListener\n  ): SubchannelCall {\n    if (!this.transport) {\n      throw new Error('Cannot create call, subchannel not READY');\n    }\n    let statsTracker: Partial<CallEventTracker>;\n    if (this.channelzEnabled) {\n      this.callTracker.addCallStarted();\n      this.streamTracker.addCallStarted();\n      statsTracker = {\n        onCallEnd: status => {\n          if (status.code === Status.OK) {\n            this.callTracker.addCallSucceeded();\n          } else {\n            this.callTracker.addCallFailed();\n          }\n        },\n      };\n    } else {\n      statsTracker = {};\n    }\n    return this.transport.createCall(\n      metadata,\n      host,\n      method,\n      listener,\n      statsTracker\n    );\n  }\n\n  /**\n   * If the subchannel is currently IDLE, start connecting and switch to the\n   * CONNECTING state. If the subchannel is current in TRANSIENT_FAILURE,\n   * the next time it would transition to IDLE, start connecting again instead.\n   * Otherwise, do nothing.\n   */\n  startConnecting() {\n    process.nextTick(() => {\n      /* First, try to transition from IDLE to connecting. If that doesn't happen\n       * because the state is not currently IDLE, check if it is\n       * TRANSIENT_FAILURE, and if so indicate that it should go back to\n       * connecting after the backoff timer ends. Otherwise do nothing */\n      if (\n        !this.transitionToState(\n          [ConnectivityState.IDLE],\n          ConnectivityState.CONNECTING\n        )\n      ) {\n        if (this.connectivityState === ConnectivityState.TRANSIENT_FAILURE) {\n          this.continueConnecting = true;\n        }\n      }\n    });\n  }\n\n  /**\n   * Get the subchannel's current connectivity state.\n   */\n  getConnectivityState() {\n    return this.connectivityState;\n  }\n\n  /**\n   * Add a listener function to be called whenever the subchannel's\n   * connectivity state changes.\n   * @param listener\n   */\n  addConnectivityStateListener(listener: ConnectivityStateListener) {\n    this.stateListeners.add(listener);\n  }\n\n  /**\n   * Remove a listener previously added with `addConnectivityStateListener`\n   * @param listener A reference to a function previously passed to\n   *     `addConnectivityStateListener`\n   */\n  removeConnectivityStateListener(listener: ConnectivityStateListener) {\n    this.stateListeners.delete(listener);\n  }\n\n  /**\n   * Reset the backoff timeout, and immediately start connecting if in backoff.\n   */\n  resetBackoff() {\n    process.nextTick(() => {\n      this.backoffTimeout.reset();\n      this.transitionToState(\n        [ConnectivityState.TRANSIENT_FAILURE],\n        ConnectivityState.CONNECTING\n      );\n    });\n  }\n\n  getAddress(): string {\n    return this.subchannelAddressString;\n  }\n\n  getChannelzRef(): SubchannelRef {\n    return this.channelzRef;\n  }\n\n  isHealthy(): boolean {\n    return true;\n  }\n\n  addHealthStateWatcher(listener: (healthy: boolean) => void): void {\n    // Do nothing with the listener\n  }\n\n  removeHealthStateWatcher(listener: (healthy: boolean) => void): void {\n    // Do nothing with the listener\n  }\n\n  getRealSubchannel(): this {\n    return this;\n  }\n\n  realSubchannelEquals(other: SubchannelInterface): boolean {\n    return other.getRealSubchannel() === this;\n  }\n\n  throttleKeepalive(newKeepaliveTime: number) {\n    if (newKeepaliveTime > this.keepaliveTime) {\n      this.keepaliveTime = newKeepaliveTime;\n    }\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Resolver,\n  ResolverListener,\n  registerResolver,\n  registerDefaultScheme,\n} from './resolver';\nimport * as dns from 'dns';\nimport * as util from 'util';\nimport { extractAndSelectServiceConfig, ServiceConfig } from './service-config';\nimport { Status } from './constants';\nimport { StatusObject } from './call-interface';\nimport { Metadata } from './metadata';\nimport * as logging from './logging';\nimport { LogVerbosity } from './constants';\nimport { Endpoint, TcpSubchannelAddress } from './subchannel-address';\nimport { GrpcUri, uriToString, splitHostPort } from './uri-parser';\nimport { isIPv6, isIPv4 } from 'net';\nimport { ChannelOptions } from './channel-options';\nimport { BackoffOptions, BackoffTimeout } from './backoff-timeout';\n\nconst TRACER_NAME = 'dns_resolver';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nexport const DEFAULT_PORT = 443;\n\nconst DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS = 30_000;\n\nconst resolveTxtPromise = util.promisify(dns.resolveTxt);\nconst dnsLookupPromise = util.promisify(dns.lookup);\n\n/**\n * Resolver implementation that handles DNS names and IP addresses.\n */\nclass DnsResolver implements Resolver {\n  private readonly ipResult: Endpoint[] | null;\n  private readonly dnsHostname: string | null;\n  private readonly port: number | null;\n  /**\n   * Minimum time between resolutions, measured as the time between starting\n   * successive resolution requests. Only applies to successful resolutions.\n   * Failures are handled by the backoff timer.\n   */\n  private readonly minTimeBetweenResolutionsMs: number;\n  private pendingLookupPromise: Promise<dns.LookupAddress[]> | null = null;\n  private pendingTxtPromise: Promise<string[][]> | null = null;\n  private latestLookupResult: Endpoint[] | null = null;\n  private latestServiceConfig: ServiceConfig | null = null;\n  private latestServiceConfigError: StatusObject | null = null;\n  private percentage: number;\n  private defaultResolutionError: StatusObject;\n  private backoff: BackoffTimeout;\n  private continueResolving = false;\n  private nextResolutionTimer: NodeJS.Timeout;\n  private isNextResolutionTimerRunning = false;\n  private isServiceConfigEnabled = true;\n  private returnedIpResult = false;\n  constructor(\n    private target: GrpcUri,\n    private listener: ResolverListener,\n    channelOptions: ChannelOptions\n  ) {\n    trace('Resolver constructed for target ' + uriToString(target));\n    const hostPort = splitHostPort(target.path);\n    if (hostPort === null) {\n      this.ipResult = null;\n      this.dnsHostname = null;\n      this.port = null;\n    } else {\n      if (isIPv4(hostPort.host) || isIPv6(hostPort.host)) {\n        this.ipResult = [\n          {\n            addresses: [\n              {\n                host: hostPort.host,\n                port: hostPort.port ?? DEFAULT_PORT,\n              },\n            ],\n          },\n        ];\n        this.dnsHostname = null;\n        this.port = null;\n      } else {\n        this.ipResult = null;\n        this.dnsHostname = hostPort.host;\n        this.port = hostPort.port ?? DEFAULT_PORT;\n      }\n    }\n    this.percentage = Math.random() * 100;\n\n    if (channelOptions['grpc.service_config_disable_resolution'] === 1) {\n      this.isServiceConfigEnabled = false;\n    }\n\n    this.defaultResolutionError = {\n      code: Status.UNAVAILABLE,\n      details: `Name resolution failed for target ${uriToString(this.target)}`,\n      metadata: new Metadata(),\n    };\n\n    const backoffOptions: BackoffOptions = {\n      initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n      maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n    };\n\n    this.backoff = new BackoffTimeout(() => {\n      if (this.continueResolving) {\n        this.startResolutionWithBackoff();\n      }\n    }, backoffOptions);\n    this.backoff.unref();\n\n    this.minTimeBetweenResolutionsMs =\n      channelOptions['grpc.dns_min_time_between_resolutions_ms'] ??\n      DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS;\n    this.nextResolutionTimer = setTimeout(() => {}, 0);\n    clearTimeout(this.nextResolutionTimer);\n  }\n\n  /**\n   * If the target is an IP address, just provide that address as a result.\n   * Otherwise, initiate A, AAAA, and TXT lookups\n   */\n  private startResolution() {\n    if (this.ipResult !== null) {\n      if (!this.returnedIpResult) {\n        trace('Returning IP address for target ' + uriToString(this.target));\n        setImmediate(() => {\n          this.listener.onSuccessfulResolution(\n            this.ipResult!,\n            null,\n            null,\n            null,\n            {}\n          );\n        });\n        this.returnedIpResult = true;\n      }\n      this.backoff.stop();\n      this.backoff.reset();\n      this.stopNextResolutionTimer();\n      return;\n    }\n    if (this.dnsHostname === null) {\n      trace('Failed to parse DNS address ' + uriToString(this.target));\n      setImmediate(() => {\n        this.listener.onError({\n          code: Status.UNAVAILABLE,\n          details: `Failed to parse DNS address ${uriToString(this.target)}`,\n          metadata: new Metadata(),\n        });\n      });\n      this.stopNextResolutionTimer();\n    } else {\n      if (this.pendingLookupPromise !== null) {\n        return;\n      }\n      trace('Looking up DNS hostname ' + this.dnsHostname);\n      /* We clear out latestLookupResult here to ensure that it contains the\n       * latest result since the last time we started resolving. That way, the\n       * TXT resolution handler can use it, but only if it finishes second. We\n       * don't clear out any previous service config results because it's\n       * better to use a service config that's slightly out of date than to\n       * revert to an effectively blank one. */\n      this.latestLookupResult = null;\n      const hostname: string = this.dnsHostname;\n      /* We lookup both address families here and then split them up later\n       * because when looking up a single family, dns.lookup outputs an error\n       * if the name exists but there are no records for that family, and that\n       * error is indistinguishable from other kinds of errors */\n      this.pendingLookupPromise = dnsLookupPromise(hostname, { all: true });\n      this.pendingLookupPromise.then(\n        addressList => {\n          if (this.pendingLookupPromise === null) {\n            return;\n          }\n          this.pendingLookupPromise = null;\n          this.backoff.reset();\n          this.backoff.stop();\n          const subchannelAddresses: TcpSubchannelAddress[] = addressList.map(\n            addr => ({ host: addr.address, port: +this.port! })\n          );\n          this.latestLookupResult = subchannelAddresses.map(address => ({\n            addresses: [address],\n          }));\n          const allAddressesString: string =\n            '[' +\n            subchannelAddresses\n              .map(addr => addr.host + ':' + addr.port)\n              .join(',') +\n            ']';\n          trace(\n            'Resolved addresses for target ' +\n              uriToString(this.target) +\n              ': ' +\n              allAddressesString\n          );\n          if (this.latestLookupResult.length === 0) {\n            this.listener.onError(this.defaultResolutionError);\n            return;\n          }\n          /* If the TXT lookup has not yet finished, both of the last two\n           * arguments will be null, which is the equivalent of getting an\n           * empty TXT response. When the TXT lookup does finish, its handler\n           * can update the service config by using the same address list */\n          this.listener.onSuccessfulResolution(\n            this.latestLookupResult,\n            this.latestServiceConfig,\n            this.latestServiceConfigError,\n            null,\n            {}\n          );\n        },\n        err => {\n          if (this.pendingLookupPromise === null) {\n            return;\n          }\n          trace(\n            'Resolution error for target ' +\n              uriToString(this.target) +\n              ': ' +\n              (err as Error).message\n          );\n          this.pendingLookupPromise = null;\n          this.stopNextResolutionTimer();\n          this.listener.onError(this.defaultResolutionError);\n        }\n      );\n      /* If there already is a still-pending TXT resolution, we can just use\n       * that result when it comes in */\n      if (this.isServiceConfigEnabled && this.pendingTxtPromise === null) {\n        /* We handle the TXT query promise differently than the others because\n         * the name resolution attempt as a whole is a success even if the TXT\n         * lookup fails */\n        this.pendingTxtPromise = resolveTxtPromise(hostname);\n        this.pendingTxtPromise.then(\n          txtRecord => {\n            if (this.pendingTxtPromise === null) {\n              return;\n            }\n            this.pendingTxtPromise = null;\n            try {\n              this.latestServiceConfig = extractAndSelectServiceConfig(\n                txtRecord,\n                this.percentage\n              );\n            } catch (err) {\n              this.latestServiceConfigError = {\n                code: Status.UNAVAILABLE,\n                details: `Parsing service config failed with error ${\n                  (err as Error).message\n                }`,\n                metadata: new Metadata(),\n              };\n            }\n            if (this.latestLookupResult !== null) {\n              /* We rely here on the assumption that calling this function with\n               * identical parameters will be essentialy idempotent, and calling\n               * it with the same address list and a different service config\n               * should result in a fast and seamless switchover. */\n              this.listener.onSuccessfulResolution(\n                this.latestLookupResult,\n                this.latestServiceConfig,\n                this.latestServiceConfigError,\n                null,\n                {}\n              );\n            }\n          },\n          err => {\n            /* If TXT lookup fails we should do nothing, which means that we\n             * continue to use the result of the most recent successful lookup,\n             * or the default null config object if there has never been a\n             * successful lookup. We do not set the latestServiceConfigError\n             * here because that is specifically used for response validation\n             * errors. We still need to handle this error so that it does not\n             * bubble up as an unhandled promise rejection. */\n          }\n        );\n      }\n    }\n  }\n\n  private startNextResolutionTimer() {\n    clearTimeout(this.nextResolutionTimer);\n    this.nextResolutionTimer = setTimeout(() => {\n      this.stopNextResolutionTimer();\n      if (this.continueResolving) {\n        this.startResolutionWithBackoff();\n      }\n    }, this.minTimeBetweenResolutionsMs);\n    this.nextResolutionTimer.unref?.();\n    this.isNextResolutionTimerRunning = true;\n  }\n\n  private stopNextResolutionTimer() {\n    clearTimeout(this.nextResolutionTimer);\n    this.isNextResolutionTimerRunning = false;\n  }\n\n  private startResolutionWithBackoff() {\n    if (this.pendingLookupPromise === null) {\n      this.continueResolving = false;\n      this.backoff.runOnce();\n      this.startNextResolutionTimer();\n      this.startResolution();\n    }\n  }\n\n  updateResolution() {\n    /* If there is a pending lookup, just let it finish. Otherwise, if the\n     * nextResolutionTimer or backoff timer is running, set the\n     * continueResolving flag to resolve when whichever of those timers\n     * fires. Otherwise, start resolving immediately. */\n    if (this.pendingLookupPromise === null) {\n      if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {\n        if (this.isNextResolutionTimerRunning) {\n          trace(\n            'resolution update delayed by \"min time between resolutions\" rate limit'\n          );\n        } else {\n          trace(\n            'resolution update delayed by backoff timer until ' +\n              this.backoff.getEndTime().toISOString()\n          );\n        }\n        this.continueResolving = true;\n      } else {\n        this.startResolutionWithBackoff();\n      }\n    }\n  }\n\n  /**\n   * Reset the resolver to the same state it had when it was created. In-flight\n   * DNS requests cannot be cancelled, but they are discarded and their results\n   * will be ignored.\n   */\n  destroy() {\n    this.continueResolving = false;\n    this.backoff.reset();\n    this.backoff.stop();\n    this.stopNextResolutionTimer();\n    this.pendingLookupPromise = null;\n    this.pendingTxtPromise = null;\n    this.latestLookupResult = null;\n    this.latestServiceConfig = null;\n    this.latestServiceConfigError = null;\n    this.returnedIpResult = false;\n  }\n\n  /**\n   * Get the default authority for the given target. For IP targets, that is\n   * the IP address. For DNS targets, it is the hostname.\n   * @param target\n   */\n  static getDefaultAuthority(target: GrpcUri): string {\n    return target.path;\n  }\n}\n\n/**\n * Set up the DNS resolver class by registering it as the handler for the\n * \"dns:\" prefix and as the default resolver.\n */\nexport function setup(): void {\n  registerResolver('dns', DnsResolver);\n  registerDefaultScheme('dns');\n}\n\nexport interface DnsUrl {\n  host: string;\n  port?: string;\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { log } from './logging';\nimport { LogVerbosity } from './constants';\nimport { getDefaultAuthority } from './resolver';\nimport { Socket } from 'net';\nimport * as http from 'http';\nimport * as tls from 'tls';\nimport * as logging from './logging';\nimport {\n  SubchannelAddress,\n  isTcpSubchannelAddress,\n  subchannelAddressToString,\n} from './subchannel-address';\nimport { ChannelOptions } from './channel-options';\nimport { GrpcUri, parseUri, splitHostPort, uriToString } from './uri-parser';\nimport { URL } from 'url';\nimport { DEFAULT_PORT } from './resolver-dns';\n\nconst TRACER_NAME = 'proxy';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\ninterface ProxyInfo {\n  address?: string;\n  creds?: string;\n}\n\nfunction getProxyInfo(): ProxyInfo {\n  let proxyEnv = '';\n  let envVar = '';\n  /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n   * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n   * fallback behavior can be removed if there's a demand for it.\n   */\n  if (process.env.grpc_proxy) {\n    envVar = 'grpc_proxy';\n    proxyEnv = process.env.grpc_proxy;\n  } else if (process.env.https_proxy) {\n    envVar = 'https_proxy';\n    proxyEnv = process.env.https_proxy;\n  } else if (process.env.http_proxy) {\n    envVar = 'http_proxy';\n    proxyEnv = process.env.http_proxy;\n  } else {\n    return {};\n  }\n  let proxyUrl: URL;\n  try {\n    proxyUrl = new URL(proxyEnv);\n  } catch (e) {\n    log(LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n    return {};\n  }\n  if (proxyUrl.protocol !== 'http:') {\n    log(\n      LogVerbosity.ERROR,\n      `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`\n    );\n    return {};\n  }\n  let userCred: string | null = null;\n  if (proxyUrl.username) {\n    if (proxyUrl.password) {\n      log(LogVerbosity.INFO, 'userinfo found in proxy URI');\n      userCred = decodeURIComponent(`${proxyUrl.username}:${proxyUrl.password}`);\n    } else {\n      userCred = proxyUrl.username;\n    }\n  }\n  const hostname = proxyUrl.hostname;\n  let port = proxyUrl.port;\n  /* The proxy URL uses the scheme \"http:\", which has a default port number of\n   * 80. We need to set that explicitly here if it is omitted because otherwise\n   * it will use gRPC's default port 443. */\n  if (port === '') {\n    port = '80';\n  }\n  const result: ProxyInfo = {\n    address: `${hostname}:${port}`,\n  };\n  if (userCred) {\n    result.creds = userCred;\n  }\n  trace(\n    'Proxy server ' + result.address + ' set by environment variable ' + envVar\n  );\n  return result;\n}\n\nfunction getNoProxyHostList(): string[] {\n  /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n  let noProxyStr: string | undefined = process.env.no_grpc_proxy;\n  let envVar = 'no_grpc_proxy';\n  if (!noProxyStr) {\n    noProxyStr = process.env.no_proxy;\n    envVar = 'no_proxy';\n  }\n  if (noProxyStr) {\n    trace('No proxy server list set by environment variable ' + envVar);\n    return noProxyStr.split(',');\n  } else {\n    return [];\n  }\n}\n\nexport interface ProxyMapResult {\n  target: GrpcUri;\n  extraOptions: ChannelOptions;\n}\n\nexport function mapProxyName(\n  target: GrpcUri,\n  options: ChannelOptions\n): ProxyMapResult {\n  const noProxyResult: ProxyMapResult = {\n    target: target,\n    extraOptions: {},\n  };\n  if ((options['grpc.enable_http_proxy'] ?? 1) === 0) {\n    return noProxyResult;\n  }\n  if (target.scheme === 'unix') {\n    return noProxyResult;\n  }\n  const proxyInfo = getProxyInfo();\n  if (!proxyInfo.address) {\n    return noProxyResult;\n  }\n  const hostPort = splitHostPort(target.path);\n  if (!hostPort) {\n    return noProxyResult;\n  }\n  const serverHost = hostPort.host;\n  for (const host of getNoProxyHostList()) {\n    if (host === serverHost) {\n      trace(\n        'Not using proxy for target in no_proxy list: ' + uriToString(target)\n      );\n      return noProxyResult;\n    }\n  }\n  const extraOptions: ChannelOptions = {\n    'grpc.http_connect_target': uriToString(target),\n  };\n  if (proxyInfo.creds) {\n    extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n  }\n  return {\n    target: {\n      scheme: 'dns',\n      path: proxyInfo.address,\n    },\n    extraOptions: extraOptions,\n  };\n}\n\nexport interface ProxyConnectionResult {\n  socket?: Socket;\n  realTarget?: GrpcUri;\n}\n\nexport function getProxiedConnection(\n  address: SubchannelAddress,\n  channelOptions: ChannelOptions,\n  connectionOptions: tls.ConnectionOptions\n): Promise<ProxyConnectionResult> {\n  if (!('grpc.http_connect_target' in channelOptions)) {\n    return Promise.resolve<ProxyConnectionResult>({});\n  }\n  const realTarget = channelOptions['grpc.http_connect_target'] as string;\n  const parsedTarget = parseUri(realTarget);\n  if (parsedTarget === null) {\n    return Promise.resolve<ProxyConnectionResult>({});\n  }\n  const splitHostPost = splitHostPort(parsedTarget.path);\n  if (splitHostPost === null) {\n    return Promise.resolve<ProxyConnectionResult>({});\n  }\n  const hostPort = `${splitHostPost.host}:${\n    splitHostPost.port ?? DEFAULT_PORT\n  }`;\n  const options: http.RequestOptions = {\n    method: 'CONNECT',\n    path: hostPort,\n  };\n  const headers: http.OutgoingHttpHeaders = {\n    Host: hostPort,\n  };\n  // Connect to the subchannel address as a proxy\n  if (isTcpSubchannelAddress(address)) {\n    options.host = address.host;\n    options.port = address.port;\n  } else {\n    options.socketPath = address.path;\n  }\n  if ('grpc.http_connect_creds' in channelOptions) {\n    headers['Proxy-Authorization'] =\n      'Basic ' +\n      Buffer.from(channelOptions['grpc.http_connect_creds'] as string).toString(\n        'base64'\n      );\n  }\n  options.headers = headers;\n  const proxyAddressString = subchannelAddressToString(address);\n  trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n  return new Promise<ProxyConnectionResult>((resolve, reject) => {\n    const request = http.request(options);\n    request.once('connect', (res, socket, head) => {\n      request.removeAllListeners();\n      socket.removeAllListeners();\n      if (res.statusCode === 200) {\n        trace(\n          'Successfully connected to ' +\n            options.path +\n            ' through proxy ' +\n            proxyAddressString\n        );\n        // The HTTP client may have already read a few bytes of the proxied\n        // connection. If that's the case, put them back into the socket.\n        // See https://github.com/grpc/grpc-node/issues/2744.\n        if (head.length > 0) {\n          socket.unshift(head);\n        }\n        if ('secureContext' in connectionOptions) {\n          /* The proxy is connecting to a TLS server, so upgrade this socket\n           * connection to a TLS connection.\n           * This is a workaround for https://github.com/nodejs/node/issues/32922\n           * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n          const targetPath = getDefaultAuthority(parsedTarget);\n          const hostPort = splitHostPort(targetPath);\n          const remoteHost = hostPort?.host ?? targetPath;\n\n          const cts = tls.connect(\n            {\n              host: remoteHost,\n              servername: remoteHost,\n              socket: socket,\n              ...connectionOptions,\n            },\n            () => {\n              trace(\n                'Successfully established a TLS connection to ' +\n                  options.path +\n                  ' through proxy ' +\n                  proxyAddressString\n              );\n              resolve({ socket: cts, realTarget: parsedTarget });\n            }\n          );\n          cts.on('error', (error: Error) => {\n            trace(\n              'Failed to establish a TLS connection to ' +\n                options.path +\n                ' through proxy ' +\n                proxyAddressString +\n                ' with error ' +\n                error.message\n            );\n            reject();\n          });\n        } else {\n          trace(\n            'Successfully established a plaintext connection to ' +\n              options.path +\n              ' through proxy ' +\n              proxyAddressString\n          );\n          resolve({\n            socket,\n            realTarget: parsedTarget,\n          });\n        }\n      } else {\n        log(\n          LogVerbosity.ERROR,\n          'Failed to connect to ' +\n            options.path +\n            ' through proxy ' +\n            proxyAddressString +\n            ' with status ' +\n            res.statusCode\n        );\n        reject();\n      }\n    });\n    request.once('error', err => {\n      request.removeAllListeners();\n      log(\n        LogVerbosity.ERROR,\n        'Failed to connect to proxy ' +\n          proxyAddressString +\n          ' with error ' +\n          err.message\n      );\n      reject();\n    });\n    request.end();\n  });\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nenum ReadState {\n  NO_DATA,\n  READING_SIZE,\n  READING_MESSAGE,\n}\n\nexport class StreamDecoder {\n  private readState: ReadState = ReadState.NO_DATA;\n  private readCompressFlag: Buffer = Buffer.alloc(1);\n  private readPartialSize: Buffer = Buffer.alloc(4);\n  private readSizeRemaining = 4;\n  private readMessageSize = 0;\n  private readPartialMessage: Buffer[] = [];\n  private readMessageRemaining = 0;\n\n  constructor(private maxReadMessageLength: number) {}\n\n  write(data: Buffer): Buffer[] {\n    let readHead = 0;\n    let toRead: number;\n    const result: Buffer[] = [];\n\n    while (readHead < data.length) {\n      switch (this.readState) {\n        case ReadState.NO_DATA:\n          this.readCompressFlag = data.slice(readHead, readHead + 1);\n          readHead += 1;\n          this.readState = ReadState.READING_SIZE;\n          this.readPartialSize.fill(0);\n          this.readSizeRemaining = 4;\n          this.readMessageSize = 0;\n          this.readMessageRemaining = 0;\n          this.readPartialMessage = [];\n          break;\n        case ReadState.READING_SIZE:\n          toRead = Math.min(data.length - readHead, this.readSizeRemaining);\n          data.copy(\n            this.readPartialSize,\n            4 - this.readSizeRemaining,\n            readHead,\n            readHead + toRead\n          );\n          this.readSizeRemaining -= toRead;\n          readHead += toRead;\n          // readSizeRemaining >=0 here\n          if (this.readSizeRemaining === 0) {\n            this.readMessageSize = this.readPartialSize.readUInt32BE(0);\n            if (this.maxReadMessageLength !== -1 && this.readMessageSize > this.maxReadMessageLength) {\n              throw new Error(`Received message larger than max (${this.readMessageSize} vs ${this.maxReadMessageLength})`);\n            }\n            this.readMessageRemaining = this.readMessageSize;\n            if (this.readMessageRemaining > 0) {\n              this.readState = ReadState.READING_MESSAGE;\n            } else {\n              const message = Buffer.concat(\n                [this.readCompressFlag, this.readPartialSize],\n                5\n              );\n\n              this.readState = ReadState.NO_DATA;\n              result.push(message);\n            }\n          }\n          break;\n        case ReadState.READING_MESSAGE:\n          toRead = Math.min(data.length - readHead, this.readMessageRemaining);\n          this.readPartialMessage.push(data.slice(readHead, readHead + toRead));\n          this.readMessageRemaining -= toRead;\n          readHead += toRead;\n          // readMessageRemaining >=0 here\n          if (this.readMessageRemaining === 0) {\n            // At this point, we have read a full message\n            const framedMessageBuffers = [\n              this.readCompressFlag,\n              this.readPartialSize,\n            ].concat(this.readPartialMessage);\n            const framedMessage = Buffer.concat(\n              framedMessageBuffers,\n              this.readMessageSize + 5\n            );\n\n            this.readState = ReadState.NO_DATA;\n            result.push(framedMessage);\n          }\n          break;\n        default:\n          throw new Error('Unexpected read state');\n      }\n    }\n\n    return result;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as http2 from 'http2';\nimport * as os from 'os';\n\nimport { DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH, Status } from './constants';\nimport { Metadata } from './metadata';\nimport { StreamDecoder } from './stream-decoder';\nimport * as logging from './logging';\nimport { LogVerbosity } from './constants';\nimport {\n  InterceptingListener,\n  MessageContext,\n  StatusObject,\n  WriteCallback,\n} from './call-interface';\nimport { CallEventTracker, Transport } from './transport';\n\nconst TRACER_NAME = 'subchannel_call';\n\n/**\n * https://nodejs.org/api/errors.html#errors_class_systemerror\n */\ninterface SystemError extends Error {\n  address?: string;\n  code: string;\n  dest?: string;\n  errno: number;\n  info?: object;\n  message: string;\n  path?: string;\n  port?: number;\n  syscall: string;\n}\n\n/**\n * Should do approximately the same thing as util.getSystemErrorName but the\n * TypeScript types don't have that function for some reason so I just made my\n * own.\n * @param errno\n */\nfunction getSystemErrorName(errno: number): string {\n  for (const [name, num] of Object.entries(os.constants.errno)) {\n    if (num === errno) {\n      return name;\n    }\n  }\n  return 'Unknown system error ' + errno;\n}\n\nexport interface SubchannelCall {\n  cancelWithStatus(status: Status, details: string): void;\n  getPeer(): string;\n  sendMessageWithContext(context: MessageContext, message: Buffer): void;\n  startRead(): void;\n  halfClose(): void;\n  getCallNumber(): number;\n  getDeadlineInfo(): string[];\n}\n\nexport interface StatusObjectWithRstCode extends StatusObject {\n  rstCode?: number;\n}\n\nexport interface SubchannelCallInterceptingListener\n  extends InterceptingListener {\n  onReceiveStatus(status: StatusObjectWithRstCode): void;\n}\n\nfunction mapHttpStatusCode(code: number): StatusObject {\n  const details = `Received HTTP status code ${code}`;\n  let mappedStatusCode: number;\n  switch (code) {\n    // TODO(murgatroid99): handle 100 and 101\n    case 400:\n      mappedStatusCode = Status.INTERNAL;\n      break;\n    case 401:\n      mappedStatusCode = Status.UNAUTHENTICATED;\n      break;\n    case 403:\n      mappedStatusCode = Status.PERMISSION_DENIED;\n      break;\n    case 404:\n      mappedStatusCode = Status.UNIMPLEMENTED;\n      break;\n    case 429:\n    case 502:\n    case 503:\n    case 504:\n      mappedStatusCode = Status.UNAVAILABLE;\n      break;\n    default:\n      mappedStatusCode = Status.UNKNOWN;\n  }\n  return {\n    code: mappedStatusCode,\n    details: details,\n    metadata: new Metadata()\n  };\n}\n\nexport class Http2SubchannelCall implements SubchannelCall {\n  private decoder: StreamDecoder;\n\n  private isReadFilterPending = false;\n  private isPushPending = false;\n  private canPush = false;\n  /**\n   * Indicates that an 'end' event has come from the http2 stream, so there\n   * will be no more data events.\n   */\n  private readsClosed = false;\n\n  private statusOutput = false;\n\n  private unpushedReadMessages: Buffer[] = [];\n\n  private httpStatusCode: number | undefined;\n\n  // This is populated (non-null) if and only if the call has ended\n  private finalStatus: StatusObject | null = null;\n\n  private internalError: SystemError | null = null;\n\n  private serverEndedCall = false;\n\n  constructor(\n    private readonly http2Stream: http2.ClientHttp2Stream,\n    private readonly callEventTracker: CallEventTracker,\n    private readonly listener: SubchannelCallInterceptingListener,\n    private readonly transport: Transport,\n    private readonly callId: number\n  ) {\n    const maxReceiveMessageLength = transport.getOptions()['grpc.max_receive_message_length'] ?? DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n    this.decoder = new StreamDecoder(maxReceiveMessageLength);\n    http2Stream.on('response', (headers, flags) => {\n      let headersString = '';\n      for (const header of Object.keys(headers)) {\n        headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n      }\n      this.trace('Received server headers:\\n' + headersString);\n      this.httpStatusCode = headers[':status'];\n\n      if (flags & http2.constants.NGHTTP2_FLAG_END_STREAM) {\n        this.handleTrailers(headers);\n      } else {\n        let metadata: Metadata;\n        try {\n          metadata = Metadata.fromHttp2Headers(headers);\n        } catch (error) {\n          this.endCall({\n            code: Status.UNKNOWN,\n            details: (error as Error).message,\n            metadata: new Metadata(),\n          });\n          return;\n        }\n        this.listener.onReceiveMetadata(metadata);\n      }\n    });\n    http2Stream.on('trailers', (headers: http2.IncomingHttpHeaders) => {\n      this.handleTrailers(headers);\n    });\n    http2Stream.on('data', (data: Buffer) => {\n      /* If the status has already been output, allow the http2 stream to\n       * drain without processing the data. */\n      if (this.statusOutput) {\n        return;\n      }\n      this.trace('receive HTTP/2 data frame of length ' + data.length);\n      let messages: Buffer[];\n      try {\n        messages = this.decoder.write(data);\n      } catch (e) {\n        this.cancelWithStatus(Status.RESOURCE_EXHAUSTED, (e as Error).message);\n        return;\n      }\n\n      for (const message of messages) {\n        this.trace('parsed message of length ' + message.length);\n        this.callEventTracker!.addMessageReceived();\n        this.tryPush(message);\n      }\n    });\n    http2Stream.on('end', () => {\n      this.readsClosed = true;\n      this.maybeOutputStatus();\n    });\n    http2Stream.on('close', () => {\n      this.serverEndedCall = true;\n      /* Use process.next tick to ensure that this code happens after any\n       * \"error\" event that may be emitted at about the same time, so that\n       * we can bubble up the error message from that event. */\n      process.nextTick(() => {\n        this.trace('HTTP/2 stream closed with code ' + http2Stream.rstCode);\n        /* If we have a final status with an OK status code, that means that\n         * we have received all of the messages and we have processed the\n         * trailers and the call completed successfully, so it doesn't matter\n         * how the stream ends after that */\n        if (this.finalStatus?.code === Status.OK) {\n          return;\n        }\n        let code: Status;\n        let details = '';\n        switch (http2Stream.rstCode) {\n          case http2.constants.NGHTTP2_NO_ERROR:\n            /* If we get a NO_ERROR code and we already have a status, the\n             * stream completed properly and we just haven't fully processed\n             * it yet */\n            if (this.finalStatus !== null) {\n              return;\n            }\n            if (this.httpStatusCode && this.httpStatusCode !== 200) {\n              const mappedStatus = mapHttpStatusCode(this.httpStatusCode);\n              code = mappedStatus.code;\n              details = mappedStatus.details;\n            } else {\n              code = Status.INTERNAL;\n              details = `Received RST_STREAM with code ${http2Stream.rstCode} (Call ended without gRPC status)`;\n            }\n            break;\n          case http2.constants.NGHTTP2_REFUSED_STREAM:\n            code = Status.UNAVAILABLE;\n            details = 'Stream refused by server';\n            break;\n          case http2.constants.NGHTTP2_CANCEL:\n            code = Status.CANCELLED;\n            details = 'Call cancelled';\n            break;\n          case http2.constants.NGHTTP2_ENHANCE_YOUR_CALM:\n            code = Status.RESOURCE_EXHAUSTED;\n            details = 'Bandwidth exhausted or memory limit exceeded';\n            break;\n          case http2.constants.NGHTTP2_INADEQUATE_SECURITY:\n            code = Status.PERMISSION_DENIED;\n            details = 'Protocol not secure enough';\n            break;\n          case http2.constants.NGHTTP2_INTERNAL_ERROR:\n            code = Status.INTERNAL;\n            if (this.internalError === null) {\n              /* This error code was previously handled in the default case, and\n               * there are several instances of it online, so I wanted to\n               * preserve the original error message so that people find existing\n               * information in searches, but also include the more recognizable\n               * \"Internal server error\" message. */\n              details = `Received RST_STREAM with code ${http2Stream.rstCode} (Internal server error)`;\n            } else {\n              if (\n                this.internalError.code === 'ECONNRESET' ||\n                this.internalError.code === 'ETIMEDOUT'\n              ) {\n                code = Status.UNAVAILABLE;\n                details = this.internalError.message;\n              } else {\n                /* The \"Received RST_STREAM with code ...\" error is preserved\n                 * here for continuity with errors reported online, but the\n                 * error message at the end will probably be more relevant in\n                 * most cases. */\n                details = `Received RST_STREAM with code ${http2Stream.rstCode} triggered by internal client error: ${this.internalError.message}`;\n              }\n            }\n            break;\n          default:\n            code = Status.INTERNAL;\n            details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n        }\n        // This is a no-op if trailers were received at all.\n        // This is OK, because status codes emitted here correspond to more\n        // catastrophic issues that prevent us from receiving trailers in the\n        // first place.\n        this.endCall({\n          code,\n          details,\n          metadata: new Metadata(),\n          rstCode: http2Stream.rstCode,\n        });\n      });\n    });\n    http2Stream.on('error', (err: SystemError) => {\n      /* We need an error handler here to stop \"Uncaught Error\" exceptions\n       * from bubbling up. However, errors here should all correspond to\n       * \"close\" events, where we will handle the error more granularly */\n      /* Specifically looking for stream errors that were *not* constructed\n       * from a RST_STREAM response here:\n       * https://github.com/nodejs/node/blob/8b8620d580314050175983402dfddf2674e8e22a/lib/internal/http2/core.js#L2267\n       */\n      if (err.code !== 'ERR_HTTP2_STREAM_ERROR') {\n        this.trace(\n          'Node error event: message=' +\n            err.message +\n            ' code=' +\n            err.code +\n            ' errno=' +\n            getSystemErrorName(err.errno) +\n            ' syscall=' +\n            err.syscall\n        );\n        this.internalError = err;\n      }\n      this.callEventTracker.onStreamEnd(false);\n    });\n  }\n  getDeadlineInfo(): string[] {\n    return [`remote_addr=${this.getPeer()}`];\n  }\n\n  public onDisconnect() {\n    this.endCall({\n      code: Status.UNAVAILABLE,\n      details: 'Connection dropped',\n      metadata: new Metadata(),\n    });\n  }\n\n  private outputStatus() {\n    /* Precondition: this.finalStatus !== null */\n    if (!this.statusOutput) {\n      this.statusOutput = true;\n      this.trace(\n        'ended with status: code=' +\n          this.finalStatus!.code +\n          ' details=\"' +\n          this.finalStatus!.details +\n          '\"'\n      );\n      this.callEventTracker.onCallEnd(this.finalStatus!);\n      /* We delay the actual action of bubbling up the status to insulate the\n       * cleanup code in this class from any errors that may be thrown in the\n       * upper layers as a result of bubbling up the status. In particular,\n       * if the status is not OK, the \"error\" event may be emitted\n       * synchronously at the top level, which will result in a thrown error if\n       * the user does not handle that event. */\n      process.nextTick(() => {\n        this.listener.onReceiveStatus(this.finalStatus!);\n      });\n      /* Leave the http2 stream in flowing state to drain incoming messages, to\n       * ensure that the stream closure completes. The call stream already does\n       * not push more messages after the status is output, so the messages go\n       * nowhere either way. */\n      this.http2Stream.resume();\n    }\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '[' + this.callId + '] ' + text\n    );\n  }\n\n  /**\n   * On first call, emits a 'status' event with the given StatusObject.\n   * Subsequent calls are no-ops.\n   * @param status The status of the call.\n   */\n  private endCall(status: StatusObjectWithRstCode): void {\n    /* If the status is OK and a new status comes in (e.g. from a\n     * deserialization failure), that new status takes priority */\n    if (this.finalStatus === null || this.finalStatus.code === Status.OK) {\n      this.finalStatus = status;\n      this.maybeOutputStatus();\n    }\n    this.destroyHttp2Stream();\n  }\n\n  private maybeOutputStatus() {\n    if (this.finalStatus !== null) {\n      /* The combination check of readsClosed and that the two message buffer\n       * arrays are empty checks that there all incoming data has been fully\n       * processed */\n      if (\n        this.finalStatus.code !== Status.OK ||\n        (this.readsClosed &&\n          this.unpushedReadMessages.length === 0 &&\n          !this.isReadFilterPending &&\n          !this.isPushPending)\n      ) {\n        this.outputStatus();\n      }\n    }\n  }\n\n  private push(message: Buffer): void {\n    this.trace(\n      'pushing to reader message of length ' +\n        (message instanceof Buffer ? message.length : null)\n    );\n    this.canPush = false;\n    this.isPushPending = true;\n    process.nextTick(() => {\n      this.isPushPending = false;\n      /* If we have already output the status any later messages should be\n       * ignored, and can cause out-of-order operation errors higher up in the\n       * stack. Checking as late as possible here to avoid any race conditions.\n       */\n      if (this.statusOutput) {\n        return;\n      }\n      this.listener.onReceiveMessage(message);\n      this.maybeOutputStatus();\n    });\n  }\n\n  private tryPush(messageBytes: Buffer): void {\n    if (this.canPush) {\n      this.http2Stream!.pause();\n      this.push(messageBytes);\n    } else {\n      this.trace(\n        'unpushedReadMessages.push message of length ' + messageBytes.length\n      );\n      this.unpushedReadMessages.push(messageBytes);\n    }\n  }\n\n  private handleTrailers(headers: http2.IncomingHttpHeaders) {\n    this.serverEndedCall = true;\n    this.callEventTracker.onStreamEnd(true);\n    let headersString = '';\n    for (const header of Object.keys(headers)) {\n      headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n    }\n    this.trace('Received server trailers:\\n' + headersString);\n    let metadata: Metadata;\n    try {\n      metadata = Metadata.fromHttp2Headers(headers);\n    } catch (e) {\n      metadata = new Metadata();\n    }\n    const metadataMap = metadata.getMap();\n    let status: StatusObject;\n    if (typeof metadataMap['grpc-status'] === 'string') {\n      const receivedStatus: Status = Number(metadataMap['grpc-status']);\n      this.trace('received status code ' + receivedStatus + ' from server');\n      metadata.remove('grpc-status');\n      let details = '';\n      if (typeof metadataMap['grpc-message'] === 'string') {\n        try {\n          details = decodeURI(metadataMap['grpc-message']);\n        } catch (e) {\n          details = metadataMap['grpc-message'];\n        }\n        metadata.remove('grpc-message');\n        this.trace(\n          'received status details string \"' + details + '\" from server'\n        );\n      }\n      status = {\n        code: receivedStatus,\n        details: details,\n        metadata: metadata\n      };\n    } else if (this.httpStatusCode) {\n      status = mapHttpStatusCode(this.httpStatusCode);\n      status.metadata = metadata;\n    } else {\n      status = {\n        code: Status.UNKNOWN,\n        details: 'No status information received',\n        metadata: metadata\n      };\n    }\n    // This is a no-op if the call was already ended when handling headers.\n    this.endCall(status);\n  }\n\n  private destroyHttp2Stream() {\n    // The http2 stream could already have been destroyed if cancelWithStatus\n    // is called in response to an internal http2 error.\n    if (this.http2Stream.destroyed) {\n      return;\n    }\n    /* If the server ended the call, sending an RST_STREAM is redundant, so we\n     * just half close on the client side instead to finish closing the stream.\n     */\n    if (this.serverEndedCall) {\n      this.http2Stream.end();\n    } else {\n      /* If the call has ended with an OK status, communicate that when closing\n       * the stream, partly to avoid a situation in which we detect an error\n       * RST_STREAM as a result after we have the status */\n      let code: number;\n      if (this.finalStatus?.code === Status.OK) {\n        code = http2.constants.NGHTTP2_NO_ERROR;\n      } else {\n        code = http2.constants.NGHTTP2_CANCEL;\n      }\n      this.trace('close http2 stream with code ' + code);\n      this.http2Stream.close(code);\n    }\n  }\n\n  cancelWithStatus(status: Status, details: string): void {\n    this.trace(\n      'cancelWithStatus code: ' + status + ' details: \"' + details + '\"'\n    );\n    this.endCall({ code: status, details, metadata: new Metadata() });\n  }\n\n  getStatus(): StatusObject | null {\n    return this.finalStatus;\n  }\n\n  getPeer(): string {\n    return this.transport.getPeerName();\n  }\n\n  getCallNumber(): number {\n    return this.callId;\n  }\n\n  startRead() {\n    /* If the stream has ended with an error, we should not emit any more\n     * messages and we should communicate that the stream has ended */\n    if (this.finalStatus !== null && this.finalStatus.code !== Status.OK) {\n      this.readsClosed = true;\n      this.maybeOutputStatus();\n      return;\n    }\n    this.canPush = true;\n    if (this.unpushedReadMessages.length > 0) {\n      const nextMessage: Buffer = this.unpushedReadMessages.shift()!;\n      this.push(nextMessage);\n      return;\n    }\n    /* Only resume reading from the http2Stream if we don't have any pending\n     * messages to emit */\n    this.http2Stream.resume();\n  }\n\n  sendMessageWithContext(context: MessageContext, message: Buffer) {\n    this.trace('write() called with message of length ' + message.length);\n    const cb: WriteCallback = (error?: Error | null) => {\n      /* nextTick here ensures that no stream action can be taken in the call\n       * stack of the write callback, in order to hopefully work around\n       * https://github.com/nodejs/node/issues/49147 */\n      process.nextTick(() => {\n        let code: Status = Status.UNAVAILABLE;\n        if (\n          (error as NodeJS.ErrnoException)?.code ===\n          'ERR_STREAM_WRITE_AFTER_END'\n        ) {\n          code = Status.INTERNAL;\n        }\n        if (error) {\n          this.cancelWithStatus(code, `Write error: ${error.message}`);\n        }\n        context.callback?.();\n      });\n    };\n    this.trace('sending data chunk of length ' + message.length);\n    this.callEventTracker.addMessageSent();\n    try {\n      this.http2Stream!.write(message, cb);\n    } catch (error) {\n      this.endCall({\n        code: Status.UNAVAILABLE,\n        details: `Write failed with error ${(error as Error).message}`,\n        metadata: new Metadata(),\n      });\n    }\n  }\n\n  halfClose() {\n    this.trace('end() called');\n    this.trace('calling end() on HTTP/2 stream');\n    this.http2Stream.end();\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nlet nextCallNumber = 0;\n\nexport function getNextCallNumber() {\n  return nextCallNumber++;\n}\n", "/*\n * Copyright 2023 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as http2 from 'http2';\nimport {\n  checkServerIdentity,\n  CipherNameAndProtocol,\n  ConnectionOptions,\n  PeerCertificate,\n  TLSSocket,\n} from 'tls';\nimport { PartialStatusObject } from './call-interface';\nimport { ChannelCredentials } from './channel-credentials';\nimport { ChannelOptions } from './channel-options';\nimport {\n  ChannelzCallTracker,\n  ChannelzCallTrackerStub,\n  registerChannelzSocket,\n  SocketInfo,\n  SocketRef,\n  TlsInfo,\n  unregisterChannelzRef,\n} from './channelz';\nimport { LogVerbosity } from './constants';\nimport { getProxiedConnection, ProxyConnectionResult } from './http_proxy';\nimport * as logging from './logging';\nimport { getDefaultAuthority } from './resolver';\nimport {\n  stringToSubchannelAddress,\n  SubchannelAddress,\n  subchannelAddressToString,\n} from './subchannel-address';\nimport { GrpcUri, parseUri, splitHostPort, uriToString } from './uri-parser';\nimport * as net from 'net';\nimport {\n  Http2SubchannelCall,\n  SubchannelCall,\n  SubchannelCallInterceptingListener,\n} from './subchannel-call';\nimport { Metadata } from './metadata';\nimport { getNextCallNumber } from './call-number';\n\nconst TRACER_NAME = 'transport';\nconst FLOW_CONTROL_TRACER_NAME = 'transport_flowctrl';\n\nconst clientVersion = require('../../package.json').version;\n\nconst {\n  HTTP2_HEADER_AUTHORITY,\n  HTTP2_HEADER_CONTENT_TYPE,\n  HTTP2_HEADER_METHOD,\n  HTTP2_HEADER_PATH,\n  HTTP2_HEADER_TE,\n  HTTP2_HEADER_USER_AGENT,\n} = http2.constants;\n\nconst KEEPALIVE_TIMEOUT_MS = 20000;\n\nexport interface CallEventTracker {\n  addMessageSent(): void;\n  addMessageReceived(): void;\n  onCallEnd(status: PartialStatusObject): void;\n  onStreamEnd(success: boolean): void;\n}\n\nexport interface TransportDisconnectListener {\n  (tooManyPings: boolean): void;\n}\n\nexport interface Transport {\n  getChannelzRef(): SocketRef;\n  getPeerName(): string;\n  getOptions(): ChannelOptions;\n  createCall(\n    metadata: Metadata,\n    host: string,\n    method: string,\n    listener: SubchannelCallInterceptingListener,\n    subchannelCallStatsTracker: Partial<CallEventTracker>\n  ): SubchannelCall;\n  addDisconnectListener(listener: TransportDisconnectListener): void;\n  shutdown(): void;\n}\n\nconst tooManyPingsData: Buffer = Buffer.from('too_many_pings', 'ascii');\n\nclass Http2Transport implements Transport {\n  /**\n   * The amount of time in between sending pings\n   */\n  private readonly keepaliveTimeMs: number;\n  /**\n   * The amount of time to wait for an acknowledgement after sending a ping\n   */\n  private readonly keepaliveTimeoutMs: number;\n  /**\n   * Indicates whether keepalive pings should be sent without any active calls\n   */\n  private readonly keepaliveWithoutCalls: boolean;\n  /**\n   * Timer reference indicating when to send the next ping or when the most recent ping will be considered lost.\n   */\n  private keepaliveTimer: NodeJS.Timeout | null = null;\n  /**\n   * Indicates that the keepalive timer ran out while there were no active\n   * calls, and a ping should be sent the next time a call starts.\n   */\n  private pendingSendKeepalivePing = false;\n\n  private userAgent: string;\n\n  private activeCalls: Set<Http2SubchannelCall> = new Set();\n\n  private subchannelAddressString: string;\n\n  private disconnectListeners: TransportDisconnectListener[] = [];\n\n  private disconnectHandled = false;\n\n  // Channelz info\n  private channelzRef: SocketRef;\n  private readonly channelzEnabled: boolean = true;\n  private streamTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n  private keepalivesSent = 0;\n  private messagesSent = 0;\n  private messagesReceived = 0;\n  private lastMessageSentTimestamp: Date | null = null;\n  private lastMessageReceivedTimestamp: Date | null = null;\n\n  constructor(\n    private session: http2.ClientHttp2Session,\n    subchannelAddress: SubchannelAddress,\n    private options: ChannelOptions,\n    /**\n     * Name of the remote server, if it is not the same as the subchannel\n     * address, i.e. if connecting through an HTTP CONNECT proxy.\n     */\n    private remoteName: string | null\n  ) {\n    /* Populate subchannelAddressString and channelzRef before doing anything\n     * else, because they are used in the trace methods. */\n    this.subchannelAddressString = subchannelAddressToString(subchannelAddress);\n\n    if (options['grpc.enable_channelz'] === 0) {\n      this.channelzEnabled = false;\n      this.streamTracker = new ChannelzCallTrackerStub();\n    } else {\n      this.streamTracker = new ChannelzCallTracker();\n    }\n\n    this.channelzRef = registerChannelzSocket(\n      this.subchannelAddressString,\n      () => this.getChannelzInfo(),\n      this.channelzEnabled\n    );\n\n    // Build user-agent string.\n    this.userAgent = [\n      options['grpc.primary_user_agent'],\n      `grpc-node-js/${clientVersion}`,\n      options['grpc.secondary_user_agent'],\n    ]\n      .filter(e => e)\n      .join(' '); // remove falsey values first\n\n    if ('grpc.keepalive_time_ms' in options) {\n      this.keepaliveTimeMs = options['grpc.keepalive_time_ms']!;\n    } else {\n      this.keepaliveTimeMs = -1;\n    }\n    if ('grpc.keepalive_timeout_ms' in options) {\n      this.keepaliveTimeoutMs = options['grpc.keepalive_timeout_ms']!;\n    } else {\n      this.keepaliveTimeoutMs = KEEPALIVE_TIMEOUT_MS;\n    }\n    if ('grpc.keepalive_permit_without_calls' in options) {\n      this.keepaliveWithoutCalls =\n        options['grpc.keepalive_permit_without_calls'] === 1;\n    } else {\n      this.keepaliveWithoutCalls = false;\n    }\n\n    session.once('close', () => {\n      this.trace('session closed');\n      this.handleDisconnect();\n    });\n\n    session.once(\n      'goaway',\n      (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => {\n        let tooManyPings = false;\n        /* See the last paragraph of\n         * https://github.com/grpc/proposal/blob/master/A8-client-side-keepalive.md#basic-keepalive */\n        if (\n          errorCode === http2.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n          opaqueData &&\n          opaqueData.equals(tooManyPingsData)\n        ) {\n          tooManyPings = true;\n        }\n        this.trace(\n          'connection closed by GOAWAY with code ' +\n            errorCode +\n            ' and data ' +\n            opaqueData?.toString()\n        );\n        this.reportDisconnectToOwner(tooManyPings);\n      }\n    );\n\n    session.once('error', error => {\n      /* Do nothing here. Any error should also trigger a close event, which is\n       * where we want to handle that.  */\n      this.trace('connection closed with error ' + (error as Error).message);\n    });\n\n    if (logging.isTracerEnabled(TRACER_NAME)) {\n      session.on('remoteSettings', (settings: http2.Settings) => {\n        this.trace(\n          'new settings received' +\n            (this.session !== session ? ' on the old connection' : '') +\n            ': ' +\n            JSON.stringify(settings)\n        );\n      });\n      session.on('localSettings', (settings: http2.Settings) => {\n        this.trace(\n          'local settings acknowledged by remote' +\n            (this.session !== session ? ' on the old connection' : '') +\n            ': ' +\n            JSON.stringify(settings)\n        );\n      });\n    }\n\n    /* Start the keepalive timer last, because this can trigger trace logs,\n     * which should only happen after everything else is set up. */\n    if (this.keepaliveWithoutCalls) {\n      this.maybeStartKeepalivePingTimer();\n    }\n  }\n\n  private getChannelzInfo(): SocketInfo {\n    const sessionSocket = this.session.socket;\n    const remoteAddress = sessionSocket.remoteAddress\n      ? stringToSubchannelAddress(\n          sessionSocket.remoteAddress,\n          sessionSocket.remotePort\n        )\n      : null;\n    const localAddress = sessionSocket.localAddress\n      ? stringToSubchannelAddress(\n          sessionSocket.localAddress,\n          sessionSocket.localPort\n        )\n      : null;\n    let tlsInfo: TlsInfo | null;\n    if (this.session.encrypted) {\n      const tlsSocket: TLSSocket = sessionSocket as TLSSocket;\n      const cipherInfo: CipherNameAndProtocol & { standardName?: string } =\n        tlsSocket.getCipher();\n      const certificate = tlsSocket.getCertificate();\n      const peerCertificate = tlsSocket.getPeerCertificate();\n      tlsInfo = {\n        cipherSuiteStandardName: cipherInfo.standardName ?? null,\n        cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n        localCertificate:\n          certificate && 'raw' in certificate ? certificate.raw : null,\n        remoteCertificate:\n          peerCertificate && 'raw' in peerCertificate\n            ? peerCertificate.raw\n            : null,\n      };\n    } else {\n      tlsInfo = null;\n    }\n    const socketInfo: SocketInfo = {\n      remoteAddress: remoteAddress,\n      localAddress: localAddress,\n      security: tlsInfo,\n      remoteName: this.remoteName,\n      streamsStarted: this.streamTracker.callsStarted,\n      streamsSucceeded: this.streamTracker.callsSucceeded,\n      streamsFailed: this.streamTracker.callsFailed,\n      messagesSent: this.messagesSent,\n      messagesReceived: this.messagesReceived,\n      keepAlivesSent: this.keepalivesSent,\n      lastLocalStreamCreatedTimestamp:\n        this.streamTracker.lastCallStartedTimestamp,\n      lastRemoteStreamCreatedTimestamp: null,\n      lastMessageSentTimestamp: this.lastMessageSentTimestamp,\n      lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,\n      localFlowControlWindow: this.session.state.localWindowSize ?? null,\n      remoteFlowControlWindow: this.session.state.remoteWindowSize ?? null,\n    };\n    return socketInfo;\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  private keepaliveTrace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      'keepalive',\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  private flowControlTrace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      FLOW_CONTROL_TRACER_NAME,\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  private internalsTrace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      'transport_internals',\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        this.subchannelAddressString +\n        ' ' +\n        text\n    );\n  }\n\n  /**\n   * Indicate to the owner of this object that this transport should no longer\n   * be used. That happens if the connection drops, or if the server sends a\n   * GOAWAY.\n   * @param tooManyPings If true, this was triggered by a GOAWAY with data\n   * indicating that the session was closed becaues the client sent too many\n   * pings.\n   * @returns\n   */\n  private reportDisconnectToOwner(tooManyPings: boolean) {\n    if (this.disconnectHandled) {\n      return;\n    }\n    this.disconnectHandled = true;\n    this.disconnectListeners.forEach(listener => listener(tooManyPings));\n  }\n\n  /**\n   * Handle connection drops, but not GOAWAYs.\n   */\n  private handleDisconnect() {\n    this.clearKeepaliveTimeout();\n    this.reportDisconnectToOwner(false);\n    /* Give calls an event loop cycle to finish naturally before reporting the\n     * disconnnection to them. */\n    setImmediate(() => {\n      for (const call of this.activeCalls) {\n        call.onDisconnect();\n      }\n      this.session.destroy();\n    });\n  }\n\n  addDisconnectListener(listener: TransportDisconnectListener): void {\n    this.disconnectListeners.push(listener);\n  }\n\n  private canSendPing() {\n    return (\n      !this.session.destroyed &&\n      this.keepaliveTimeMs > 0 &&\n      (this.keepaliveWithoutCalls || this.activeCalls.size > 0)\n    );\n  }\n\n  private maybeSendPing() {\n    if (!this.canSendPing()) {\n      this.pendingSendKeepalivePing = true;\n      return;\n    }\n    if (this.keepaliveTimer) {\n      console.error('keepaliveTimeout is not null');\n      return;\n    }\n    if (this.channelzEnabled) {\n      this.keepalivesSent += 1;\n    }\n    this.keepaliveTrace(\n      'Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms'\n    );\n    this.keepaliveTimer = setTimeout(() => {\n      this.keepaliveTimer = null;\n      this.keepaliveTrace('Ping timeout passed without response');\n      this.handleDisconnect();\n    }, this.keepaliveTimeoutMs);\n    this.keepaliveTimer.unref?.();\n    let pingSendError = '';\n    try {\n      const pingSentSuccessfully = this.session.ping(\n        (err: Error | null, duration: number, payload: Buffer) => {\n          this.clearKeepaliveTimeout();\n          if (err) {\n            this.keepaliveTrace('Ping failed with error ' + err.message);\n            this.handleDisconnect();\n          } else {\n            this.keepaliveTrace('Received ping response');\n            this.maybeStartKeepalivePingTimer();\n          }\n        }\n      );\n      if (!pingSentSuccessfully) {\n        pingSendError = 'Ping returned false';\n      }\n    } catch (e) {\n      // grpc/grpc-node#2139\n      pingSendError = (e instanceof Error ? e.message : '') || 'Unknown error';\n    }\n    if (pingSendError) {\n      this.keepaliveTrace('Ping send failed: ' + pingSendError);\n      this.handleDisconnect();\n    }\n  }\n\n  /**\n   * Starts the keepalive ping timer if appropriate. If the timer already ran\n   * out while there were no active requests, instead send a ping immediately.\n   * If the ping timer is already running or a ping is currently in flight,\n   * instead do nothing and wait for them to resolve.\n   */\n  private maybeStartKeepalivePingTimer() {\n    if (!this.canSendPing()) {\n      return;\n    }\n    if (this.pendingSendKeepalivePing) {\n      this.pendingSendKeepalivePing = false;\n      this.maybeSendPing();\n    } else if (!this.keepaliveTimer) {\n      this.keepaliveTrace(\n        'Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms'\n      );\n      this.keepaliveTimer = setTimeout(() => {\n        this.keepaliveTimer = null;\n        this.maybeSendPing();\n      }, this.keepaliveTimeMs);\n      this.keepaliveTimer.unref?.();\n    }\n    /* Otherwise, there is already either a keepalive timer or a ping pending,\n     * wait for those to resolve. */\n  }\n\n  /**\n   * Clears whichever keepalive timeout is currently active, if any.\n   */\n  private clearKeepaliveTimeout() {\n    if (this.keepaliveTimer) {\n      clearTimeout(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n  }\n\n  private removeActiveCall(call: Http2SubchannelCall) {\n    this.activeCalls.delete(call);\n    if (this.activeCalls.size === 0) {\n      this.session.unref();\n    }\n  }\n\n  private addActiveCall(call: Http2SubchannelCall) {\n    this.activeCalls.add(call);\n    if (this.activeCalls.size === 1) {\n      this.session.ref();\n      if (!this.keepaliveWithoutCalls) {\n        this.maybeStartKeepalivePingTimer();\n      }\n    }\n  }\n\n  createCall(\n    metadata: Metadata,\n    host: string,\n    method: string,\n    listener: SubchannelCallInterceptingListener,\n    subchannelCallStatsTracker: Partial<CallEventTracker>\n  ): Http2SubchannelCall {\n    const headers = metadata.toHttp2Headers();\n    headers[HTTP2_HEADER_AUTHORITY] = host;\n    headers[HTTP2_HEADER_USER_AGENT] = this.userAgent;\n    headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/grpc';\n    headers[HTTP2_HEADER_METHOD] = 'POST';\n    headers[HTTP2_HEADER_PATH] = method;\n    headers[HTTP2_HEADER_TE] = 'trailers';\n    let http2Stream: http2.ClientHttp2Stream;\n    /* In theory, if an error is thrown by session.request because session has\n     * become unusable (e.g. because it has received a goaway), this subchannel\n     * should soon see the corresponding close or goaway event anyway and leave\n     * READY. But we have seen reports that this does not happen\n     * (https://github.com/googleapis/nodejs-firestore/issues/1023#issuecomment-653204096)\n     * so for defense in depth, we just discard the session when we see an\n     * error here.\n     */\n    try {\n      http2Stream = this.session.request(headers);\n    } catch (e) {\n      this.handleDisconnect();\n      throw e;\n    }\n    this.flowControlTrace(\n      'local window size: ' +\n        this.session.state.localWindowSize +\n        ' remote window size: ' +\n        this.session.state.remoteWindowSize\n    );\n    this.internalsTrace(\n      'session.closed=' +\n        this.session.closed +\n        ' session.destroyed=' +\n        this.session.destroyed +\n        ' session.socket.destroyed=' +\n        this.session.socket.destroyed\n    );\n    let eventTracker: CallEventTracker;\n    // eslint-disable-next-line prefer-const\n    let call: Http2SubchannelCall;\n    if (this.channelzEnabled) {\n      this.streamTracker.addCallStarted();\n      eventTracker = {\n        addMessageSent: () => {\n          this.messagesSent += 1;\n          this.lastMessageSentTimestamp = new Date();\n          subchannelCallStatsTracker.addMessageSent?.();\n        },\n        addMessageReceived: () => {\n          this.messagesReceived += 1;\n          this.lastMessageReceivedTimestamp = new Date();\n          subchannelCallStatsTracker.addMessageReceived?.();\n        },\n        onCallEnd: status => {\n          subchannelCallStatsTracker.onCallEnd?.(status);\n          this.removeActiveCall(call);\n        },\n        onStreamEnd: success => {\n          if (success) {\n            this.streamTracker.addCallSucceeded();\n          } else {\n            this.streamTracker.addCallFailed();\n          }\n          subchannelCallStatsTracker.onStreamEnd?.(success);\n        },\n      };\n    } else {\n      eventTracker = {\n        addMessageSent: () => {\n          subchannelCallStatsTracker.addMessageSent?.();\n        },\n        addMessageReceived: () => {\n          subchannelCallStatsTracker.addMessageReceived?.();\n        },\n        onCallEnd: status => {\n          subchannelCallStatsTracker.onCallEnd?.(status);\n          this.removeActiveCall(call);\n        },\n        onStreamEnd: success => {\n          subchannelCallStatsTracker.onStreamEnd?.(success);\n        },\n      };\n    }\n    call = new Http2SubchannelCall(\n      http2Stream,\n      eventTracker,\n      listener,\n      this,\n      getNextCallNumber()\n    );\n    this.addActiveCall(call);\n    return call;\n  }\n\n  getChannelzRef(): SocketRef {\n    return this.channelzRef;\n  }\n\n  getPeerName() {\n    return this.subchannelAddressString;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  shutdown() {\n    this.session.close();\n    unregisterChannelzRef(this.channelzRef);\n  }\n}\n\nexport interface SubchannelConnector {\n  connect(\n    address: SubchannelAddress,\n    credentials: ChannelCredentials,\n    options: ChannelOptions\n  ): Promise<Transport>;\n  shutdown(): void;\n}\n\nexport class Http2SubchannelConnector implements SubchannelConnector {\n  private session: http2.ClientHttp2Session | null = null;\n  private isShutdown = false;\n  constructor(private channelTarget: GrpcUri) {}\n\n  private trace(text: string) {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      uriToString(this.channelTarget) + ' ' + text\n    );\n  }\n\n  private createSession(\n    address: SubchannelAddress,\n    credentials: ChannelCredentials,\n    options: ChannelOptions,\n    proxyConnectionResult: ProxyConnectionResult\n  ): Promise<Http2Transport> {\n    if (this.isShutdown) {\n      return Promise.reject();\n    }\n\n    return new Promise<Http2Transport>((resolve, reject) => {\n      let remoteName: string | null;\n      if (proxyConnectionResult.realTarget) {\n        remoteName = uriToString(proxyConnectionResult.realTarget);\n        this.trace(\n          'creating HTTP/2 session through proxy to ' +\n            uriToString(proxyConnectionResult.realTarget)\n        );\n      } else {\n        remoteName = null;\n        this.trace(\n          'creating HTTP/2 session to ' + subchannelAddressToString(address)\n        );\n      }\n      const targetAuthority = getDefaultAuthority(\n        proxyConnectionResult.realTarget ?? this.channelTarget\n      );\n      let connectionOptions: http2.SecureClientSessionOptions =\n        credentials._getConnectionOptions() || {};\n      connectionOptions.maxSendHeaderBlockLength = Number.MAX_SAFE_INTEGER;\n      if ('grpc-node.max_session_memory' in options) {\n        connectionOptions.maxSessionMemory =\n          options['grpc-node.max_session_memory'];\n      } else {\n        /* By default, set a very large max session memory limit, to effectively\n         * disable enforcement of the limit. Some testing indicates that Node's\n         * behavior degrades badly when this limit is reached, so we solve that\n         * by disabling the check entirely. */\n        connectionOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n      }\n      let addressScheme = 'http://';\n      if ('secureContext' in connectionOptions) {\n        addressScheme = 'https://';\n        // If provided, the value of grpc.ssl_target_name_override should be used\n        // to override the target hostname when checking server identity.\n        // This option is used for testing only.\n        if (options['grpc.ssl_target_name_override']) {\n          const sslTargetNameOverride =\n            options['grpc.ssl_target_name_override']!;\n          const originalCheckServerIdentity =\n            connectionOptions.checkServerIdentity ?? checkServerIdentity;\n          connectionOptions.checkServerIdentity = (\n            host: string,\n            cert: PeerCertificate\n          ): Error | undefined => {\n            return originalCheckServerIdentity(sslTargetNameOverride, cert);\n          };\n          connectionOptions.servername = sslTargetNameOverride;\n        } else {\n          const authorityHostname =\n            splitHostPort(targetAuthority)?.host ?? 'localhost';\n          // We want to always set servername to support SNI\n          connectionOptions.servername = authorityHostname;\n        }\n        if (proxyConnectionResult.socket) {\n          /* This is part of the workaround for\n           * https://github.com/nodejs/node/issues/32922. Without that bug,\n           * proxyConnectionResult.socket would always be a plaintext socket and\n           * this would say\n           * connectionOptions.socket = proxyConnectionResult.socket; */\n          connectionOptions.createConnection = (authority, option) => {\n            return proxyConnectionResult.socket!;\n          };\n        }\n      } else {\n        /* In all but the most recent versions of Node, http2.connect does not use\n         * the options when establishing plaintext connections, so we need to\n         * establish that connection explicitly. */\n        connectionOptions.createConnection = (authority, option) => {\n          if (proxyConnectionResult.socket) {\n            return proxyConnectionResult.socket;\n          } else {\n            /* net.NetConnectOpts is declared in a way that is more restrictive\n             * than what net.connect will actually accept, so we use the type\n             * assertion to work around that. */\n            return net.connect(address);\n          }\n        };\n      }\n\n      connectionOptions = {\n        ...connectionOptions,\n        ...address,\n        enableTrace: options['grpc-node.tls_enable_trace'] === 1,\n      };\n\n      /* http2.connect uses the options here:\n       * https://github.com/nodejs/node/blob/70c32a6d190e2b5d7b9ff9d5b6a459d14e8b7d59/lib/internal/http2/core.js#L3028-L3036\n       * The spread operator overides earlier values with later ones, so any port\n       * or host values in the options will be used rather than any values extracted\n       * from the first argument. In addition, the path overrides the host and port,\n       * as documented for plaintext connections here:\n       * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener\n       * and for TLS connections here:\n       * https://nodejs.org/api/tls.html#tls_tls_connect_options_callback. In\n       * earlier versions of Node, http2.connect passes these options to\n       * tls.connect but not net.connect, so in the insecure case we still need\n       * to set the createConnection option above to create the connection\n       * explicitly. We cannot do that in the TLS case because http2.connect\n       * passes necessary additional options to tls.connect.\n       * The first argument just needs to be parseable as a URL and the scheme\n       * determines whether the connection will be established over TLS or not.\n       */\n      const session = http2.connect(\n        addressScheme + targetAuthority,\n        connectionOptions\n      );\n      this.session = session;\n      let errorMessage = 'Failed to connect';\n      session.unref();\n      session.once('connect', () => {\n        session.removeAllListeners();\n        resolve(new Http2Transport(session, address, options, remoteName));\n        this.session = null;\n      });\n      session.once('close', () => {\n        this.session = null;\n        // Leave time for error event to happen before rejecting\n        setImmediate(() => {\n          reject(`${errorMessage} (${new Date().toISOString()})`);\n        });\n      });\n      session.once('error', error => {\n        errorMessage = (error as Error).message;\n        this.trace('connection failed with error ' + errorMessage);\n      });\n    });\n  }\n\n  connect(\n    address: SubchannelAddress,\n    credentials: ChannelCredentials,\n    options: ChannelOptions\n  ): Promise<Http2Transport> {\n    if (this.isShutdown) {\n      return Promise.reject();\n    }\n    /* Pass connection options through to the proxy so that it's able to\n     * upgrade it's connection to support tls if needed.\n     * This is a workaround for https://github.com/nodejs/node/issues/32922\n     * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n    const connectionOptions: ConnectionOptions =\n      credentials._getConnectionOptions() || {};\n\n    if ('secureContext' in connectionOptions) {\n      connectionOptions.ALPNProtocols = ['h2'];\n      // If provided, the value of grpc.ssl_target_name_override should be used\n      // to override the target hostname when checking server identity.\n      // This option is used for testing only.\n      if (options['grpc.ssl_target_name_override']) {\n        const sslTargetNameOverride = options['grpc.ssl_target_name_override']!;\n        const originalCheckServerIdentity =\n          connectionOptions.checkServerIdentity ?? checkServerIdentity;\n        connectionOptions.checkServerIdentity = (\n          host: string,\n          cert: PeerCertificate\n        ): Error | undefined => {\n          return originalCheckServerIdentity(sslTargetNameOverride, cert);\n        };\n        connectionOptions.servername = sslTargetNameOverride;\n      } else {\n        if ('grpc.http_connect_target' in options) {\n          /* This is more or less how servername will be set in createSession\n           * if a connection is successfully established through the proxy.\n           * If the proxy is not used, these connectionOptions are discarded\n           * anyway */\n          const targetPath = getDefaultAuthority(\n            parseUri(options['grpc.http_connect_target'] as string) ?? {\n              path: 'localhost',\n            }\n          );\n          const hostPort = splitHostPort(targetPath);\n          connectionOptions.servername = hostPort?.host ?? targetPath;\n        }\n      }\n      if (options['grpc-node.tls_enable_trace']) {\n        connectionOptions.enableTrace = true;\n      }\n    }\n\n    return getProxiedConnection(address, options, connectionOptions).then(\n      result => this.createSession(address, credentials, options, result)\n    );\n  }\n\n  shutdown(): void {\n    this.isShutdown = true;\n    this.session?.close();\n    this.session = null;\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelOptions, channelOptionsEqual } from './channel-options';\nimport { Subchannel } from './subchannel';\nimport {\n  SubchannelAddress,\n  subchannelAddressEqual,\n} from './subchannel-address';\nimport { ChannelCredentials } from './channel-credentials';\nimport { GrpcUri, uriToString } from './uri-parser';\nimport { Http2SubchannelConnector } from './transport';\n\n// 10 seconds in milliseconds. This value is arbitrary.\n/**\n * The amount of time in between checks for dropping subchannels that have no\n * other references\n */\nconst REF_CHECK_INTERVAL = 10_000;\n\nexport class SubchannelPool {\n  private pool: {\n    [channelTarget: string]: Array<{\n      subchannelAddress: SubchannelAddress;\n      channelArguments: ChannelOptions;\n      channelCredentials: ChannelCredentials;\n      subchannel: Subchannel;\n    }>;\n  } = Object.create(null);\n\n  /**\n   * A timer of a task performing a periodic subchannel cleanup.\n   */\n  private cleanupTimer: NodeJS.Timeout | null = null;\n\n  /**\n   * A pool of subchannels use for making connections. Subchannels with the\n   * exact same parameters will be reused.\n   */\n  constructor() {}\n\n  /**\n   * Unrefs all unused subchannels and cancels the cleanup task if all\n   * subchannels have been unrefed.\n   */\n  unrefUnusedSubchannels(): void {\n    let allSubchannelsUnrefed = true;\n\n    /* These objects are created with Object.create(null), so they do not\n     * have a prototype, which means that for (... in ...) loops over them\n     * do not need to be filtered */\n    // eslint-disable-disable-next-line:forin\n    for (const channelTarget in this.pool) {\n      const subchannelObjArray = this.pool[channelTarget];\n\n      const refedSubchannels = subchannelObjArray.filter(\n        value => !value.subchannel.unrefIfOneRef()\n      );\n\n      if (refedSubchannels.length > 0) {\n        allSubchannelsUnrefed = false;\n      }\n\n      /* For each subchannel in the pool, try to unref it if it has\n       * exactly one ref (which is the ref from the pool itself). If that\n       * does happen, remove the subchannel from the pool */\n      this.pool[channelTarget] = refedSubchannels;\n    }\n    /* Currently we do not delete keys with empty values. If that results\n     * in significant memory usage we should change it. */\n\n    // Cancel the cleanup task if all subchannels have been unrefed.\n    if (allSubchannelsUnrefed && this.cleanupTimer !== null) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = null;\n    }\n  }\n\n  /**\n   * Ensures that the cleanup task is spawned.\n   */\n  ensureCleanupTask(): void {\n    if (this.cleanupTimer === null) {\n      this.cleanupTimer = setInterval(() => {\n        this.unrefUnusedSubchannels();\n      }, REF_CHECK_INTERVAL);\n\n      // Unref because this timer should not keep the event loop running.\n      // Call unref only if it exists to address electron/electron#21162\n      this.cleanupTimer.unref?.();\n    }\n  }\n\n  /**\n   * Get a subchannel if one already exists with exactly matching parameters.\n   * Otherwise, create and save a subchannel with those parameters.\n   * @param channelTarget\n   * @param subchannelTarget\n   * @param channelArguments\n   * @param channelCredentials\n   */\n  getOrCreateSubchannel(\n    channelTargetUri: GrpcUri,\n    subchannelTarget: SubchannelAddress,\n    channelArguments: ChannelOptions,\n    channelCredentials: ChannelCredentials\n  ): Subchannel {\n    this.ensureCleanupTask();\n    const channelTarget = uriToString(channelTargetUri);\n    if (channelTarget in this.pool) {\n      const subchannelObjArray = this.pool[channelTarget];\n      for (const subchannelObj of subchannelObjArray) {\n        if (\n          subchannelAddressEqual(\n            subchannelTarget,\n            subchannelObj.subchannelAddress\n          ) &&\n          channelOptionsEqual(\n            channelArguments,\n            subchannelObj.channelArguments\n          ) &&\n          channelCredentials._equals(subchannelObj.channelCredentials)\n        ) {\n          return subchannelObj.subchannel;\n        }\n      }\n    }\n    // If we get here, no matching subchannel was found\n    const subchannel = new Subchannel(\n      channelTargetUri,\n      subchannelTarget,\n      channelArguments,\n      channelCredentials,\n      new Http2SubchannelConnector(channelTargetUri)\n    );\n    if (!(channelTarget in this.pool)) {\n      this.pool[channelTarget] = [];\n    }\n    this.pool[channelTarget].push({\n      subchannelAddress: subchannelTarget,\n      channelArguments,\n      channelCredentials,\n      subchannel,\n    });\n    subchannel.ref();\n    return subchannel;\n  }\n}\n\nconst globalSubchannelPool = new SubchannelPool();\n\n/**\n * Get either the global subchannel pool, or a new subchannel pool.\n * @param global\n */\nexport function getSubchannelPool(global: boolean): SubchannelPool {\n  if (global) {\n    return globalSubchannelPool;\n  } else {\n    return new SubchannelPool();\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject, WriteObject } from './call-interface';\nimport { Filter, FilterFactory } from './filter';\nimport { Metadata } from './metadata';\n\nexport class FilterStack implements Filter {\n  constructor(private readonly filters: Filter[]) {}\n\n  sendMetadata(metadata: Promise<Metadata>): Promise<Metadata> {\n    let result: Promise<Metadata> = metadata;\n\n    for (let i = 0; i < this.filters.length; i++) {\n      result = this.filters[i].sendMetadata(result);\n    }\n\n    return result;\n  }\n\n  receiveMetadata(metadata: Metadata) {\n    let result: Metadata = metadata;\n\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveMetadata(result);\n    }\n\n    return result;\n  }\n\n  sendMessage(message: Promise<WriteObject>): Promise<WriteObject> {\n    let result: Promise<WriteObject> = message;\n\n    for (let i = 0; i < this.filters.length; i++) {\n      result = this.filters[i].sendMessage(result);\n    }\n\n    return result;\n  }\n\n  receiveMessage(message: Promise<Buffer>): Promise<Buffer> {\n    let result: Promise<Buffer> = message;\n\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveMessage(result);\n    }\n\n    return result;\n  }\n\n  receiveTrailers(status: StatusObject): StatusObject {\n    let result: StatusObject = status;\n\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveTrailers(result);\n    }\n\n    return result;\n  }\n\n  push(filters: Filter[]) {\n    this.filters.unshift(...filters);\n  }\n\n  getFilters(): Filter[] {\n    return this.filters;\n  }\n}\n\nexport class FilterStackFactory implements FilterFactory<FilterStack> {\n  constructor(private readonly factories: Array<FilterFactory<Filter>>) {}\n\n  push(filterFactories: FilterFactory<Filter>[]) {\n    this.factories.unshift(...filterFactories);\n  }\n\n  clone(): FilterStackFactory {\n    return new FilterStackFactory([...this.factories]);\n  }\n\n  createFilter(): FilterStack {\n    return new FilterStack(\n      this.factories.map(factory => factory.createFilter())\n    );\n  }\n}\n", "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum CompressionAlgorithms {\n  identity = 0,\n  deflate = 1,\n  gzip = 2,\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject, WriteObject } from './call-interface';\nimport { Metadata } from './metadata';\n\n/**\n * Filter classes represent related per-call logic and state that is primarily\n * used to modify incoming and outgoing data. All async filters can be\n * rejected. The rejection error must be a StatusObject, and a rejection will\n * cause the call to end with that status.\n */\nexport interface Filter {\n  sendMetadata(metadata: Promise<Metadata>): Promise<Metadata>;\n\n  receiveMetadata(metadata: Metadata): Metadata;\n\n  sendMessage(message: Promise<WriteObject>): Promise<WriteObject>;\n\n  receiveMessage(message: Promise<Buffer>): Promise<Buffer>;\n\n  receiveTrailers(status: StatusObject): StatusObject;\n}\n\nexport abstract class BaseFilter implements Filter {\n  async sendMetadata(metadata: Promise<Metadata>): Promise<Metadata> {\n    return metadata;\n  }\n\n  receiveMetadata(metadata: Metadata): Metadata {\n    return metadata;\n  }\n\n  async sendMessage(message: Promise<WriteObject>): Promise<WriteObject> {\n    return message;\n  }\n\n  async receiveMessage(message: Promise<Buffer>): Promise<Buffer> {\n    return message;\n  }\n\n  receiveTrailers(status: StatusObject): StatusObject {\n    return status;\n  }\n}\n\nexport interface FilterFactory<T extends Filter> {\n  createFilter(): T;\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as zlib from 'zlib';\n\nimport { WriteObject, WriteFlags } from './call-interface';\nimport { Channel } from './channel';\nimport { ChannelOptions } from './channel-options';\nimport { CompressionAlgorithms } from './compression-algorithms';\nimport { DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH, DEFAULT_MAX_SEND_MESSAGE_LENGTH, LogVerbosity, Status } from './constants';\nimport { BaseFilter, Filter, FilterFactory } from './filter';\nimport * as logging from './logging';\nimport { Metadata, MetadataValue } from './metadata';\n\nconst isCompressionAlgorithmKey = (\n  key: number\n): key is CompressionAlgorithms => {\n  return (\n    typeof key === 'number' && typeof CompressionAlgorithms[key] === 'string'\n  );\n};\n\ntype CompressionAlgorithm = keyof typeof CompressionAlgorithms;\n\ntype SharedCompressionFilterConfig = {\n  serverSupportedEncodingHeader?: string;\n};\n\nabstract class CompressionHandler {\n  protected abstract compressMessage(message: Buffer): Promise<Buffer>;\n  protected abstract decompressMessage(data: Buffer): Promise<Buffer>;\n  /**\n   * @param message Raw uncompressed message bytes\n   * @param compress Indicates whether the message should be compressed\n   * @return Framed message, compressed if applicable\n   */\n  async writeMessage(message: Buffer, compress: boolean): Promise<Buffer> {\n    let messageBuffer = message;\n    if (compress) {\n      messageBuffer = await this.compressMessage(messageBuffer);\n    }\n    const output = Buffer.allocUnsafe(messageBuffer.length + 5);\n    output.writeUInt8(compress ? 1 : 0, 0);\n    output.writeUInt32BE(messageBuffer.length, 1);\n    messageBuffer.copy(output, 5);\n    return output;\n  }\n  /**\n   * @param data Framed message, possibly compressed\n   * @return Uncompressed message\n   */\n  async readMessage(data: Buffer): Promise<Buffer> {\n    const compressed = data.readUInt8(0) === 1;\n    let messageBuffer = data.slice(5);\n    if (compressed) {\n      messageBuffer = await this.decompressMessage(messageBuffer);\n    }\n    return messageBuffer;\n  }\n}\n\nclass IdentityHandler extends CompressionHandler {\n  async compressMessage(message: Buffer) {\n    return message;\n  }\n\n  async writeMessage(message: Buffer, compress: boolean): Promise<Buffer> {\n    const output = Buffer.allocUnsafe(message.length + 5);\n    /* With \"identity\" compression, messages should always be marked as\n     * uncompressed */\n    output.writeUInt8(0, 0);\n    output.writeUInt32BE(message.length, 1);\n    message.copy(output, 5);\n    return output;\n  }\n\n  decompressMessage(message: Buffer): Promise<Buffer> {\n    return Promise.reject<Buffer>(\n      new Error(\n        'Received compressed message but \"grpc-encoding\" header was identity'\n      )\n    );\n  }\n}\n\nclass DeflateHandler extends CompressionHandler {\n  constructor(private maxRecvMessageLength: number) {\n    super();\n  }\n\n  compressMessage(message: Buffer) {\n    return new Promise<Buffer>((resolve, reject) => {\n      zlib.deflate(message, (err, output) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(output);\n        }\n      });\n    });\n  }\n\n  decompressMessage(message: Buffer) {\n    return new Promise<Buffer>((resolve, reject) => {\n      let totalLength = 0;\n      const messageParts: Buffer[] = [];\n      const decompresser = zlib.createInflate();\n      decompresser.on('data', (chunk: Buffer) => {\n        messageParts.push(chunk);\n        totalLength += chunk.byteLength;\n        if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n          decompresser.destroy();\n          reject({\n            code: Status.RESOURCE_EXHAUSTED,\n            details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n          });\n        }\n      });\n      decompresser.on('end', () => {\n        resolve(Buffer.concat(messageParts));\n      });\n      decompresser.write(message);\n      decompresser.end();\n    });\n  }\n}\n\nclass GzipHandler extends CompressionHandler {\n  constructor(private maxRecvMessageLength: number) {\n    super();\n  }\n\n  compressMessage(message: Buffer) {\n    return new Promise<Buffer>((resolve, reject) => {\n      zlib.gzip(message, (err, output) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(output);\n        }\n      });\n    });\n  }\n\n  decompressMessage(message: Buffer) {\n    return new Promise<Buffer>((resolve, reject) => {\n      let totalLength = 0;\n      const messageParts: Buffer[] = [];\n      const decompresser = zlib.createGunzip();\n      decompresser.on('data', (chunk: Buffer) => {\n        messageParts.push(chunk);\n        totalLength += chunk.byteLength;\n        if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n          decompresser.destroy();\n          reject({\n            code: Status.RESOURCE_EXHAUSTED,\n            details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n          });\n        }\n      });\n      decompresser.on('end', () => {\n        resolve(Buffer.concat(messageParts));\n      });\n      decompresser.write(message);\n      decompresser.end();\n    });\n  }\n}\n\nclass UnknownHandler extends CompressionHandler {\n  constructor(private readonly compressionName: string) {\n    super();\n  }\n  compressMessage(message: Buffer): Promise<Buffer> {\n    return Promise.reject<Buffer>(\n      new Error(\n        `Received message compressed with unsupported compression method ${this.compressionName}`\n      )\n    );\n  }\n\n  decompressMessage(message: Buffer): Promise<Buffer> {\n    // This should be unreachable\n    return Promise.reject<Buffer>(\n      new Error(`Compression method not supported: ${this.compressionName}`)\n    );\n  }\n}\n\nfunction getCompressionHandler(compressionName: string, maxReceiveMessageSize: number): CompressionHandler {\n  switch (compressionName) {\n    case 'identity':\n      return new IdentityHandler();\n    case 'deflate':\n      return new DeflateHandler(maxReceiveMessageSize);\n    case 'gzip':\n      return new GzipHandler(maxReceiveMessageSize);\n    default:\n      return new UnknownHandler(compressionName);\n  }\n}\n\nexport class CompressionFilter extends BaseFilter implements Filter {\n  private sendCompression: CompressionHandler = new IdentityHandler();\n  private receiveCompression: CompressionHandler = new IdentityHandler();\n  private currentCompressionAlgorithm: CompressionAlgorithm = 'identity';\n  private maxReceiveMessageLength: number;\n  private maxSendMessageLength: number;\n\n  constructor(\n    channelOptions: ChannelOptions,\n    private sharedFilterConfig: SharedCompressionFilterConfig\n  ) {\n    super();\n\n    const compressionAlgorithmKey =\n      channelOptions['grpc.default_compression_algorithm'];\n    this.maxReceiveMessageLength = channelOptions['grpc.max_receive_message_length'] ?? DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n    this.maxSendMessageLength = channelOptions['grpc.max_send_message_length'] ?? DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n    if (compressionAlgorithmKey !== undefined) {\n      if (isCompressionAlgorithmKey(compressionAlgorithmKey)) {\n        const clientSelectedEncoding = CompressionAlgorithms[\n          compressionAlgorithmKey\n        ] as CompressionAlgorithm;\n        const serverSupportedEncodings =\n          sharedFilterConfig.serverSupportedEncodingHeader?.split(',');\n        /**\n         * There are two possible situations here:\n         * 1) We don't have any info yet from the server about what compression it supports\n         *    In that case we should just use what the client tells us to use\n         * 2) We've previously received a response from the server including a grpc-accept-encoding header\n         *    In that case we only want to use the encoding chosen by the client if the server supports it\n         */\n        if (\n          !serverSupportedEncodings ||\n          serverSupportedEncodings.includes(clientSelectedEncoding)\n        ) {\n          this.currentCompressionAlgorithm = clientSelectedEncoding;\n          this.sendCompression = getCompressionHandler(\n            this.currentCompressionAlgorithm,\n            -1\n          );\n        }\n      } else {\n        logging.log(\n          LogVerbosity.ERROR,\n          `Invalid value provided for grpc.default_compression_algorithm option: ${compressionAlgorithmKey}`\n        );\n      }\n    }\n  }\n\n  async sendMetadata(metadata: Promise<Metadata>): Promise<Metadata> {\n    const headers: Metadata = await metadata;\n    headers.set('grpc-accept-encoding', 'identity,deflate,gzip');\n    headers.set('accept-encoding', 'identity');\n\n    // No need to send the header if it's \"identity\" -  behavior is identical; save the bandwidth\n    if (this.currentCompressionAlgorithm === 'identity') {\n      headers.remove('grpc-encoding');\n    } else {\n      headers.set('grpc-encoding', this.currentCompressionAlgorithm);\n    }\n\n    return headers;\n  }\n\n  receiveMetadata(metadata: Metadata): Metadata {\n    const receiveEncoding: MetadataValue[] = metadata.get('grpc-encoding');\n    if (receiveEncoding.length > 0) {\n      const encoding: MetadataValue = receiveEncoding[0];\n      if (typeof encoding === 'string') {\n        this.receiveCompression = getCompressionHandler(encoding, this.maxReceiveMessageLength);\n      }\n    }\n    metadata.remove('grpc-encoding');\n\n    /* Check to see if the compression we're using to send messages is supported by the server\n     * If not, reset the sendCompression filter and have it use the default IdentityHandler */\n    const serverSupportedEncodingsHeader = metadata.get(\n      'grpc-accept-encoding'\n    )[0] as string | undefined;\n    if (serverSupportedEncodingsHeader) {\n      this.sharedFilterConfig.serverSupportedEncodingHeader =\n        serverSupportedEncodingsHeader;\n      const serverSupportedEncodings =\n        serverSupportedEncodingsHeader.split(',');\n\n      if (\n        !serverSupportedEncodings.includes(this.currentCompressionAlgorithm)\n      ) {\n        this.sendCompression = new IdentityHandler();\n        this.currentCompressionAlgorithm = 'identity';\n      }\n    }\n    metadata.remove('grpc-accept-encoding');\n    return metadata;\n  }\n\n  async sendMessage(message: Promise<WriteObject>): Promise<WriteObject> {\n    /* This filter is special. The input message is the bare message bytes,\n     * and the output is a framed and possibly compressed message. For this\n     * reason, this filter should be at the bottom of the filter stack */\n    const resolvedMessage: WriteObject = await message;\n    if (this.maxSendMessageLength !== -1 && resolvedMessage.message.length > this.maxSendMessageLength) {\n      throw {\n        code: Status.RESOURCE_EXHAUSTED,\n        details: `Attempted to send message with a size larger than ${this.maxSendMessageLength}`\n      };\n    }\n    let compress: boolean;\n    if (this.sendCompression instanceof IdentityHandler) {\n      compress = false;\n    } else {\n      compress = ((resolvedMessage.flags ?? 0) & WriteFlags.NoCompress) === 0;\n    }\n\n    return {\n      message: await this.sendCompression.writeMessage(\n        resolvedMessage.message,\n        compress\n      ),\n      flags: resolvedMessage.flags,\n    };\n  }\n\n  async receiveMessage(message: Promise<Buffer>) {\n    /* This filter is also special. The input message is framed and possibly\n     * compressed, and the output message is deframed and uncompressed. So\n     * this is another reason that this filter should be at the bottom of the\n     * filter stack. */\n    return this.receiveCompression.readMessage(await message);\n  }\n}\n\nexport class CompressionFilterFactory\n  implements FilterFactory<CompressionFilter>\n{\n  private sharedFilterConfig: SharedCompressionFilterConfig = {};\n  constructor(channel: Channel, private readonly options: ChannelOptions) {}\n  createFilter(): CompressionFilter {\n    return new CompressionFilter(this.options, this.sharedFilterConfig);\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport type Deadline = Date | number;\n\nexport function minDeadline(...deadlineList: Deadline[]): Deadline {\n  let minValue = Infinity;\n  for (const deadline of deadlineList) {\n    const deadlineMsecs =\n      deadline instanceof Date ? deadline.getTime() : deadline;\n    if (deadlineMsecs < minValue) {\n      minValue = deadlineMsecs;\n    }\n  }\n  return minValue;\n}\n\nconst units: Array<[string, number]> = [\n  ['m', 1],\n  ['S', 1000],\n  ['M', 60 * 1000],\n  ['H', 60 * 60 * 1000],\n];\n\nexport function getDeadlineTimeoutString(deadline: Deadline) {\n  const now = new Date().getTime();\n  if (deadline instanceof Date) {\n    deadline = deadline.getTime();\n  }\n  const timeoutMs = Math.max(deadline - now, 0);\n  for (const [unit, factor] of units) {\n    const amount = timeoutMs / factor;\n    if (amount < 1e8) {\n      return String(Math.ceil(amount)) + unit;\n    }\n  }\n  throw new Error('Deadline is too far in the future');\n}\n\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nexport function getRelativeTimeout(deadline: Deadline) {\n  const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n  const now = new Date().getTime();\n  const timeout = deadlineMs - now;\n  if (timeout < 0) {\n    return 0;\n  } else if (timeout > MAX_TIMEOUT_TIME) {\n    return Infinity;\n  } else {\n    return timeout;\n  }\n}\n\nexport function deadlineToString(deadline: Deadline): string {\n  if (deadline instanceof Date) {\n    return deadline.toISOString();\n  } else {\n    const dateDeadline = new Date(deadline);\n    if (Number.isNaN(dateDeadline.getTime())) {\n      return '' + deadline;\n    } else {\n      return dateDeadline.toISOString();\n    }\n  }\n}\n\n/**\n * Calculate the difference between two dates as a number of seconds and format\n * it as a string.\n * @param startDate\n * @param endDate\n * @returns\n */\nexport function formatDateDifference(startDate: Date, endDate: Date): string {\n  return ((endDate.getTime() - startDate.getTime()) / 1000).toFixed(3) + 's';\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Status } from './constants';\n\nconst INAPPROPRIATE_CONTROL_PLANE_CODES: Status[] = [\n  Status.OK,\n  Status.INVALID_ARGUMENT,\n  Status.NOT_FOUND,\n  Status.ALREADY_EXISTS,\n  Status.FAILED_PRECONDITION,\n  Status.ABORTED,\n  Status.OUT_OF_RANGE,\n  Status.DATA_LOSS,\n];\n\nexport function restrictControlPlaneStatusCode(\n  code: Status,\n  details: string\n): { code: Status; details: string } {\n  if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n    return {\n      code: Status.INTERNAL,\n      details: `Invalid status from control plane: ${code} ${Status[code]} ${details}`,\n    };\n  } else {\n    return { code, details };\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CallCredentials } from './call-credentials';\nimport {\n  Call,\n  DeadlineInfoProvider,\n  InterceptingListener,\n  MessageContext,\n  StatusObject,\n} from './call-interface';\nimport { SubchannelCall } from './subchannel-call';\nimport { ConnectivityState } from './connectivity-state';\nimport { LogVerbosity, Status } from './constants';\nimport { Deadline, formatDateDifference, getDeadlineTimeoutString } from './deadline';\nimport { InternalChannel } from './internal-channel';\nimport { Metadata } from './metadata';\nimport { PickResultType } from './picker';\nimport { CallConfig } from './resolver';\nimport { splitHostPort } from './uri-parser';\nimport * as logging from './logging';\nimport { restrictControlPlaneStatusCode } from './control-plane-status';\nimport * as http2 from 'http2';\n\nconst TRACER_NAME = 'load_balancing_call';\n\nexport type RpcProgress = 'NOT_STARTED' | 'DROP' | 'REFUSED' | 'PROCESSED';\n\nexport interface StatusObjectWithProgress extends StatusObject {\n  progress: RpcProgress;\n}\n\nexport interface LoadBalancingCallInterceptingListener\n  extends InterceptingListener {\n  onReceiveStatus(status: StatusObjectWithProgress): void;\n}\n\nexport class LoadBalancingCall implements Call, DeadlineInfoProvider {\n  private child: SubchannelCall | null = null;\n  private readPending = false;\n  private pendingMessage: { context: MessageContext; message: Buffer } | null =\n    null;\n  private pendingHalfClose = false;\n  private ended = false;\n  private serviceUrl: string;\n  private metadata: Metadata | null = null;\n  private listener: InterceptingListener | null = null;\n  private onCallEnded: ((statusCode: Status) => void) | null = null;\n  private startTime: Date;\n  private childStartTime: Date | null = null;\n  constructor(\n    private readonly channel: InternalChannel,\n    private readonly callConfig: CallConfig,\n    private readonly methodName: string,\n    private readonly host: string,\n    private readonly credentials: CallCredentials,\n    private readonly deadline: Deadline,\n    private readonly callNumber: number\n  ) {\n    const splitPath: string[] = this.methodName.split('/');\n    let serviceName = '';\n    /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n     * by '/', the first item should be empty and the second should be the\n     * service name */\n    if (splitPath.length >= 2) {\n      serviceName = splitPath[1];\n    }\n    const hostname = splitHostPort(this.host)?.host ?? 'localhost';\n    /* Currently, call credentials are only allowed on HTTPS connections, so we\n     * can assume that the scheme is \"https\" */\n    this.serviceUrl = `https://${hostname}/${serviceName}`;\n    this.startTime = new Date();\n  }\n  getDeadlineInfo(): string[] {\n    const deadlineInfo: string[] = [];\n    if (this.childStartTime) {\n      if (this.childStartTime > this.startTime) {\n        if (this.metadata?.getOptions().waitForReady) {\n          deadlineInfo.push('wait_for_ready');\n        }\n        deadlineInfo.push(`LB pick: ${formatDateDifference(this.startTime, this.childStartTime)}`);\n      }\n      deadlineInfo.push(...this.child!.getDeadlineInfo());\n      return deadlineInfo;\n    } else {\n      if (this.metadata?.getOptions().waitForReady) {\n        deadlineInfo.push('wait_for_ready');\n      }\n      deadlineInfo.push('Waiting for LB pick');\n    }\n    return deadlineInfo;\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '[' + this.callNumber + '] ' + text\n    );\n  }\n\n  private outputStatus(status: StatusObject, progress: RpcProgress) {\n    if (!this.ended) {\n      this.ended = true;\n      this.trace(\n        'ended with status: code=' +\n          status.code +\n          ' details=\"' +\n          status.details +\n          '\" start time=' +\n          this.startTime.toISOString()\n      );\n      const finalStatus = { ...status, progress };\n      this.listener?.onReceiveStatus(finalStatus);\n      this.onCallEnded?.(finalStatus.code);\n    }\n  }\n\n  doPick() {\n    if (this.ended) {\n      return;\n    }\n    if (!this.metadata) {\n      throw new Error('doPick called before start');\n    }\n    this.trace('Pick called');\n    const finalMetadata = this.metadata.clone();\n    const pickResult = this.channel.doPick(\n      finalMetadata,\n      this.callConfig.pickInformation\n    );\n    const subchannelString = pickResult.subchannel\n      ? '(' +\n        pickResult.subchannel.getChannelzRef().id +\n        ') ' +\n        pickResult.subchannel.getAddress()\n      : '' + pickResult.subchannel;\n    this.trace(\n      'Pick result: ' +\n        PickResultType[pickResult.pickResultType] +\n        ' subchannel: ' +\n        subchannelString +\n        ' status: ' +\n        pickResult.status?.code +\n        ' ' +\n        pickResult.status?.details\n    );\n    switch (pickResult.pickResultType) {\n      case PickResultType.COMPLETE:\n        this.credentials\n          .generateMetadata({ service_url: this.serviceUrl })\n          .then(\n            credsMetadata => {\n              /* If this call was cancelled (e.g. by the deadline) before\n               * metadata generation finished, we shouldn't do anything with\n               * it. */\n              if (this.ended) {\n                this.trace(\n                  'Credentials metadata generation finished after call ended'\n                );\n                return;\n              }\n              finalMetadata.merge(credsMetadata);\n              if (finalMetadata.get('authorization').length > 1) {\n                this.outputStatus(\n                  {\n                    code: Status.INTERNAL,\n                    details:\n                      '\"authorization\" metadata cannot have multiple values',\n                    metadata: new Metadata(),\n                  },\n                  'PROCESSED'\n                );\n              }\n              if (\n                pickResult.subchannel!.getConnectivityState() !==\n                ConnectivityState.READY\n              ) {\n                this.trace(\n                  'Picked subchannel ' +\n                    subchannelString +\n                    ' has state ' +\n                    ConnectivityState[\n                      pickResult.subchannel!.getConnectivityState()\n                    ] +\n                    ' after getting credentials metadata. Retrying pick'\n                );\n                this.doPick();\n                return;\n              }\n\n              if (this.deadline !== Infinity) {\n                finalMetadata.set(\n                  'grpc-timeout',\n                  getDeadlineTimeoutString(this.deadline)\n                );\n              }\n              try {\n                this.child = pickResult\n                  .subchannel!.getRealSubchannel()\n                  .createCall(finalMetadata, this.host, this.methodName, {\n                    onReceiveMetadata: metadata => {\n                      this.trace('Received metadata');\n                      this.listener!.onReceiveMetadata(metadata);\n                    },\n                    onReceiveMessage: message => {\n                      this.trace('Received message');\n                      this.listener!.onReceiveMessage(message);\n                    },\n                    onReceiveStatus: status => {\n                      this.trace('Received status');\n                      if (\n                        status.rstCode ===\n                        http2.constants.NGHTTP2_REFUSED_STREAM\n                      ) {\n                        this.outputStatus(status, 'REFUSED');\n                      } else {\n                        this.outputStatus(status, 'PROCESSED');\n                      }\n                    },\n                  });\n                this.childStartTime = new Date();\n              } catch (error) {\n                this.trace(\n                  'Failed to start call on picked subchannel ' +\n                    subchannelString +\n                    ' with error ' +\n                    (error as Error).message\n                );\n                this.outputStatus(\n                  {\n                    code: Status.INTERNAL,\n                    details:\n                      'Failed to start HTTP/2 stream with error ' +\n                      (error as Error).message,\n                    metadata: new Metadata(),\n                  },\n                  'NOT_STARTED'\n                );\n                return;\n              }\n              this.callConfig.onCommitted?.();\n              pickResult.onCallStarted?.();\n              this.onCallEnded = pickResult.onCallEnded;\n              this.trace(\n                'Created child call [' + this.child.getCallNumber() + ']'\n              );\n              if (this.readPending) {\n                this.child.startRead();\n              }\n              if (this.pendingMessage) {\n                this.child.sendMessageWithContext(\n                  this.pendingMessage.context,\n                  this.pendingMessage.message\n                );\n              }\n              if (this.pendingHalfClose) {\n                this.child.halfClose();\n              }\n            },\n            (error: Error & { code: number }) => {\n              // We assume the error code isn't 0 (Status.OK)\n              const { code, details } = restrictControlPlaneStatusCode(\n                typeof error.code === 'number' ? error.code : Status.UNKNOWN,\n                `Getting metadata from plugin failed with error: ${error.message}`\n              );\n              this.outputStatus(\n                {\n                  code: code,\n                  details: details,\n                  metadata: new Metadata(),\n                },\n                'PROCESSED'\n              );\n            }\n          );\n        break;\n      case PickResultType.DROP:\n        const { code, details } = restrictControlPlaneStatusCode(\n          pickResult.status!.code,\n          pickResult.status!.details\n        );\n        setImmediate(() => {\n          this.outputStatus(\n            { code, details, metadata: pickResult.status!.metadata },\n            'DROP'\n          );\n        });\n        break;\n      case PickResultType.TRANSIENT_FAILURE:\n        if (this.metadata.getOptions().waitForReady) {\n          this.channel.queueCallForPick(this);\n        } else {\n          const { code, details } = restrictControlPlaneStatusCode(\n            pickResult.status!.code,\n            pickResult.status!.details\n          );\n          setImmediate(() => {\n            this.outputStatus(\n              { code, details, metadata: pickResult.status!.metadata },\n              'PROCESSED'\n            );\n          });\n        }\n        break;\n      case PickResultType.QUEUE:\n        this.channel.queueCallForPick(this);\n    }\n  }\n\n  cancelWithStatus(status: Status, details: string): void {\n    this.trace(\n      'cancelWithStatus code: ' + status + ' details: \"' + details + '\"'\n    );\n    this.child?.cancelWithStatus(status, details);\n    this.outputStatus(\n      { code: status, details: details, metadata: new Metadata() },\n      'PROCESSED'\n    );\n  }\n  getPeer(): string {\n    return this.child?.getPeer() ?? this.channel.getTarget();\n  }\n  start(\n    metadata: Metadata,\n    listener: LoadBalancingCallInterceptingListener\n  ): void {\n    this.trace('start called');\n    this.listener = listener;\n    this.metadata = metadata;\n    this.doPick();\n  }\n  sendMessageWithContext(context: MessageContext, message: Buffer): void {\n    this.trace('write() called with message of length ' + message.length);\n    if (this.child) {\n      this.child.sendMessageWithContext(context, message);\n    } else {\n      this.pendingMessage = { context, message };\n    }\n  }\n  startRead(): void {\n    this.trace('startRead called');\n    if (this.child) {\n      this.child.startRead();\n    } else {\n      this.readPending = true;\n    }\n  }\n  halfClose(): void {\n    this.trace('halfClose called');\n    if (this.child) {\n      this.child.halfClose();\n    } else {\n      this.pendingHalfClose = true;\n    }\n  }\n  setCredentials(credentials: CallCredentials): void {\n    throw new Error('Method not implemented.');\n  }\n\n  getCallNumber(): number {\n    return this.callNumber;\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CallCredentials } from './call-credentials';\nimport {\n  Call,\n  CallStreamOptions,\n  DeadlineInfoProvider,\n  InterceptingListener,\n  MessageContext,\n  StatusObject,\n} from './call-interface';\nimport { LogVerbosity, Propagate, Status } from './constants';\nimport {\n  Deadline,\n  deadlineToString,\n  formatDateDifference,\n  getRelativeTimeout,\n  minDeadline,\n} from './deadline';\nimport { FilterStack, FilterStackFactory } from './filter-stack';\nimport { InternalChannel } from './internal-channel';\nimport { Metadata } from './metadata';\nimport * as logging from './logging';\nimport { restrictControlPlaneStatusCode } from './control-plane-status';\n\nconst TRACER_NAME = 'resolving_call';\n\nexport class ResolvingCall implements Call {\n  private child: (Call & DeadlineInfoProvider) | null = null;\n  private readPending = false;\n  private pendingMessage: { context: MessageContext; message: Buffer } | null =\n    null;\n  private pendingHalfClose = false;\n  private ended = false;\n  private readFilterPending = false;\n  private writeFilterPending = false;\n  private pendingChildStatus: StatusObject | null = null;\n  private metadata: Metadata | null = null;\n  private listener: InterceptingListener | null = null;\n  private deadline: Deadline;\n  private host: string;\n  private statusWatchers: ((status: StatusObject) => void)[] = [];\n  private deadlineTimer: NodeJS.Timeout = setTimeout(() => {}, 0);\n  private filterStack: FilterStack | null = null;\n\n  private deadlineStartTime: Date | null = null;\n  private configReceivedTime: Date | null = null;\n  private childStartTime: Date | null = null;\n\n  constructor(\n    private readonly channel: InternalChannel,\n    private readonly method: string,\n    options: CallStreamOptions,\n    private readonly filterStackFactory: FilterStackFactory,\n    private credentials: CallCredentials,\n    private callNumber: number\n  ) {\n    this.deadline = options.deadline;\n    this.host = options.host;\n    if (options.parentCall) {\n      if (options.flags & Propagate.CANCELLATION) {\n        options.parentCall.on('cancelled', () => {\n          this.cancelWithStatus(Status.CANCELLED, 'Cancelled by parent call');\n        });\n      }\n      if (options.flags & Propagate.DEADLINE) {\n        this.trace(\n          'Propagating deadline from parent: ' +\n            options.parentCall.getDeadline()\n        );\n        this.deadline = minDeadline(\n          this.deadline,\n          options.parentCall.getDeadline()\n        );\n      }\n    }\n    this.trace('Created');\n    this.runDeadlineTimer();\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '[' + this.callNumber + '] ' + text\n    );\n  }\n\n  private runDeadlineTimer() {\n    clearTimeout(this.deadlineTimer);\n    this.deadlineStartTime = new Date();\n    this.trace('Deadline: ' + deadlineToString(this.deadline));\n    const timeout = getRelativeTimeout(this.deadline);\n    if (timeout !== Infinity) {\n      this.trace('Deadline will be reached in ' + timeout + 'ms');\n      const handleDeadline = () => {\n        if (!this.deadlineStartTime) {\n          this.cancelWithStatus(Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n          return;\n        }\n        const deadlineInfo: string[] = [];\n        const deadlineEndTime = new Date();\n        deadlineInfo.push(`Deadline exceeded after ${formatDateDifference(this.deadlineStartTime, deadlineEndTime)}`);\n        if (this.configReceivedTime) {\n          if (this.configReceivedTime > this.deadlineStartTime) {\n            deadlineInfo.push(`name resolution: ${formatDateDifference(this.deadlineStartTime, this.configReceivedTime)}`);\n          }\n          if (this.childStartTime) {\n            if (this.childStartTime > this.configReceivedTime) {\n              deadlineInfo.push(`metadata filters: ${formatDateDifference(this.configReceivedTime, this.childStartTime)}`);\n            }\n          } else {\n            deadlineInfo.push('waiting for metadata filters');\n          }\n        } else {\n          deadlineInfo.push('waiting for name resolution');\n        }\n        if (this.child) {\n          deadlineInfo.push(...this.child.getDeadlineInfo());\n        }\n        this.cancelWithStatus(Status.DEADLINE_EXCEEDED, deadlineInfo.join(','));\n      };\n      if (timeout <= 0) {\n        process.nextTick(handleDeadline);\n      } else {\n        this.deadlineTimer = setTimeout(handleDeadline, timeout);\n      }\n    }\n  }\n\n  private outputStatus(status: StatusObject) {\n    if (!this.ended) {\n      this.ended = true;\n      if (!this.filterStack) {\n        this.filterStack = this.filterStackFactory.createFilter();\n      }\n      clearTimeout(this.deadlineTimer);\n      const filteredStatus = this.filterStack.receiveTrailers(status);\n      this.trace(\n        'ended with status: code=' +\n          filteredStatus.code +\n          ' details=\"' +\n          filteredStatus.details +\n          '\"'\n      );\n      this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n      process.nextTick(() => {\n        this.listener?.onReceiveStatus(filteredStatus);\n      });\n    }\n  }\n\n  private sendMessageOnChild(context: MessageContext, message: Buffer): void {\n    if (!this.child) {\n      throw new Error('sendMessageonChild called with child not populated');\n    }\n    const child = this.child;\n    this.writeFilterPending = true;\n    this.filterStack!.sendMessage(\n      Promise.resolve({ message: message, flags: context.flags })\n    ).then(\n      filteredMessage => {\n        this.writeFilterPending = false;\n        child.sendMessageWithContext(context, filteredMessage.message);\n        if (this.pendingHalfClose) {\n          child.halfClose();\n        }\n      },\n      (status: StatusObject) => {\n        this.cancelWithStatus(status.code, status.details);\n      }\n    );\n  }\n\n  getConfig(): void {\n    if (this.ended) {\n      return;\n    }\n    if (!this.metadata || !this.listener) {\n      throw new Error('getConfig called before start');\n    }\n    const configResult = this.channel.getConfig(this.method, this.metadata);\n    if (configResult.type === 'NONE') {\n      this.channel.queueCallForConfig(this);\n      return;\n    } else if (configResult.type === 'ERROR') {\n      if (this.metadata.getOptions().waitForReady) {\n        this.channel.queueCallForConfig(this);\n      } else {\n        this.outputStatus(configResult.error);\n      }\n      return;\n    }\n    // configResult.type === 'SUCCESS'\n    this.configReceivedTime = new Date();\n    const config = configResult.config;\n    if (config.status !== Status.OK) {\n      const { code, details } = restrictControlPlaneStatusCode(\n        config.status,\n        'Failed to route call to method ' + this.method\n      );\n      this.outputStatus({\n        code: code,\n        details: details,\n        metadata: new Metadata(),\n      });\n      return;\n    }\n\n    if (config.methodConfig.timeout) {\n      const configDeadline = new Date();\n      configDeadline.setSeconds(\n        configDeadline.getSeconds() + config.methodConfig.timeout.seconds\n      );\n      configDeadline.setMilliseconds(\n        configDeadline.getMilliseconds() +\n          config.methodConfig.timeout.nanos / 1_000_000\n      );\n      this.deadline = minDeadline(this.deadline, configDeadline);\n      this.runDeadlineTimer();\n    }\n\n    this.filterStackFactory.push(config.dynamicFilterFactories);\n    this.filterStack = this.filterStackFactory.createFilter();\n    this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(\n      filteredMetadata => {\n        this.child = this.channel.createInnerCall(\n          config,\n          this.method,\n          this.host,\n          this.credentials,\n          this.deadline\n        );\n        this.trace('Created child [' + this.child.getCallNumber() + ']');\n        this.childStartTime = new Date();\n        this.child.start(filteredMetadata, {\n          onReceiveMetadata: metadata => {\n            this.trace('Received metadata');\n            this.listener!.onReceiveMetadata(\n              this.filterStack!.receiveMetadata(metadata)\n            );\n          },\n          onReceiveMessage: message => {\n            this.trace('Received message');\n            this.readFilterPending = true;\n            this.filterStack!.receiveMessage(message).then(\n              filteredMesssage => {\n                this.trace('Finished filtering received message');\n                this.readFilterPending = false;\n                this.listener!.onReceiveMessage(filteredMesssage);\n                if (this.pendingChildStatus) {\n                  this.outputStatus(this.pendingChildStatus);\n                }\n              },\n              (status: StatusObject) => {\n                this.cancelWithStatus(status.code, status.details);\n              }\n            );\n          },\n          onReceiveStatus: status => {\n            this.trace('Received status');\n            if (this.readFilterPending) {\n              this.pendingChildStatus = status;\n            } else {\n              this.outputStatus(status);\n            }\n          },\n        });\n        if (this.readPending) {\n          this.child.startRead();\n        }\n        if (this.pendingMessage) {\n          this.sendMessageOnChild(\n            this.pendingMessage.context,\n            this.pendingMessage.message\n          );\n        } else if (this.pendingHalfClose) {\n          this.child.halfClose();\n        }\n      },\n      (status: StatusObject) => {\n        this.outputStatus(status);\n      }\n    );\n  }\n\n  reportResolverError(status: StatusObject) {\n    if (this.metadata?.getOptions().waitForReady) {\n      this.channel.queueCallForConfig(this);\n    } else {\n      this.outputStatus(status);\n    }\n  }\n  cancelWithStatus(status: Status, details: string): void {\n    this.trace(\n      'cancelWithStatus code: ' + status + ' details: \"' + details + '\"'\n    );\n    this.child?.cancelWithStatus(status, details);\n    this.outputStatus({\n      code: status,\n      details: details,\n      metadata: new Metadata(),\n    });\n  }\n  getPeer(): string {\n    return this.child?.getPeer() ?? this.channel.getTarget();\n  }\n  start(metadata: Metadata, listener: InterceptingListener): void {\n    this.trace('start called');\n    this.metadata = metadata.clone();\n    this.listener = listener;\n    this.getConfig();\n  }\n  sendMessageWithContext(context: MessageContext, message: Buffer): void {\n    this.trace('write() called with message of length ' + message.length);\n    if (this.child) {\n      this.sendMessageOnChild(context, message);\n    } else {\n      this.pendingMessage = { context, message };\n    }\n  }\n  startRead(): void {\n    this.trace('startRead called');\n    if (this.child) {\n      this.child.startRead();\n    } else {\n      this.readPending = true;\n    }\n  }\n  halfClose(): void {\n    this.trace('halfClose called');\n    if (this.child && !this.writeFilterPending) {\n      this.child.halfClose();\n    } else {\n      this.pendingHalfClose = true;\n    }\n  }\n  setCredentials(credentials: CallCredentials): void {\n    this.credentials = this.credentials.compose(credentials);\n  }\n\n  addStatusWatcher(watcher: (status: StatusObject) => void) {\n    this.statusWatchers.push(watcher);\n  }\n\n  getCallNumber(): number {\n    return this.callNumber;\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CallCredentials } from './call-credentials';\nimport { LogVerbosity, Status } from './constants';\nimport { Deadline, formatDateDifference } from './deadline';\nimport { Metadata } from './metadata';\nimport { CallConfig } from './resolver';\nimport * as logging from './logging';\nimport {\n  Call,\n  DeadlineInfoProvider,\n  InterceptingListener,\n  MessageContext,\n  StatusObject,\n  WriteCallback,\n  WriteObject,\n} from './call-interface';\nimport {\n  LoadBalancingCall,\n  StatusObjectWithProgress,\n} from './load-balancing-call';\nimport { InternalChannel } from './internal-channel';\n\nconst TRACER_NAME = 'retrying_call';\n\nexport class RetryThrottler {\n  private tokens: number;\n  constructor(\n    private readonly maxTokens: number,\n    private readonly tokenRatio: number,\n    previousRetryThrottler?: RetryThrottler\n  ) {\n    if (previousRetryThrottler) {\n      /* When carrying over tokens from a previous config, rescale them to the\n       * new max value */\n      this.tokens =\n        previousRetryThrottler.tokens *\n        (maxTokens / previousRetryThrottler.maxTokens);\n    } else {\n      this.tokens = maxTokens;\n    }\n  }\n\n  addCallSucceeded() {\n    this.tokens = Math.max(this.tokens + this.tokenRatio, this.maxTokens);\n  }\n\n  addCallFailed() {\n    this.tokens = Math.min(this.tokens - 1, 0);\n  }\n\n  canRetryCall() {\n    return this.tokens > this.maxTokens / 2;\n  }\n}\n\nexport class MessageBufferTracker {\n  private totalAllocated = 0;\n  private allocatedPerCall: Map<number, number> = new Map<number, number>();\n\n  constructor(private totalLimit: number, private limitPerCall: number) {}\n\n  allocate(size: number, callId: number): boolean {\n    const currentPerCall = this.allocatedPerCall.get(callId) ?? 0;\n    if (\n      this.limitPerCall - currentPerCall < size ||\n      this.totalLimit - this.totalAllocated < size\n    ) {\n      return false;\n    }\n    this.allocatedPerCall.set(callId, currentPerCall + size);\n    this.totalAllocated += size;\n    return true;\n  }\n\n  free(size: number, callId: number) {\n    if (this.totalAllocated < size) {\n      throw new Error(\n        `Invalid buffer allocation state: call ${callId} freed ${size} > total allocated ${this.totalAllocated}`\n      );\n    }\n    this.totalAllocated -= size;\n    const currentPerCall = this.allocatedPerCall.get(callId) ?? 0;\n    if (currentPerCall < size) {\n      throw new Error(\n        `Invalid buffer allocation state: call ${callId} freed ${size} > allocated for call ${currentPerCall}`\n      );\n    }\n    this.allocatedPerCall.set(callId, currentPerCall - size);\n  }\n\n  freeAll(callId: number) {\n    const currentPerCall = this.allocatedPerCall.get(callId) ?? 0;\n    if (this.totalAllocated < currentPerCall) {\n      throw new Error(\n        `Invalid buffer allocation state: call ${callId} allocated ${currentPerCall} > total allocated ${this.totalAllocated}`\n      );\n    }\n    this.totalAllocated -= currentPerCall;\n    this.allocatedPerCall.delete(callId);\n  }\n}\n\ntype UnderlyingCallState = 'ACTIVE' | 'COMPLETED';\n\ninterface UnderlyingCall {\n  state: UnderlyingCallState;\n  call: LoadBalancingCall;\n  nextMessageToSend: number;\n  startTime: Date;\n}\n\n/**\n * A retrying call can be in one of these states:\n * RETRY: Retries are configured and new attempts may be sent\n * HEDGING: Hedging is configured and new attempts may be sent\n * TRANSPARENT_ONLY: Neither retries nor hedging are configured, and\n * transparent retry attempts may still be sent\n * COMMITTED: One attempt is committed, and no new attempts will be\n * sent\n */\ntype RetryingCallState = 'RETRY' | 'HEDGING' | 'TRANSPARENT_ONLY' | 'COMMITTED';\n\n/**\n * The different types of objects that can be stored in the write buffer, with\n * the following meanings:\n * MESSAGE: This is a message to be sent.\n * HALF_CLOSE: When this entry is reached, the calls should send a half-close.\n * FREED: This slot previously contained a message that has been sent on all\n * child calls and is no longer needed.\n */\ntype WriteBufferEntryType = 'MESSAGE' | 'HALF_CLOSE' | 'FREED';\n\n/**\n * Entry in the buffer of messages to send to the remote end.\n */\ninterface WriteBufferEntry {\n  entryType: WriteBufferEntryType;\n  /**\n   * Message to send.\n   * Only populated if entryType is MESSAGE.\n   */\n  message?: WriteObject;\n  /**\n   * Callback to call after sending the message.\n   * Only populated if entryType is MESSAGE and the call is in the COMMITTED\n   * state.\n   */\n  callback?: WriteCallback;\n  /**\n   * Indicates whether the message is allocated in the buffer tracker. Ignored\n   * if entryType is not MESSAGE. Should be the return value of\n   * bufferTracker.allocate.\n   */\n  allocated: boolean;\n}\n\nconst PREVIONS_RPC_ATTEMPTS_METADATA_KEY = 'grpc-previous-rpc-attempts';\n\nexport class RetryingCall implements Call, DeadlineInfoProvider {\n  private state: RetryingCallState;\n  private listener: InterceptingListener | null = null;\n  private initialMetadata: Metadata | null = null;\n  private underlyingCalls: UnderlyingCall[] = [];\n  private writeBuffer: WriteBufferEntry[] = [];\n  /**\n   * The offset of message indices in the writeBuffer. For example, if\n   * writeBufferOffset is 10, message 10 is in writeBuffer[0] and message 15\n   * is in writeBuffer[5].\n   */\n  private writeBufferOffset = 0;\n  /**\n   * Tracks whether a read has been started, so that we know whether to start\n   * reads on new child calls. This only matters for the first read, because\n   * once a message comes in the child call becomes committed and there will\n   * be no new child calls.\n   */\n  private readStarted = false;\n  private transparentRetryUsed = false;\n  /**\n   * Number of attempts so far\n   */\n  private attempts = 0;\n  private hedgingTimer: NodeJS.Timeout | null = null;\n  private committedCallIndex: number | null = null;\n  private initialRetryBackoffSec = 0;\n  private nextRetryBackoffSec = 0;\n  private startTime: Date;\n  constructor(\n    private readonly channel: InternalChannel,\n    private readonly callConfig: CallConfig,\n    private readonly methodName: string,\n    private readonly host: string,\n    private readonly credentials: CallCredentials,\n    private readonly deadline: Deadline,\n    private readonly callNumber: number,\n    private readonly bufferTracker: MessageBufferTracker,\n    private readonly retryThrottler?: RetryThrottler\n  ) {\n    if (callConfig.methodConfig.retryPolicy) {\n      this.state = 'RETRY';\n      const retryPolicy = callConfig.methodConfig.retryPolicy;\n      this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(\n        retryPolicy.initialBackoff.substring(\n          0,\n          retryPolicy.initialBackoff.length - 1\n        )\n      );\n    } else if (callConfig.methodConfig.hedgingPolicy) {\n      this.state = 'HEDGING';\n    } else {\n      this.state = 'TRANSPARENT_ONLY';\n    }\n    this.startTime = new Date();\n  }\n  getDeadlineInfo(): string[] {\n    if (this.underlyingCalls.length === 0) {\n      return [];\n    }\n    const deadlineInfo: string[] = [];\n    const latestCall = this.underlyingCalls[this.underlyingCalls.length - 1];\n    if (this.underlyingCalls.length > 1) {\n      deadlineInfo.push(`previous attempts: ${this.underlyingCalls.length - 1}`);\n    }\n    if (latestCall.startTime > this.startTime) {\n      deadlineInfo.push(`time to current attempt start: ${formatDateDifference(this.startTime, latestCall.startTime)}`);\n    }\n    deadlineInfo.push(...latestCall.call.getDeadlineInfo());\n    return deadlineInfo;\n  }\n  getCallNumber(): number {\n    return this.callNumber;\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '[' + this.callNumber + '] ' + text\n    );\n  }\n\n  private reportStatus(statusObject: StatusObject) {\n    this.trace(\n      'ended with status: code=' +\n        statusObject.code +\n        ' details=\"' +\n        statusObject.details +\n        '\" start time=' +\n        this.startTime.toISOString()\n    );\n    this.bufferTracker.freeAll(this.callNumber);\n    this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length;\n    this.writeBuffer = [];\n    process.nextTick(() => {\n      // Explicitly construct status object to remove progress field\n      this.listener?.onReceiveStatus({\n        code: statusObject.code,\n        details: statusObject.details,\n        metadata: statusObject.metadata,\n      });\n    });\n  }\n\n  cancelWithStatus(status: Status, details: string): void {\n    this.trace(\n      'cancelWithStatus code: ' + status + ' details: \"' + details + '\"'\n    );\n    this.reportStatus({ code: status, details, metadata: new Metadata() });\n    for (const { call } of this.underlyingCalls) {\n      call.cancelWithStatus(status, details);\n    }\n  }\n  getPeer(): string {\n    if (this.committedCallIndex !== null) {\n      return this.underlyingCalls[this.committedCallIndex].call.getPeer();\n    } else {\n      return 'unknown';\n    }\n  }\n\n  private getBufferEntry(messageIndex: number): WriteBufferEntry {\n    return (\n      this.writeBuffer[messageIndex - this.writeBufferOffset] ?? {\n        entryType: 'FREED',\n        allocated: false,\n      }\n    );\n  }\n\n  private getNextBufferIndex() {\n    return this.writeBufferOffset + this.writeBuffer.length;\n  }\n\n  private clearSentMessages() {\n    if (this.state !== 'COMMITTED') {\n      return;\n    }\n    const earliestNeededMessageIndex =\n      this.underlyingCalls[this.committedCallIndex!].nextMessageToSend;\n    for (\n      let messageIndex = this.writeBufferOffset;\n      messageIndex < earliestNeededMessageIndex;\n      messageIndex++\n    ) {\n      const bufferEntry = this.getBufferEntry(messageIndex);\n      if (bufferEntry.allocated) {\n        this.bufferTracker.free(\n          bufferEntry.message!.message.length,\n          this.callNumber\n        );\n      }\n    }\n    this.writeBuffer = this.writeBuffer.slice(\n      earliestNeededMessageIndex - this.writeBufferOffset\n    );\n    this.writeBufferOffset = earliestNeededMessageIndex;\n  }\n\n  private commitCall(index: number) {\n    if (this.state === 'COMMITTED') {\n      return;\n    }\n    if (this.underlyingCalls[index].state === 'COMPLETED') {\n      return;\n    }\n    this.trace(\n      'Committing call [' +\n        this.underlyingCalls[index].call.getCallNumber() +\n        '] at index ' +\n        index\n    );\n    this.state = 'COMMITTED';\n    this.committedCallIndex = index;\n    for (let i = 0; i < this.underlyingCalls.length; i++) {\n      if (i === index) {\n        continue;\n      }\n      if (this.underlyingCalls[i].state === 'COMPLETED') {\n        continue;\n      }\n      this.underlyingCalls[i].state = 'COMPLETED';\n      this.underlyingCalls[i].call.cancelWithStatus(\n        Status.CANCELLED,\n        'Discarded in favor of other hedged attempt'\n      );\n    }\n    this.clearSentMessages();\n  }\n\n  private commitCallWithMostMessages() {\n    if (this.state === 'COMMITTED') {\n      return;\n    }\n    let mostMessages = -1;\n    let callWithMostMessages = -1;\n    for (const [index, childCall] of this.underlyingCalls.entries()) {\n      if (\n        childCall.state === 'ACTIVE' &&\n        childCall.nextMessageToSend > mostMessages\n      ) {\n        mostMessages = childCall.nextMessageToSend;\n        callWithMostMessages = index;\n      }\n    }\n    if (callWithMostMessages === -1) {\n      /* There are no active calls, disable retries to force the next call that\n       * is started to be committed. */\n      this.state = 'TRANSPARENT_ONLY';\n    } else {\n      this.commitCall(callWithMostMessages);\n    }\n  }\n\n  private isStatusCodeInList(list: (Status | string)[], code: Status) {\n    return list.some(\n      value =>\n        value === code ||\n        value.toString().toLowerCase() === Status[code].toLowerCase()\n    );\n  }\n\n  private getNextRetryBackoffMs() {\n    const retryPolicy = this.callConfig?.methodConfig.retryPolicy;\n    if (!retryPolicy) {\n      return 0;\n    }\n    const nextBackoffMs = Math.random() * this.nextRetryBackoffSec * 1000;\n    const maxBackoffSec = Number(\n      retryPolicy.maxBackoff.substring(0, retryPolicy.maxBackoff.length - 1)\n    );\n    this.nextRetryBackoffSec = Math.min(\n      this.nextRetryBackoffSec * retryPolicy.backoffMultiplier,\n      maxBackoffSec\n    );\n    return nextBackoffMs;\n  }\n\n  private maybeRetryCall(\n    pushback: number | null,\n    callback: (retried: boolean) => void\n  ) {\n    if (this.state !== 'RETRY') {\n      callback(false);\n      return;\n    }\n    const retryPolicy = this.callConfig!.methodConfig.retryPolicy!;\n    if (this.attempts >= Math.min(retryPolicy.maxAttempts, 5)) {\n      callback(false);\n      return;\n    }\n    let retryDelayMs: number;\n    if (pushback === null) {\n      retryDelayMs = this.getNextRetryBackoffMs();\n    } else if (pushback < 0) {\n      this.state = 'TRANSPARENT_ONLY';\n      callback(false);\n      return;\n    } else {\n      retryDelayMs = pushback;\n      this.nextRetryBackoffSec = this.initialRetryBackoffSec;\n    }\n    setTimeout(() => {\n      if (this.state !== 'RETRY') {\n        callback(false);\n        return;\n      }\n      if (this.retryThrottler?.canRetryCall() ?? true) {\n        callback(true);\n        this.attempts += 1;\n        this.startNewAttempt();\n      }\n    }, retryDelayMs);\n  }\n\n  private countActiveCalls(): number {\n    let count = 0;\n    for (const call of this.underlyingCalls) {\n      if (call?.state === 'ACTIVE') {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  private handleProcessedStatus(\n    status: StatusObject,\n    callIndex: number,\n    pushback: number | null\n  ) {\n    switch (this.state) {\n      case 'COMMITTED':\n      case 'TRANSPARENT_ONLY':\n        this.commitCall(callIndex);\n        this.reportStatus(status);\n        break;\n      case 'HEDGING':\n        if (\n          this.isStatusCodeInList(\n            this.callConfig!.methodConfig.hedgingPolicy!.nonFatalStatusCodes ??\n              [],\n            status.code\n          )\n        ) {\n          this.retryThrottler?.addCallFailed();\n          let delayMs: number;\n          if (pushback === null) {\n            delayMs = 0;\n          } else if (pushback < 0) {\n            this.state = 'TRANSPARENT_ONLY';\n            this.commitCall(callIndex);\n            this.reportStatus(status);\n            return;\n          } else {\n            delayMs = pushback;\n          }\n          setTimeout(() => {\n            this.maybeStartHedgingAttempt();\n            // If after trying to start a call there are no active calls, this was the last one\n            if (this.countActiveCalls() === 0) {\n              this.commitCall(callIndex);\n              this.reportStatus(status);\n            }\n          }, delayMs);\n        } else {\n          this.commitCall(callIndex);\n          this.reportStatus(status);\n        }\n        break;\n      case 'RETRY':\n        if (\n          this.isStatusCodeInList(\n            this.callConfig!.methodConfig.retryPolicy!.retryableStatusCodes,\n            status.code\n          )\n        ) {\n          this.retryThrottler?.addCallFailed();\n          this.maybeRetryCall(pushback, retried => {\n            if (!retried) {\n              this.commitCall(callIndex);\n              this.reportStatus(status);\n            }\n          });\n        } else {\n          this.commitCall(callIndex);\n          this.reportStatus(status);\n        }\n        break;\n    }\n  }\n\n  private getPushback(metadata: Metadata): number | null {\n    const mdValue = metadata.get('grpc-retry-pushback-ms');\n    if (mdValue.length === 0) {\n      return null;\n    }\n    try {\n      return parseInt(mdValue[0] as string);\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  private handleChildStatus(\n    status: StatusObjectWithProgress,\n    callIndex: number\n  ) {\n    if (this.underlyingCalls[callIndex].state === 'COMPLETED') {\n      return;\n    }\n    this.trace(\n      'state=' +\n        this.state +\n        ' handling status with progress ' +\n        status.progress +\n        ' from child [' +\n        this.underlyingCalls[callIndex].call.getCallNumber() +\n        '] in state ' +\n        this.underlyingCalls[callIndex].state\n    );\n    this.underlyingCalls[callIndex].state = 'COMPLETED';\n    if (status.code === Status.OK) {\n      this.retryThrottler?.addCallSucceeded();\n      this.commitCall(callIndex);\n      this.reportStatus(status);\n      return;\n    }\n    if (this.state === 'COMMITTED') {\n      this.reportStatus(status);\n      return;\n    }\n    const pushback = this.getPushback(status.metadata);\n    switch (status.progress) {\n      case 'NOT_STARTED':\n        // RPC never leaves the client, always safe to retry\n        this.startNewAttempt();\n        break;\n      case 'REFUSED':\n        // RPC reaches the server library, but not the server application logic\n        if (this.transparentRetryUsed) {\n          this.handleProcessedStatus(status, callIndex, pushback);\n        } else {\n          this.transparentRetryUsed = true;\n          this.startNewAttempt();\n        }\n        break;\n      case 'DROP':\n        this.commitCall(callIndex);\n        this.reportStatus(status);\n        break;\n      case 'PROCESSED':\n        this.handleProcessedStatus(status, callIndex, pushback);\n        break;\n    }\n  }\n\n  private maybeStartHedgingAttempt() {\n    if (this.state !== 'HEDGING') {\n      return;\n    }\n    if (!this.callConfig.methodConfig.hedgingPolicy) {\n      return;\n    }\n    const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n    if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n      return;\n    }\n    this.attempts += 1;\n    this.startNewAttempt();\n    this.maybeStartHedgingTimer();\n  }\n\n  private maybeStartHedgingTimer() {\n    if (this.hedgingTimer) {\n      clearTimeout(this.hedgingTimer);\n    }\n    if (this.state !== 'HEDGING') {\n      return;\n    }\n    if (!this.callConfig.methodConfig.hedgingPolicy) {\n      return;\n    }\n    const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n    if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n      return;\n    }\n    const hedgingDelayString = hedgingPolicy.hedgingDelay ?? '0s';\n    const hedgingDelaySec = Number(\n      hedgingDelayString.substring(0, hedgingDelayString.length - 1)\n    );\n    this.hedgingTimer = setTimeout(() => {\n      this.maybeStartHedgingAttempt();\n    }, hedgingDelaySec * 1000);\n    this.hedgingTimer.unref?.();\n  }\n\n  private startNewAttempt() {\n    const child = this.channel.createLoadBalancingCall(\n      this.callConfig,\n      this.methodName,\n      this.host,\n      this.credentials,\n      this.deadline\n    );\n    this.trace(\n      'Created child call [' +\n        child.getCallNumber() +\n        '] for attempt ' +\n        this.attempts\n    );\n    const index = this.underlyingCalls.length;\n    this.underlyingCalls.push({\n      state: 'ACTIVE',\n      call: child,\n      nextMessageToSend: 0,\n      startTime: new Date()\n    });\n    const previousAttempts = this.attempts - 1;\n    const initialMetadata = this.initialMetadata!.clone();\n    if (previousAttempts > 0) {\n      initialMetadata.set(\n        PREVIONS_RPC_ATTEMPTS_METADATA_KEY,\n        `${previousAttempts}`\n      );\n    }\n    let receivedMetadata = false;\n    child.start(initialMetadata, {\n      onReceiveMetadata: metadata => {\n        this.trace(\n          'Received metadata from child [' + child.getCallNumber() + ']'\n        );\n        this.commitCall(index);\n        receivedMetadata = true;\n        if (previousAttempts > 0) {\n          metadata.set(\n            PREVIONS_RPC_ATTEMPTS_METADATA_KEY,\n            `${previousAttempts}`\n          );\n        }\n        if (this.underlyingCalls[index].state === 'ACTIVE') {\n          this.listener!.onReceiveMetadata(metadata);\n        }\n      },\n      onReceiveMessage: message => {\n        this.trace(\n          'Received message from child [' + child.getCallNumber() + ']'\n        );\n        this.commitCall(index);\n        if (this.underlyingCalls[index].state === 'ACTIVE') {\n          this.listener!.onReceiveMessage(message);\n        }\n      },\n      onReceiveStatus: status => {\n        this.trace(\n          'Received status from child [' + child.getCallNumber() + ']'\n        );\n        if (!receivedMetadata && previousAttempts > 0) {\n          status.metadata.set(\n            PREVIONS_RPC_ATTEMPTS_METADATA_KEY,\n            `${previousAttempts}`\n          );\n        }\n        this.handleChildStatus(status, index);\n      },\n    });\n    this.sendNextChildMessage(index);\n    if (this.readStarted) {\n      child.startRead();\n    }\n  }\n\n  start(metadata: Metadata, listener: InterceptingListener): void {\n    this.trace('start called');\n    this.listener = listener;\n    this.initialMetadata = metadata;\n    this.attempts += 1;\n    this.startNewAttempt();\n    this.maybeStartHedgingTimer();\n  }\n\n  private handleChildWriteCompleted(childIndex: number) {\n    const childCall = this.underlyingCalls[childIndex];\n    const messageIndex = childCall.nextMessageToSend;\n    this.getBufferEntry(messageIndex).callback?.();\n    this.clearSentMessages();\n    childCall.nextMessageToSend += 1;\n    this.sendNextChildMessage(childIndex);\n  }\n\n  private sendNextChildMessage(childIndex: number) {\n    const childCall = this.underlyingCalls[childIndex];\n    if (childCall.state === 'COMPLETED') {\n      return;\n    }\n    if (this.getBufferEntry(childCall.nextMessageToSend)) {\n      const bufferEntry = this.getBufferEntry(childCall.nextMessageToSend);\n      switch (bufferEntry.entryType) {\n        case 'MESSAGE':\n          childCall.call.sendMessageWithContext(\n            {\n              callback: error => {\n                // Ignore error\n                this.handleChildWriteCompleted(childIndex);\n              },\n            },\n            bufferEntry.message!.message\n          );\n          break;\n        case 'HALF_CLOSE':\n          childCall.nextMessageToSend += 1;\n          childCall.call.halfClose();\n          break;\n        case 'FREED':\n          // Should not be possible\n          break;\n      }\n    }\n  }\n\n  sendMessageWithContext(context: MessageContext, message: Buffer): void {\n    this.trace('write() called with message of length ' + message.length);\n    const writeObj: WriteObject = {\n      message,\n      flags: context.flags,\n    };\n    const messageIndex = this.getNextBufferIndex();\n    const bufferEntry: WriteBufferEntry = {\n      entryType: 'MESSAGE',\n      message: writeObj,\n      allocated: this.bufferTracker.allocate(message.length, this.callNumber),\n    };\n    this.writeBuffer.push(bufferEntry);\n    if (bufferEntry.allocated) {\n      context.callback?.();\n      for (const [callIndex, call] of this.underlyingCalls.entries()) {\n        if (\n          call.state === 'ACTIVE' &&\n          call.nextMessageToSend === messageIndex\n        ) {\n          call.call.sendMessageWithContext(\n            {\n              callback: error => {\n                // Ignore error\n                this.handleChildWriteCompleted(callIndex);\n              },\n            },\n            message\n          );\n        }\n      }\n    } else {\n      this.commitCallWithMostMessages();\n      // commitCallWithMostMessages can fail if we are between ping attempts\n      if (this.committedCallIndex === null) {\n        return;\n      }\n      const call = this.underlyingCalls[this.committedCallIndex];\n      bufferEntry.callback = context.callback;\n      if (call.state === 'ACTIVE' && call.nextMessageToSend === messageIndex) {\n        call.call.sendMessageWithContext(\n          {\n            callback: error => {\n              // Ignore error\n              this.handleChildWriteCompleted(this.committedCallIndex!);\n            },\n          },\n          message\n        );\n      }\n    }\n  }\n  startRead(): void {\n    this.trace('startRead called');\n    this.readStarted = true;\n    for (const underlyingCall of this.underlyingCalls) {\n      if (underlyingCall?.state === 'ACTIVE') {\n        underlyingCall.call.startRead();\n      }\n    }\n  }\n  halfClose(): void {\n    this.trace('halfClose called');\n    const halfCloseIndex = this.getNextBufferIndex();\n    this.writeBuffer.push({\n      entryType: 'HALF_CLOSE',\n      allocated: false,\n    });\n    for (const call of this.underlyingCalls) {\n      if (\n        call?.state === 'ACTIVE' &&\n        call.nextMessageToSend === halfCloseIndex\n      ) {\n        call.nextMessageToSend += 1;\n        call.call.halfClose();\n      }\n    }\n  }\n  setCredentials(newCredentials: CallCredentials): void {\n    throw new Error('Method not implemented.');\n  }\n  getMethod(): string {\n    return this.methodName;\n  }\n  getHost(): string {\n    return this.host;\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport type { SubchannelRef } from './channelz';\nimport { ConnectivityState } from './connectivity-state';\nimport { Subchannel } from './subchannel';\n\nexport type ConnectivityStateListener = (\n  subchannel: SubchannelInterface,\n  previousState: ConnectivityState,\n  newState: ConnectivityState,\n  keepaliveTime: number,\n  errorMessage?: string\n) => void;\n\nexport type HealthListener = (healthy: boolean) => void;\n\n/**\n * This is an interface for load balancing policies to use to interact with\n * subchannels. This allows load balancing policies to wrap and unwrap\n * subchannels.\n *\n * Any load balancing policy that wraps subchannels must unwrap the subchannel\n * in the picker, so that other load balancing policies consistently have\n * access to their own wrapper objects.\n */\nexport interface SubchannelInterface {\n  getConnectivityState(): ConnectivityState;\n  addConnectivityStateListener(listener: ConnectivityStateListener): void;\n  removeConnectivityStateListener(listener: ConnectivityStateListener): void;\n  startConnecting(): void;\n  getAddress(): string;\n  throttleKeepalive(newKeepaliveTime: number): void;\n  ref(): void;\n  unref(): void;\n  getChannelzRef(): SubchannelRef;\n  isHealthy(): boolean;\n  addHealthStateWatcher(listener: HealthListener): void;\n  removeHealthStateWatcher(listener: HealthListener): void;\n  /**\n   * If this is a wrapper, return the wrapped subchannel, otherwise return this\n   */\n  getRealSubchannel(): Subchannel;\n  /**\n   * Returns true if this and other both proxy the same underlying subchannel.\n   * Can be used instead of directly accessing getRealSubchannel to allow mocks\n   * to avoid implementing getRealSubchannel\n   */\n  realSubchannelEquals(other: SubchannelInterface): boolean;\n}\n\nexport abstract class BaseSubchannelWrapper implements SubchannelInterface {\n  private healthy = true;\n  private healthListeners: Set<HealthListener> = new Set();\n  constructor(protected child: SubchannelInterface) {\n    child.addHealthStateWatcher(childHealthy => {\n      /* A change to the child health state only affects this wrapper's overall\n       * health state if this wrapper is reporting healthy. */\n      if (this.healthy) {\n        this.updateHealthListeners();\n      }\n    });\n  }\n\n  private updateHealthListeners(): void {\n    for (const listener of this.healthListeners) {\n      listener(this.isHealthy());\n    }\n  }\n\n  getConnectivityState(): ConnectivityState {\n    return this.child.getConnectivityState();\n  }\n  addConnectivityStateListener(listener: ConnectivityStateListener): void {\n    this.child.addConnectivityStateListener(listener);\n  }\n  removeConnectivityStateListener(listener: ConnectivityStateListener): void {\n    this.child.removeConnectivityStateListener(listener);\n  }\n  startConnecting(): void {\n    this.child.startConnecting();\n  }\n  getAddress(): string {\n    return this.child.getAddress();\n  }\n  throttleKeepalive(newKeepaliveTime: number): void {\n    this.child.throttleKeepalive(newKeepaliveTime);\n  }\n  ref(): void {\n    this.child.ref();\n  }\n  unref(): void {\n    this.child.unref();\n  }\n  getChannelzRef(): SubchannelRef {\n    return this.child.getChannelzRef();\n  }\n  isHealthy(): boolean {\n    return this.healthy && this.child.isHealthy();\n  }\n  addHealthStateWatcher(listener: HealthListener): void {\n    this.healthListeners.add(listener);\n  }\n  removeHealthStateWatcher(listener: HealthListener): void {\n    this.healthListeners.delete(listener);\n  }\n  protected setHealthy(healthy: boolean): void {\n    if (healthy !== this.healthy) {\n      this.healthy = healthy;\n      /* A change to this wrapper's health state only affects the overall\n       * reported health state if the child is healthy. */\n      if (this.child.isHealthy()) {\n        this.updateHealthListeners();\n      }\n    }\n  }\n  getRealSubchannel(): Subchannel {\n    return this.child.getRealSubchannel();\n  }\n  realSubchannelEquals(other: SubchannelInterface): boolean {\n    return this.getRealSubchannel() === other.getRealSubchannel();\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelCredentials } from './channel-credentials';\nimport { ChannelOptions } from './channel-options';\nimport { ResolvingLoadBalancer } from './resolving-load-balancer';\nimport { SubchannelPool, getSubchannelPool } from './subchannel-pool';\nimport { ChannelControlHelper } from './load-balancer';\nimport { UnavailablePicker, Picker, QueuePicker } from './picker';\nimport { Metadata } from './metadata';\nimport { Status, LogVerbosity, Propagate } from './constants';\nimport { FilterStackFactory } from './filter-stack';\nimport { CompressionFilterFactory } from './compression-filter';\nimport {\n  CallConfig,\n  ConfigSelector,\n  getDefaultAuthority,\n  mapUriDefaultScheme,\n} from './resolver';\nimport { trace } from './logging';\nimport { SubchannelAddress } from './subchannel-address';\nimport { mapProxyName } from './http_proxy';\nimport { GrpcUri, parseUri, uriToString } from './uri-parser';\nimport { ServerSurfaceCall } from './server-call';\n\nimport { ConnectivityState } from './connectivity-state';\nimport {\n  ChannelInfo,\n  ChannelRef,\n  ChannelzCallTracker,\n  ChannelzChildrenTracker,\n  ChannelzTrace,\n  registerChannelzChannel,\n  SubchannelRef,\n  unregisterChannelzRef,\n} from './channelz';\nimport { LoadBalancingCall } from './load-balancing-call';\nimport { CallCredentials } from './call-credentials';\nimport { Call, CallStreamOptions, StatusObject } from './call-interface';\nimport { Deadline, deadlineToString } from './deadline';\nimport { ResolvingCall } from './resolving-call';\nimport { getNextCallNumber } from './call-number';\nimport { restrictControlPlaneStatusCode } from './control-plane-status';\nimport {\n  MessageBufferTracker,\n  RetryingCall,\n  RetryThrottler,\n} from './retrying-call';\nimport {\n  BaseSubchannelWrapper,\n  ConnectivityStateListener,\n  SubchannelInterface,\n} from './subchannel-interface';\n\n/**\n * See https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_args\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n\nconst MIN_IDLE_TIMEOUT_MS = 1000;\n\n// 30 minutes\nconst DEFAULT_IDLE_TIMEOUT_MS = 30 * 60 * 1000;\n\ninterface ConnectivityStateWatcher {\n  currentState: ConnectivityState;\n  timer: NodeJS.Timeout | null;\n  callback: (error?: Error) => void;\n}\n\ninterface NoneConfigResult {\n  type: 'NONE';\n}\n\ninterface SuccessConfigResult {\n  type: 'SUCCESS';\n  config: CallConfig;\n}\n\ninterface ErrorConfigResult {\n  type: 'ERROR';\n  error: StatusObject;\n}\n\ntype GetConfigResult =\n  | NoneConfigResult\n  | SuccessConfigResult\n  | ErrorConfigResult;\n\nconst RETRY_THROTTLER_MAP: Map<string, RetryThrottler> = new Map();\n\nconst DEFAULT_RETRY_BUFFER_SIZE_BYTES = 1 << 24; // 16 MB\nconst DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES = 1 << 20; // 1 MB\n\nclass ChannelSubchannelWrapper\n  extends BaseSubchannelWrapper\n  implements SubchannelInterface\n{\n  private refCount = 0;\n  private subchannelStateListener: ConnectivityStateListener;\n  constructor(\n    childSubchannel: SubchannelInterface,\n    private channel: InternalChannel\n  ) {\n    super(childSubchannel);\n    this.subchannelStateListener = (\n      subchannel,\n      previousState,\n      newState,\n      keepaliveTime\n    ) => {\n      channel.throttleKeepalive(keepaliveTime);\n    };\n    childSubchannel.addConnectivityStateListener(this.subchannelStateListener);\n  }\n\n  ref(): void {\n    this.child.ref();\n    this.refCount += 1;\n  }\n\n  unref(): void {\n    this.child.unref();\n    this.refCount -= 1;\n    if (this.refCount <= 0) {\n      this.child.removeConnectivityStateListener(this.subchannelStateListener);\n      this.channel.removeWrappedSubchannel(this);\n    }\n  }\n}\n\nexport class InternalChannel {\n  private readonly resolvingLoadBalancer: ResolvingLoadBalancer;\n  private readonly subchannelPool: SubchannelPool;\n  private connectivityState: ConnectivityState = ConnectivityState.IDLE;\n  private currentPicker: Picker = new UnavailablePicker();\n  /**\n   * Calls queued up to get a call config. Should only be populated before the\n   * first time the resolver returns a result, which includes the ConfigSelector.\n   */\n  private configSelectionQueue: ResolvingCall[] = [];\n  private pickQueue: LoadBalancingCall[] = [];\n  private connectivityStateWatchers: ConnectivityStateWatcher[] = [];\n  private readonly defaultAuthority: string;\n  private readonly filterStackFactory: FilterStackFactory;\n  private readonly target: GrpcUri;\n  /**\n   * This timer does not do anything on its own. Its purpose is to hold the\n   * event loop open while there are any pending calls for the channel that\n   * have not yet been assigned to specific subchannels. In other words,\n   * the invariant is that callRefTimer is reffed if and only if pickQueue\n   * is non-empty.\n   */\n  private readonly callRefTimer: NodeJS.Timeout;\n  private configSelector: ConfigSelector | null = null;\n  /**\n   * This is the error from the name resolver if it failed most recently. It\n   * is only used to end calls that start while there is no config selector\n   * and the name resolver is in backoff, so it should be nulled if\n   * configSelector becomes set or the channel state becomes anything other\n   * than TRANSIENT_FAILURE.\n   */\n  private currentResolutionError: StatusObject | null = null;\n  private readonly retryBufferTracker: MessageBufferTracker;\n  private keepaliveTime: number;\n  private readonly wrappedSubchannels: Set<ChannelSubchannelWrapper> =\n    new Set();\n\n  private callCount = 0;\n  private idleTimer: NodeJS.Timeout | null = null;\n  private readonly idleTimeoutMs: number;\n  private lastActivityTimestamp: Date;\n\n  // Channelz info\n  private readonly channelzEnabled: boolean = true;\n  private readonly originalTarget: string;\n  private readonly channelzRef: ChannelRef;\n  private readonly channelzTrace: ChannelzTrace;\n  private readonly callTracker = new ChannelzCallTracker();\n  private readonly childrenTracker = new ChannelzChildrenTracker();\n\n  /**\n   * Randomly generated ID to be passed to the config selector, for use by\n   * ring_hash in xDS. An integer distributed approximately uniformly between\n   * 0 and MAX_SAFE_INTEGER.\n   */\n  private readonly randomChannelId = Math.floor(\n    Math.random() * Number.MAX_SAFE_INTEGER\n  );\n\n  constructor(\n    target: string,\n    private readonly credentials: ChannelCredentials,\n    private readonly options: ChannelOptions\n  ) {\n    if (typeof target !== 'string') {\n      throw new TypeError('Channel target must be a string');\n    }\n    if (!(credentials instanceof ChannelCredentials)) {\n      throw new TypeError(\n        'Channel credentials must be a ChannelCredentials object'\n      );\n    }\n    if (options) {\n      if (typeof options !== 'object') {\n        throw new TypeError('Channel options must be an object');\n      }\n    }\n    this.originalTarget = target;\n    const originalTargetUri = parseUri(target);\n    if (originalTargetUri === null) {\n      throw new Error(`Could not parse target name \"${target}\"`);\n    }\n    /* This ensures that the target has a scheme that is registered with the\n     * resolver */\n    const defaultSchemeMapResult = mapUriDefaultScheme(originalTargetUri);\n    if (defaultSchemeMapResult === null) {\n      throw new Error(\n        `Could not find a default scheme for target name \"${target}\"`\n      );\n    }\n\n    this.callRefTimer = setInterval(() => {}, MAX_TIMEOUT_TIME);\n    this.callRefTimer.unref?.();\n\n    if (this.options['grpc.enable_channelz'] === 0) {\n      this.channelzEnabled = false;\n    }\n\n    this.channelzTrace = new ChannelzTrace();\n    this.channelzRef = registerChannelzChannel(\n      target,\n      () => this.getChannelzInfo(),\n      this.channelzEnabled\n    );\n    if (this.channelzEnabled) {\n      this.channelzTrace.addTrace('CT_INFO', 'Channel created');\n    }\n\n    if (this.options['grpc.default_authority']) {\n      this.defaultAuthority = this.options['grpc.default_authority'] as string;\n    } else {\n      this.defaultAuthority = getDefaultAuthority(defaultSchemeMapResult);\n    }\n    const proxyMapResult = mapProxyName(defaultSchemeMapResult, options);\n    this.target = proxyMapResult.target;\n    this.options = Object.assign({}, this.options, proxyMapResult.extraOptions);\n\n    /* The global boolean parameter to getSubchannelPool has the inverse meaning to what\n     * the grpc.use_local_subchannel_pool channel option means. */\n    this.subchannelPool = getSubchannelPool(\n      (options['grpc.use_local_subchannel_pool'] ?? 0) === 0\n    );\n    this.retryBufferTracker = new MessageBufferTracker(\n      options['grpc.retry_buffer_size'] ?? DEFAULT_RETRY_BUFFER_SIZE_BYTES,\n      options['grpc.per_rpc_retry_buffer_size'] ??\n        DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES\n    );\n    this.keepaliveTime = options['grpc.keepalive_time_ms'] ?? -1;\n    this.idleTimeoutMs = Math.max(\n      options['grpc.client_idle_timeout_ms'] ?? DEFAULT_IDLE_TIMEOUT_MS,\n      MIN_IDLE_TIMEOUT_MS\n    );\n    const channelControlHelper: ChannelControlHelper = {\n      createSubchannel: (\n        subchannelAddress: SubchannelAddress,\n        subchannelArgs: ChannelOptions\n      ) => {\n        const subchannel = this.subchannelPool.getOrCreateSubchannel(\n          this.target,\n          subchannelAddress,\n          Object.assign({}, this.options, subchannelArgs),\n          this.credentials\n        );\n        subchannel.throttleKeepalive(this.keepaliveTime);\n        if (this.channelzEnabled) {\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Created subchannel or used existing subchannel',\n            subchannel.getChannelzRef()\n          );\n        }\n        const wrappedSubchannel = new ChannelSubchannelWrapper(\n          subchannel,\n          this\n        );\n        this.wrappedSubchannels.add(wrappedSubchannel);\n        return wrappedSubchannel;\n      },\n      updateState: (connectivityState: ConnectivityState, picker: Picker) => {\n        this.currentPicker = picker;\n        const queueCopy = this.pickQueue.slice();\n        this.pickQueue = [];\n        if (queueCopy.length > 0) {\n          this.callRefTimerUnref();\n        }\n        for (const call of queueCopy) {\n          call.doPick();\n        }\n        this.updateState(connectivityState);\n      },\n      requestReresolution: () => {\n        // This should never be called.\n        throw new Error(\n          'Resolving load balancer should never call requestReresolution'\n        );\n      },\n      addChannelzChild: (child: ChannelRef | SubchannelRef) => {\n        if (this.channelzEnabled) {\n          this.childrenTracker.refChild(child);\n        }\n      },\n      removeChannelzChild: (child: ChannelRef | SubchannelRef) => {\n        if (this.channelzEnabled) {\n          this.childrenTracker.unrefChild(child);\n        }\n      },\n    };\n    this.resolvingLoadBalancer = new ResolvingLoadBalancer(\n      this.target,\n      channelControlHelper,\n      options,\n      (serviceConfig, configSelector) => {\n        if (serviceConfig.retryThrottling) {\n          RETRY_THROTTLER_MAP.set(\n            this.getTarget(),\n            new RetryThrottler(\n              serviceConfig.retryThrottling.maxTokens,\n              serviceConfig.retryThrottling.tokenRatio,\n              RETRY_THROTTLER_MAP.get(this.getTarget())\n            )\n          );\n        } else {\n          RETRY_THROTTLER_MAP.delete(this.getTarget());\n        }\n        if (this.channelzEnabled) {\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Address resolution succeeded'\n          );\n        }\n        this.configSelector = configSelector;\n        this.currentResolutionError = null;\n        /* We process the queue asynchronously to ensure that the corresponding\n         * load balancer update has completed. */\n        process.nextTick(() => {\n          const localQueue = this.configSelectionQueue;\n          this.configSelectionQueue = [];\n          if (localQueue.length > 0) {\n            this.callRefTimerUnref();\n          }\n          for (const call of localQueue) {\n            call.getConfig();\n          }\n        });\n      },\n      status => {\n        if (this.channelzEnabled) {\n          this.channelzTrace.addTrace(\n            'CT_WARNING',\n            'Address resolution failed with code ' +\n              status.code +\n              ' and details \"' +\n              status.details +\n              '\"'\n          );\n        }\n        if (this.configSelectionQueue.length > 0) {\n          this.trace(\n            'Name resolution failed with calls queued for config selection'\n          );\n        }\n        if (this.configSelector === null) {\n          this.currentResolutionError = {\n            ...restrictControlPlaneStatusCode(status.code, status.details),\n            metadata: status.metadata,\n          };\n        }\n        const localQueue = this.configSelectionQueue;\n        this.configSelectionQueue = [];\n        if (localQueue.length > 0) {\n          this.callRefTimerUnref();\n        }\n        for (const call of localQueue) {\n          call.reportResolverError(status);\n        }\n      }\n    );\n    this.filterStackFactory = new FilterStackFactory([\n      new CompressionFilterFactory(this, this.options),\n    ]);\n    this.trace(\n      'Channel constructed with options ' +\n        JSON.stringify(options, undefined, 2)\n    );\n    const error = new Error();\n    trace(\n      LogVerbosity.DEBUG,\n      'channel_stacktrace',\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        'Channel constructed \\n' +\n        error.stack?.substring(error.stack.indexOf('\\n') + 1)\n    );\n    this.lastActivityTimestamp = new Date();\n  }\n\n  private getChannelzInfo(): ChannelInfo {\n    return {\n      target: this.originalTarget,\n      state: this.connectivityState,\n      trace: this.channelzTrace,\n      callTracker: this.callTracker,\n      children: this.childrenTracker.getChildLists(),\n    };\n  }\n\n  private trace(text: string, verbosityOverride?: LogVerbosity) {\n    trace(\n      verbosityOverride ?? LogVerbosity.DEBUG,\n      'channel',\n      '(' + this.channelzRef.id + ') ' + uriToString(this.target) + ' ' + text\n    );\n  }\n\n  private callRefTimerRef() {\n    // If the hasRef function does not exist, always run the code\n    if (!this.callRefTimer.hasRef?.()) {\n      this.trace(\n        'callRefTimer.ref | configSelectionQueue.length=' +\n          this.configSelectionQueue.length +\n          ' pickQueue.length=' +\n          this.pickQueue.length\n      );\n      this.callRefTimer.ref?.();\n    }\n  }\n\n  private callRefTimerUnref() {\n    // If the hasRef function does not exist, always run the code\n    if (!this.callRefTimer.hasRef || this.callRefTimer.hasRef()) {\n      this.trace(\n        'callRefTimer.unref | configSelectionQueue.length=' +\n          this.configSelectionQueue.length +\n          ' pickQueue.length=' +\n          this.pickQueue.length\n      );\n      this.callRefTimer.unref?.();\n    }\n  }\n\n  private removeConnectivityStateWatcher(\n    watcherObject: ConnectivityStateWatcher\n  ) {\n    const watcherIndex = this.connectivityStateWatchers.findIndex(\n      value => value === watcherObject\n    );\n    if (watcherIndex >= 0) {\n      this.connectivityStateWatchers.splice(watcherIndex, 1);\n    }\n  }\n\n  private updateState(newState: ConnectivityState): void {\n    trace(\n      LogVerbosity.DEBUG,\n      'connectivity_state',\n      '(' +\n        this.channelzRef.id +\n        ') ' +\n        uriToString(this.target) +\n        ' ' +\n        ConnectivityState[this.connectivityState] +\n        ' -> ' +\n        ConnectivityState[newState]\n    );\n    if (this.channelzEnabled) {\n      this.channelzTrace.addTrace(\n        'CT_INFO',\n        'Connectivity state change to ' + ConnectivityState[newState]\n      );\n    }\n    this.connectivityState = newState;\n    const watchersCopy = this.connectivityStateWatchers.slice();\n    for (const watcherObject of watchersCopy) {\n      if (newState !== watcherObject.currentState) {\n        if (watcherObject.timer) {\n          clearTimeout(watcherObject.timer);\n        }\n        this.removeConnectivityStateWatcher(watcherObject);\n        watcherObject.callback();\n      }\n    }\n    if (newState !== ConnectivityState.TRANSIENT_FAILURE) {\n      this.currentResolutionError = null;\n    }\n  }\n\n  throttleKeepalive(newKeepaliveTime: number) {\n    if (newKeepaliveTime > this.keepaliveTime) {\n      this.keepaliveTime = newKeepaliveTime;\n      for (const wrappedSubchannel of this.wrappedSubchannels) {\n        wrappedSubchannel.throttleKeepalive(newKeepaliveTime);\n      }\n    }\n  }\n\n  removeWrappedSubchannel(wrappedSubchannel: ChannelSubchannelWrapper) {\n    this.wrappedSubchannels.delete(wrappedSubchannel);\n  }\n\n  doPick(metadata: Metadata, extraPickInfo: { [key: string]: string }) {\n    return this.currentPicker.pick({\n      metadata: metadata,\n      extraPickInfo: extraPickInfo,\n    });\n  }\n\n  queueCallForPick(call: LoadBalancingCall) {\n    this.pickQueue.push(call);\n    this.callRefTimerRef();\n  }\n\n  getConfig(method: string, metadata: Metadata): GetConfigResult {\n    this.resolvingLoadBalancer.exitIdle();\n    if (this.configSelector) {\n      return {\n        type: 'SUCCESS',\n        config: this.configSelector(method, metadata, this.randomChannelId),\n      };\n    } else {\n      if (this.currentResolutionError) {\n        return {\n          type: 'ERROR',\n          error: this.currentResolutionError,\n        };\n      } else {\n        return {\n          type: 'NONE',\n        };\n      }\n    }\n  }\n\n  queueCallForConfig(call: ResolvingCall) {\n    this.configSelectionQueue.push(call);\n    this.callRefTimerRef();\n  }\n\n  private enterIdle() {\n    this.resolvingLoadBalancer.destroy();\n    this.updateState(ConnectivityState.IDLE);\n    this.currentPicker = new QueuePicker(this.resolvingLoadBalancer);\n    if (this.idleTimer) {\n      clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n  }\n\n  private startIdleTimeout(timeoutMs: number) {\n    this.idleTimer = setTimeout(() => {\n      if (this.callCount > 0) {\n        /* If there is currently a call, the channel will not go idle for a\n         * period of at least idleTimeoutMs, so check again after that time.\n         */\n        this.startIdleTimeout(this.idleTimeoutMs);\n        return;\n      }\n      const now = new Date();\n      const timeSinceLastActivity =\n        now.valueOf() - this.lastActivityTimestamp.valueOf();\n      if (timeSinceLastActivity >= this.idleTimeoutMs) {\n        this.trace(\n          'Idle timer triggered after ' +\n            this.idleTimeoutMs +\n            'ms of inactivity'\n        );\n        this.enterIdle();\n      } else {\n        /* Whenever the timer fires with the latest activity being too recent,\n         * set the timer again for the time when the time since the last\n         * activity is equal to the timeout. This should result in the timer\n         * firing no more than once every idleTimeoutMs/2 on average. */\n        this.startIdleTimeout(this.idleTimeoutMs - timeSinceLastActivity);\n      }\n    }, timeoutMs);\n    this.idleTimer.unref?.();\n  }\n\n  private maybeStartIdleTimer() {\n    if (\n      this.connectivityState !== ConnectivityState.SHUTDOWN &&\n      !this.idleTimer\n    ) {\n      this.startIdleTimeout(this.idleTimeoutMs);\n    }\n  }\n\n  private onCallStart() {\n    if (this.channelzEnabled) {\n      this.callTracker.addCallStarted();\n    }\n    this.callCount += 1;\n  }\n\n  private onCallEnd(status: StatusObject) {\n    if (this.channelzEnabled) {\n      if (status.code === Status.OK) {\n        this.callTracker.addCallSucceeded();\n      } else {\n        this.callTracker.addCallFailed();\n      }\n    }\n    this.callCount -= 1;\n    this.lastActivityTimestamp = new Date();\n    this.maybeStartIdleTimer();\n  }\n\n  createLoadBalancingCall(\n    callConfig: CallConfig,\n    method: string,\n    host: string,\n    credentials: CallCredentials,\n    deadline: Deadline\n  ): LoadBalancingCall {\n    const callNumber = getNextCallNumber();\n    this.trace(\n      'createLoadBalancingCall [' + callNumber + '] method=\"' + method + '\"'\n    );\n    return new LoadBalancingCall(\n      this,\n      callConfig,\n      method,\n      host,\n      credentials,\n      deadline,\n      callNumber\n    );\n  }\n\n  createRetryingCall(\n    callConfig: CallConfig,\n    method: string,\n    host: string,\n    credentials: CallCredentials,\n    deadline: Deadline\n  ): RetryingCall {\n    const callNumber = getNextCallNumber();\n    this.trace(\n      'createRetryingCall [' + callNumber + '] method=\"' + method + '\"'\n    );\n    return new RetryingCall(\n      this,\n      callConfig,\n      method,\n      host,\n      credentials,\n      deadline,\n      callNumber,\n      this.retryBufferTracker,\n      RETRY_THROTTLER_MAP.get(this.getTarget())\n    );\n  }\n\n  createInnerCall(\n    callConfig: CallConfig,\n    method: string,\n    host: string,\n    credentials: CallCredentials,\n    deadline: Deadline\n  ): LoadBalancingCall | RetryingCall {\n    // Create a RetryingCall if retries are enabled\n    if (this.options['grpc.enable_retries'] === 0) {\n      return this.createLoadBalancingCall(\n        callConfig,\n        method,\n        host,\n        credentials,\n        deadline\n      );\n    } else {\n      return this.createRetryingCall(\n        callConfig,\n        method,\n        host,\n        credentials,\n        deadline\n      );\n    }\n  }\n\n  createResolvingCall(\n    method: string,\n    deadline: Deadline,\n    host: string | null | undefined,\n    parentCall: ServerSurfaceCall | null,\n    propagateFlags: number | null | undefined\n  ): ResolvingCall {\n    const callNumber = getNextCallNumber();\n    this.trace(\n      'createResolvingCall [' +\n        callNumber +\n        '] method=\"' +\n        method +\n        '\", deadline=' +\n        deadlineToString(deadline)\n    );\n    const finalOptions: CallStreamOptions = {\n      deadline: deadline,\n      flags: propagateFlags ?? Propagate.DEFAULTS,\n      host: host ?? this.defaultAuthority,\n      parentCall: parentCall,\n    };\n\n    const call = new ResolvingCall(\n      this,\n      method,\n      finalOptions,\n      this.filterStackFactory.clone(),\n      this.credentials._getCallCredentials(),\n      callNumber\n    );\n\n    this.onCallStart();\n    call.addStatusWatcher(status => {\n      this.onCallEnd(status);\n    });\n    return call;\n  }\n\n  close() {\n    this.resolvingLoadBalancer.destroy();\n    this.updateState(ConnectivityState.SHUTDOWN);\n    clearInterval(this.callRefTimer);\n    if (this.idleTimer) {\n      clearTimeout(this.idleTimer);\n    }\n    if (this.channelzEnabled) {\n      unregisterChannelzRef(this.channelzRef);\n    }\n\n    this.subchannelPool.unrefUnusedSubchannels();\n  }\n\n  getTarget() {\n    return uriToString(this.target);\n  }\n\n  getConnectivityState(tryToConnect: boolean) {\n    const connectivityState = this.connectivityState;\n    if (tryToConnect) {\n      this.resolvingLoadBalancer.exitIdle();\n      this.lastActivityTimestamp = new Date();\n      this.maybeStartIdleTimer();\n    }\n    return connectivityState;\n  }\n\n  watchConnectivityState(\n    currentState: ConnectivityState,\n    deadline: Date | number,\n    callback: (error?: Error) => void\n  ): void {\n    if (this.connectivityState === ConnectivityState.SHUTDOWN) {\n      throw new Error('Channel has been shut down');\n    }\n    let timer = null;\n    if (deadline !== Infinity) {\n      const deadlineDate: Date =\n        deadline instanceof Date ? deadline : new Date(deadline);\n      const now = new Date();\n      if (deadline === -Infinity || deadlineDate <= now) {\n        process.nextTick(\n          callback,\n          new Error('Deadline passed without connectivity state change')\n        );\n        return;\n      }\n      timer = setTimeout(() => {\n        this.removeConnectivityStateWatcher(watcherObject);\n        callback(\n          new Error('Deadline passed without connectivity state change')\n        );\n      }, deadlineDate.getTime() - now.getTime());\n    }\n    const watcherObject = {\n      currentState,\n      callback,\n      timer,\n    };\n    this.connectivityStateWatchers.push(watcherObject);\n  }\n\n  /**\n   * Get the channelz reference object for this channel. The returned value is\n   * garbage if channelz is disabled for this channel.\n   * @returns\n   */\n  getChannelzRef() {\n    return this.channelzRef;\n  }\n\n  createCall(\n    method: string,\n    deadline: Deadline,\n    host: string | null | undefined,\n    parentCall: ServerSurfaceCall | null,\n    propagateFlags: number | null | undefined\n  ): Call {\n    if (typeof method !== 'string') {\n      throw new TypeError('Channel#createCall: method must be a string');\n    }\n    if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n      throw new TypeError(\n        'Channel#createCall: deadline must be a number or Date'\n      );\n    }\n    if (this.connectivityState === ConnectivityState.SHUTDOWN) {\n      throw new Error('Channel has been shut down');\n    }\n    return this.createResolvingCall(\n      method,\n      deadline,\n      host,\n      parentCall,\n      propagateFlags\n    );\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelCredentials } from './channel-credentials';\nimport { ChannelOptions } from './channel-options';\nimport { ServerSurfaceCall } from './server-call';\n\nimport { ConnectivityState } from './connectivity-state';\nimport type { ChannelRef } from './channelz';\nimport { Call } from './call-interface';\nimport { InternalChannel } from './internal-channel';\nimport { Deadline } from './deadline';\n\n/**\n * An interface that represents a communication channel to a server specified\n * by a given address.\n */\nexport interface Channel {\n  /**\n   * Close the channel. This has the same functionality as the existing\n   * grpc.Client.prototype.close\n   */\n  close(): void;\n  /**\n   * Return the target that this channel connects to\n   */\n  getTarget(): string;\n  /**\n   * Get the channel's current connectivity state. This method is here mainly\n   * because it is in the existing internal Channel class, and there isn't\n   * another good place to put it.\n   * @param tryToConnect If true, the channel will start connecting if it is\n   *     idle. Otherwise, idle channels will only start connecting when a\n   *     call starts.\n   */\n  getConnectivityState(tryToConnect: boolean): ConnectivityState;\n  /**\n   * Watch for connectivity state changes. This is also here mainly because\n   * it is in the existing external Channel class.\n   * @param currentState The state to watch for transitions from. This should\n   *     always be populated by calling getConnectivityState immediately\n   *     before.\n   * @param deadline A deadline for waiting for a state change\n   * @param callback Called with no error when a state change, or with an\n   *     error if the deadline passes without a state change.\n   */\n  watchConnectivityState(\n    currentState: ConnectivityState,\n    deadline: Date | number,\n    callback: (error?: Error) => void\n  ): void;\n  /**\n   * Get the channelz reference object for this channel. A request to the\n   * channelz service for the id in this object will provide information\n   * about this channel.\n   */\n  getChannelzRef(): ChannelRef;\n  /**\n   * Create a call object. Call is an opaque type that is used by the Client\n   * class. This function is called by the gRPC library when starting a\n   * request. Implementers should return an instance of Call that is returned\n   * from calling createCall on an instance of the provided Channel class.\n   * @param method The full method string to request.\n   * @param deadline The call deadline\n   * @param host A host string override for making the request\n   * @param parentCall A server call to propagate some information from\n   * @param propagateFlags A bitwise combination of elements of grpc.propagate\n   *     that indicates what information to propagate from parentCall.\n   */\n  createCall(\n    method: string,\n    deadline: Deadline,\n    host: string | null | undefined,\n    parentCall: ServerSurfaceCall | null,\n    propagateFlags: number | null | undefined\n  ): Call;\n}\n\nexport class ChannelImplementation implements Channel {\n  private internalChannel: InternalChannel;\n\n  constructor(\n    target: string,\n    credentials: ChannelCredentials,\n    options: ChannelOptions\n  ) {\n    if (typeof target !== 'string') {\n      throw new TypeError('Channel target must be a string');\n    }\n    if (!(credentials instanceof ChannelCredentials)) {\n      throw new TypeError(\n        'Channel credentials must be a ChannelCredentials object'\n      );\n    }\n    if (options) {\n      if (typeof options !== 'object') {\n        throw new TypeError('Channel options must be an object');\n      }\n    }\n\n    this.internalChannel = new InternalChannel(target, credentials, options);\n  }\n\n  close() {\n    this.internalChannel.close();\n  }\n\n  getTarget() {\n    return this.internalChannel.getTarget();\n  }\n\n  getConnectivityState(tryToConnect: boolean) {\n    return this.internalChannel.getConnectivityState(tryToConnect);\n  }\n\n  watchConnectivityState(\n    currentState: ConnectivityState,\n    deadline: Date | number,\n    callback: (error?: Error) => void\n  ): void {\n    this.internalChannel.watchConnectivityState(\n      currentState,\n      deadline,\n      callback\n    );\n  }\n\n  /**\n   * Get the channelz reference object for this channel. The returned value is\n   * garbage if channelz is disabled for this channel.\n   * @returns\n   */\n  getChannelzRef() {\n    return this.internalChannel.getChannelzRef();\n  }\n\n  createCall(\n    method: string,\n    deadline: Deadline,\n    host: string | null | undefined,\n    parentCall: ServerSurfaceCall | null,\n    propagateFlags: number | null | undefined\n  ): Call {\n    if (typeof method !== 'string') {\n      throw new TypeError('Channel#createCall: method must be a string');\n    }\n    if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n      throw new TypeError(\n        'Channel#createCall: deadline must be a number or Date'\n      );\n    }\n    return this.internalChannel.createCall(\n      method,\n      deadline,\n      host,\n      parentCall,\n      propagateFlags\n    );\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { EventEmitter } from 'events';\nimport { Duplex, Readable, Writable } from 'stream';\n\nimport { Status } from './constants';\nimport type { Deserialize, Serialize } from './make-client';\nimport { Metadata } from './metadata';\nimport type { ObjectReadable, ObjectWritable } from './object-stream';\nimport type { StatusObject, PartialStatusObject } from './call-interface';\nimport type { Deadline } from './deadline';\nimport type { ServerInterceptingCallInterface } from './server-interceptors';\n\nexport type ServerStatusResponse = Partial<StatusObject>;\n\nexport type ServerErrorResponse = ServerStatusResponse & Error;\n\nexport type ServerSurfaceCall = {\n  cancelled: boolean;\n  readonly metadata: Metadata;\n  getPeer(): string;\n  sendMetadata(responseMetadata: Metadata): void;\n  getDeadline(): Deadline;\n  getPath(): string;\n} & EventEmitter;\n\nexport type ServerUnaryCall<RequestType, ResponseType> = ServerSurfaceCall & {\n  request: RequestType;\n};\nexport type ServerReadableStream<RequestType, ResponseType> =\n  ServerSurfaceCall & ObjectReadable<RequestType>;\nexport type ServerWritableStream<RequestType, ResponseType> =\n  ServerSurfaceCall &\n    ObjectWritable<ResponseType> & {\n      request: RequestType;\n      end: (metadata?: Metadata) => void;\n    };\nexport type ServerDuplexStream<RequestType, ResponseType> = ServerSurfaceCall &\n  ObjectReadable<RequestType> &\n  ObjectWritable<ResponseType> & { end: (metadata?: Metadata) => void };\n\nexport function serverErrorToStatus(\n  error: ServerErrorResponse | ServerStatusResponse,\n  overrideTrailers?: Metadata | undefined\n): PartialStatusObject {\n  const status: PartialStatusObject = {\n    code: Status.UNKNOWN,\n    details: 'message' in error ? error.message : 'Unknown Error',\n    metadata: overrideTrailers ?? error.metadata ?? null,\n  };\n\n  if (\n    'code' in error &&\n    typeof error.code === 'number' &&\n    Number.isInteger(error.code)\n  ) {\n    status.code = error.code;\n\n    if ('details' in error && typeof error.details === 'string') {\n      status.details = error.details!;\n    }\n  }\n  return status;\n}\n\nexport class ServerUnaryCallImpl<RequestType, ResponseType>\n  extends EventEmitter\n  implements ServerUnaryCall<RequestType, ResponseType>\n{\n  cancelled: boolean;\n\n  constructor(\n    private path: string,\n    private call: ServerInterceptingCallInterface,\n    public metadata: Metadata,\n    public request: RequestType\n  ) {\n    super();\n    this.cancelled = false;\n  }\n\n  getPeer(): string {\n    return this.call.getPeer();\n  }\n\n  sendMetadata(responseMetadata: Metadata): void {\n    this.call.sendMetadata(responseMetadata);\n  }\n\n  getDeadline(): Deadline {\n    return this.call.getDeadline();\n  }\n\n  getPath(): string {\n    return this.path;\n  }\n}\n\nexport class ServerReadableStreamImpl<RequestType, ResponseType>\n  extends Readable\n  implements ServerReadableStream<RequestType, ResponseType>\n{\n  cancelled: boolean;\n\n  constructor(\n    private path: string,\n    private call: ServerInterceptingCallInterface,\n    public metadata: Metadata\n  ) {\n    super({ objectMode: true });\n    this.cancelled = false;\n  }\n\n  _read(size: number) {\n    this.call.startRead();\n  }\n\n  getPeer(): string {\n    return this.call.getPeer();\n  }\n\n  sendMetadata(responseMetadata: Metadata): void {\n    this.call.sendMetadata(responseMetadata);\n  }\n\n  getDeadline(): Deadline {\n    return this.call.getDeadline();\n  }\n\n  getPath(): string {\n    return this.path;\n  }\n}\n\nexport class ServerWritableStreamImpl<RequestType, ResponseType>\n  extends Writable\n  implements ServerWritableStream<RequestType, ResponseType>\n{\n  cancelled: boolean;\n  private trailingMetadata: Metadata;\n  private pendingStatus: PartialStatusObject = {\n    code: Status.OK,\n    details: 'OK',\n  };\n\n  constructor(\n    private path: string,\n    private call: ServerInterceptingCallInterface,\n    public metadata: Metadata,\n    public request: RequestType\n  ) {\n    super({ objectMode: true });\n    this.cancelled = false;\n    this.trailingMetadata = new Metadata();\n\n    this.on('error', err => {\n      this.pendingStatus = serverErrorToStatus(err);\n      this.end();\n    });\n  }\n\n  getPeer(): string {\n    return this.call.getPeer();\n  }\n\n  sendMetadata(responseMetadata: Metadata): void {\n    this.call.sendMetadata(responseMetadata);\n  }\n\n  getDeadline(): Deadline {\n    return this.call.getDeadline();\n  }\n\n  getPath(): string {\n    return this.path;\n  }\n\n  _write(\n    chunk: ResponseType,\n    encoding: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (...args: any[]) => void\n  ) {\n    this.call.sendMessage(chunk, callback);\n  }\n\n  _final(callback: Function): void {\n    callback(null);\n    this.call.sendStatus({\n      ...this.pendingStatus,\n      metadata: this.pendingStatus.metadata ?? this.trailingMetadata,\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  end(metadata?: any) {\n    if (metadata) {\n      this.trailingMetadata = metadata;\n    }\n\n    return super.end();\n  }\n}\n\nexport class ServerDuplexStreamImpl<RequestType, ResponseType>\n  extends Duplex\n  implements ServerDuplexStream<RequestType, ResponseType>\n{\n  cancelled: boolean;\n  private trailingMetadata: Metadata;\n  private pendingStatus: PartialStatusObject = {\n    code: Status.OK,\n    details: 'OK',\n  };\n\n  constructor(\n    private path: string,\n    private call: ServerInterceptingCallInterface,\n    public metadata: Metadata\n  ) {\n    super({ objectMode: true });\n    this.cancelled = false;\n    this.trailingMetadata = new Metadata();\n\n    this.on('error', err => {\n      this.pendingStatus = serverErrorToStatus(err);\n      this.end();\n    });\n  }\n\n  getPeer(): string {\n    return this.call.getPeer();\n  }\n\n  sendMetadata(responseMetadata: Metadata): void {\n    this.call.sendMetadata(responseMetadata);\n  }\n\n  getDeadline(): Deadline {\n    return this.call.getDeadline();\n  }\n\n  getPath(): string {\n    return this.path;\n  }\n\n  _read(size: number) {\n    this.call.startRead();\n  }\n\n  _write(\n    chunk: ResponseType,\n    encoding: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (...args: any[]) => void\n  ) {\n    this.call.sendMessage(chunk, callback);\n  }\n\n  _final(callback: Function): void {\n    callback(null);\n    this.call.sendStatus({\n      ...this.pendingStatus,\n      metadata: this.pendingStatus.metadata ?? this.trailingMetadata,\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  end(metadata?: any) {\n    if (metadata) {\n      this.trailingMetadata = metadata;\n    }\n\n    return super.end();\n  }\n}\n\n// Unary response callback signature.\nexport type sendUnaryData<ResponseType> = (\n  error: ServerErrorResponse | ServerStatusResponse | null,\n  value?: ResponseType | null,\n  trailer?: Metadata,\n  flags?: number\n) => void;\n\n// User provided handler for unary calls.\nexport type handleUnaryCall<RequestType, ResponseType> = (\n  call: ServerUnaryCall<RequestType, ResponseType>,\n  callback: sendUnaryData<ResponseType>\n) => void;\n\n// User provided handler for client streaming calls.\nexport type handleClientStreamingCall<RequestType, ResponseType> = (\n  call: ServerReadableStream<RequestType, ResponseType>,\n  callback: sendUnaryData<ResponseType>\n) => void;\n\n// User provided handler for server streaming calls.\nexport type handleServerStreamingCall<RequestType, ResponseType> = (\n  call: ServerWritableStream<RequestType, ResponseType>\n) => void;\n\n// User provided handler for bidirectional streaming calls.\nexport type handleBidiStreamingCall<RequestType, ResponseType> = (\n  call: ServerDuplexStream<RequestType, ResponseType>\n) => void;\n\nexport type HandleCall<RequestType, ResponseType> =\n  | handleUnaryCall<RequestType, ResponseType>\n  | handleClientStreamingCall<RequestType, ResponseType>\n  | handleServerStreamingCall<RequestType, ResponseType>\n  | handleBidiStreamingCall<RequestType, ResponseType>;\n\nexport interface UnaryHandler<RequestType, ResponseType> {\n  func: handleUnaryCall<RequestType, ResponseType>;\n  serialize: Serialize<ResponseType>;\n  deserialize: Deserialize<RequestType>;\n  type: 'unary';\n  path: string;\n}\n\nexport interface ClientStreamingHandler<RequestType, ResponseType> {\n  func: handleClientStreamingCall<RequestType, ResponseType>;\n  serialize: Serialize<ResponseType>;\n  deserialize: Deserialize<RequestType>;\n  type: 'clientStream';\n  path: string;\n}\n\nexport interface ServerStreamingHandler<RequestType, ResponseType> {\n  func: handleServerStreamingCall<RequestType, ResponseType>;\n  serialize: Serialize<ResponseType>;\n  deserialize: Deserialize<RequestType>;\n  type: 'serverStream';\n  path: string;\n}\n\nexport interface BidiStreamingHandler<RequestType, ResponseType> {\n  func: handleBidiStreamingCall<RequestType, ResponseType>;\n  serialize: Serialize<ResponseType>;\n  deserialize: Deserialize<RequestType>;\n  type: 'bidi';\n  path: string;\n}\n\nexport type Handler<RequestType, ResponseType> =\n  | UnaryHandler<RequestType, ResponseType>\n  | ClientStreamingHandler<RequestType, ResponseType>\n  | ServerStreamingHandler<RequestType, ResponseType>\n  | BidiStreamingHandler<RequestType, ResponseType>;\n\nexport type HandlerType = 'bidi' | 'clientStream' | 'serverStream' | 'unary';\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { SecureServerOptions } from 'http2';\nimport { CIPHER_SUITES, getDefaultRootsData } from './tls-helpers';\n\nexport interface KeyCertPair {\n  private_key: Buffer;\n  cert_chain: Buffer;\n}\n\nexport abstract class ServerCredentials {\n  abstract _isSecure(): boolean;\n  abstract _getSettings(): SecureServerOptions | null;\n  abstract _equals(other: ServerCredentials): boolean;\n\n  static createInsecure(): ServerCredentials {\n    return new InsecureServerCredentials();\n  }\n\n  static createSsl(\n    rootCerts: Buffer | null,\n    keyCertPairs: KeyCertPair[],\n    checkClientCertificate = false\n  ): ServerCredentials {\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n\n    const cert: Buffer[] = [];\n    const key: Buffer[] = [];\n\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n\n    return new SecureServerCredentials({\n      ca: rootCerts ?? getDefaultRootsData() ?? undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: CIPHER_SUITES,\n    });\n  }\n}\n\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure(): boolean {\n    return false;\n  }\n\n  _getSettings(): null {\n    return null;\n  }\n\n  _equals(other: ServerCredentials): boolean {\n    return other instanceof InsecureServerCredentials;\n  }\n}\n\nclass SecureServerCredentials extends ServerCredentials {\n  private options: SecureServerOptions;\n\n  constructor(options: SecureServerOptions) {\n    super();\n    this.options = options;\n  }\n\n  _isSecure(): boolean {\n    return true;\n  }\n\n  _getSettings(): SecureServerOptions {\n    return this.options;\n  }\n\n  /**\n   * Checks equality by checking the options that are actually set by\n   * createSsl.\n   * @param other\n   * @returns\n   */\n  _equals(other: ServerCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!(other instanceof SecureServerCredentials)) {\n      return false;\n    }\n    // options.ca equality check\n    if (Buffer.isBuffer(this.options.ca) && Buffer.isBuffer(other.options.ca)) {\n      if (!this.options.ca.equals(other.options.ca)) {\n        return false;\n      }\n    } else {\n      if (this.options.ca !== other.options.ca) {\n        return false;\n      }\n    }\n    // options.cert equality check\n    if (Array.isArray(this.options.cert) && Array.isArray(other.options.cert)) {\n      if (this.options.cert.length !== other.options.cert.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.cert.length; i++) {\n        const thisCert = this.options.cert[i];\n        const otherCert = other.options.cert[i];\n        if (Buffer.isBuffer(thisCert) && Buffer.isBuffer(otherCert)) {\n          if (!thisCert.equals(otherCert)) {\n            return false;\n          }\n        } else {\n          if (thisCert !== otherCert) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.cert !== other.options.cert) {\n        return false;\n      }\n    }\n    // options.key equality check\n    if (Array.isArray(this.options.key) && Array.isArray(other.options.key)) {\n      if (this.options.key.length !== other.options.key.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.key.length; i++) {\n        const thisKey = this.options.key[i];\n        const otherKey = other.options.key[i];\n        if (Buffer.isBuffer(thisKey) && Buffer.isBuffer(otherKey)) {\n          if (!thisKey.equals(otherKey)) {\n            return false;\n          }\n        } else {\n          if (thisKey !== otherKey) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.key !== other.options.key) {\n        return false;\n      }\n    }\n    // options.requestCert equality check\n    if (this.options.requestCert !== other.options.requestCert) {\n      return false;\n    }\n    /* ciphers is derived from a value that is constant for the process, so no\n     * equality check is needed. */\n    return true;\n  }\n}\n", "/*\n * Copyright 2024 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { PartialStatusObject } from './call-interface';\nimport { ServerMethodDefinition } from './make-client';\nimport { Metadata } from './metadata';\nimport { ChannelOptions } from './channel-options';\nimport { Handler, ServerErrorResponse } from './server-call';\nimport { Deadline } from './deadline';\nimport {\n  DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH,\n  DEFAULT_MAX_SEND_MESSAGE_LENGTH,\n  LogVerbosity,\n  Status,\n} from './constants';\nimport * as http2 from 'http2';\nimport { getErrorMessage } from './error';\nimport * as zlib from 'zlib';\nimport { StreamDecoder } from './stream-decoder';\nimport { CallEventTracker } from './transport';\nimport * as logging from './logging';\n\nconst TRACER_NAME = 'server_call';\n\nfunction trace(text: string) {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\nexport interface ServerMetadataListener {\n  (metadata: Metadata, next: (metadata: Metadata) => void): void;\n}\n\nexport interface ServerMessageListener {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (message: any, next: (message: any) => void): void;\n}\n\nexport interface ServerHalfCloseListener {\n  (next: () => void): void;\n}\n\nexport interface ServerCancelListener {\n  (): void;\n}\n\nexport interface FullServerListener {\n  onReceiveMetadata: ServerMetadataListener;\n  onReceiveMessage: ServerMessageListener;\n  onReceiveHalfClose: ServerHalfCloseListener;\n  onCancel: ServerCancelListener;\n}\n\nexport type ServerListener = Partial<FullServerListener>;\n\nexport class ServerListenerBuilder {\n  private metadata: ServerMetadataListener | undefined = undefined;\n  private message: ServerMessageListener | undefined = undefined;\n  private halfClose: ServerHalfCloseListener | undefined = undefined;\n  private cancel: ServerCancelListener | undefined = undefined;\n\n  withOnReceiveMetadata(onReceiveMetadata: ServerMetadataListener): this {\n    this.metadata = onReceiveMetadata;\n    return this;\n  }\n\n  withOnReceiveMessage(onReceiveMessage: ServerMessageListener): this {\n    this.message = onReceiveMessage;\n    return this;\n  }\n\n  withOnReceiveHalfClose(onReceiveHalfClose: ServerHalfCloseListener): this {\n    this.halfClose = onReceiveHalfClose;\n    return this;\n  }\n\n  withOnCancel(onCancel: ServerCancelListener): this {\n    this.cancel = onCancel;\n    return this;\n  }\n\n  build(): ServerListener {\n    return {\n      onReceiveMetadata: this.metadata,\n      onReceiveMessage: this.message,\n      onReceiveHalfClose: this.halfClose,\n      onCancel: this.cancel,\n    };\n  }\n}\n\nexport interface InterceptingServerListener {\n  onReceiveMetadata(metadata: Metadata): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onReceiveMessage(message: any): void;\n  onReceiveHalfClose(): void;\n  onCancel(): void;\n}\n\nexport function isInterceptingServerListener(\n  listener: ServerListener | InterceptingServerListener\n): listener is InterceptingServerListener {\n  return (\n    listener.onReceiveMetadata !== undefined &&\n    listener.onReceiveMetadata.length === 1\n  );\n}\n\nclass InterceptingServerListenerImpl implements InterceptingServerListener {\n  /**\n   * Once the call is cancelled, ignore all other events.\n   */\n  private cancelled = false;\n  private processingMetadata = false;\n  private hasPendingMessage = false;\n  private pendingMessage: any = null;\n  private processingMessage = false;\n  private hasPendingHalfClose = false;\n\n  constructor(\n    private listener: FullServerListener,\n    private nextListener: InterceptingServerListener\n  ) {}\n\n  private processPendingMessage() {\n    if (this.hasPendingMessage) {\n      this.nextListener.onReceiveMessage(this.pendingMessage);\n      this.pendingMessage = null;\n      this.hasPendingMessage = false;\n    }\n  }\n\n  private processPendingHalfClose() {\n    if (this.hasPendingHalfClose) {\n      this.nextListener.onReceiveHalfClose();\n      this.hasPendingHalfClose = false;\n    }\n  }\n\n  onReceiveMetadata(metadata: Metadata): void {\n    if (this.cancelled) {\n      return;\n    }\n    this.processingMetadata = true;\n    this.listener.onReceiveMetadata(metadata, interceptedMetadata => {\n      this.processingMetadata = false;\n      if (this.cancelled) {\n        return;\n      }\n      this.nextListener.onReceiveMetadata(interceptedMetadata);\n      this.processPendingMessage();\n      this.processPendingHalfClose();\n    });\n  }\n  onReceiveMessage(message: any): void {\n    if (this.cancelled) {\n      return;\n    }\n    this.processingMessage = true;\n    this.listener.onReceiveMessage(message, msg => {\n      this.processingMessage = false;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.processingMetadata) {\n        this.pendingMessage = msg;\n        this.hasPendingMessage = true;\n      } else {\n        this.nextListener.onReceiveMessage(msg);\n        this.processPendingHalfClose();\n      }\n    });\n  }\n  onReceiveHalfClose(): void {\n    if (this.cancelled) {\n      return;\n    }\n    this.listener.onReceiveHalfClose(() => {\n      if (this.cancelled) {\n        return;\n      }\n      if (this.processingMetadata || this.processingMessage) {\n        this.hasPendingHalfClose = true;\n      } else {\n        this.nextListener.onReceiveHalfClose();\n      }\n    });\n  }\n  onCancel(): void {\n    this.cancelled = true;\n    this.listener.onCancel();\n    this.nextListener.onCancel();\n  }\n}\n\nexport interface StartResponder {\n  (next: (listener?: ServerListener) => void): void;\n}\n\nexport interface MetadataResponder {\n  (metadata: Metadata, next: (metadata: Metadata) => void): void;\n}\n\nexport interface MessageResponder {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (message: any, next: (message: any) => void): void;\n}\n\nexport interface StatusResponder {\n  (\n    status: PartialStatusObject,\n    next: (status: PartialStatusObject) => void\n  ): void;\n}\n\nexport interface FullResponder {\n  start: StartResponder;\n  sendMetadata: MetadataResponder;\n  sendMessage: MessageResponder;\n  sendStatus: StatusResponder;\n}\n\nexport type Responder = Partial<FullResponder>;\n\nexport class ResponderBuilder {\n  private start: StartResponder | undefined = undefined;\n  private metadata: MetadataResponder | undefined = undefined;\n  private message: MessageResponder | undefined = undefined;\n  private status: StatusResponder | undefined = undefined;\n\n  withStart(start: StartResponder): this {\n    this.start = start;\n    return this;\n  }\n\n  withSendMetadata(sendMetadata: MetadataResponder): this {\n    this.metadata = sendMetadata;\n    return this;\n  }\n\n  withSendMessage(sendMessage: MessageResponder): this {\n    this.message = sendMessage;\n    return this;\n  }\n\n  withSendStatus(sendStatus: StatusResponder): this {\n    this.status = sendStatus;\n    return this;\n  }\n\n  build(): Responder {\n    return {\n      start: this.start,\n      sendMetadata: this.metadata,\n      sendMessage: this.message,\n      sendStatus: this.status,\n    };\n  }\n}\n\nconst defaultServerListener: FullServerListener = {\n  onReceiveMetadata: (metadata, next) => {\n    next(metadata);\n  },\n  onReceiveMessage: (message, next) => {\n    next(message);\n  },\n  onReceiveHalfClose: next => {\n    next();\n  },\n  onCancel: () => {},\n};\n\nconst defaultResponder: FullResponder = {\n  start: next => {\n    next();\n  },\n  sendMetadata: (metadata, next) => {\n    next(metadata);\n  },\n  sendMessage: (message, next) => {\n    next(message);\n  },\n  sendStatus: (status, next) => {\n    next(status);\n  },\n};\n\nexport interface ServerInterceptingCallInterface {\n  /**\n   * Register the listener to handle inbound events.\n   */\n  start(listener: InterceptingServerListener): void;\n  /**\n   * Send response metadata.\n   */\n  sendMetadata(metadata: Metadata): void;\n  /**\n   * Send a response message.\n   */\n  sendMessage(message: any, callback: () => void): void;\n  /**\n   * End the call by sending this status.\n   */\n  sendStatus(status: PartialStatusObject): void;\n  /**\n   * Start a single read, eventually triggering either listener.onReceiveMessage or listener.onReceiveHalfClose.\n   */\n  startRead(): void;\n  /**\n   * Return the peer address of the client making the request, if known, or \"unknown\" otherwise\n   */\n  getPeer(): string;\n  /**\n   * Return the call deadline set by the client. The value is Infinity if there is no deadline.\n   */\n  getDeadline(): Deadline;\n}\n\nexport class ServerInterceptingCall implements ServerInterceptingCallInterface {\n  private responder: FullResponder;\n  private processingMetadata = false;\n  private processingMessage = false;\n  private pendingMessage: any = null;\n  private pendingMessageCallback: (() => void) | null = null;\n  private pendingStatus: PartialStatusObject | null = null;\n  constructor(\n    private nextCall: ServerInterceptingCallInterface,\n    responder?: Responder\n  ) {\n    this.responder = {\n      start: responder?.start ?? defaultResponder.start,\n      sendMetadata: responder?.sendMetadata ?? defaultResponder.sendMetadata,\n      sendMessage: responder?.sendMessage ?? defaultResponder.sendMessage,\n      sendStatus: responder?.sendStatus ?? defaultResponder.sendStatus,\n    };\n  }\n\n  private processPendingMessage() {\n    if (this.pendingMessageCallback) {\n      this.nextCall.sendMessage(\n        this.pendingMessage,\n        this.pendingMessageCallback\n      );\n      this.pendingMessage = null;\n      this.pendingMessageCallback = null;\n    }\n  }\n\n  private processPendingStatus() {\n    if (this.pendingStatus) {\n      this.nextCall.sendStatus(this.pendingStatus);\n      this.pendingStatus = null;\n    }\n  }\n\n  start(listener: InterceptingServerListener): void {\n    this.responder.start(interceptedListener => {\n      const fullInterceptedListener: FullServerListener = {\n        onReceiveMetadata:\n          interceptedListener?.onReceiveMetadata ??\n          defaultServerListener.onReceiveMetadata,\n        onReceiveMessage:\n          interceptedListener?.onReceiveMessage ??\n          defaultServerListener.onReceiveMessage,\n        onReceiveHalfClose:\n          interceptedListener?.onReceiveHalfClose ??\n          defaultServerListener.onReceiveHalfClose,\n        onCancel:\n          interceptedListener?.onCancel ?? defaultServerListener.onCancel,\n      };\n      const finalInterceptingListener = new InterceptingServerListenerImpl(\n        fullInterceptedListener,\n        listener\n      );\n      this.nextCall.start(finalInterceptingListener);\n    });\n  }\n  sendMetadata(metadata: Metadata): void {\n    this.processingMetadata = true;\n    this.responder.sendMetadata(metadata, interceptedMetadata => {\n      this.processingMetadata = false;\n      this.nextCall.sendMetadata(interceptedMetadata);\n      this.processPendingMessage();\n      this.processPendingStatus();\n    });\n  }\n  sendMessage(message: any, callback: () => void): void {\n    this.processingMessage = true;\n    this.responder.sendMessage(message, interceptedMessage => {\n      this.processingMessage = false;\n      if (this.processingMetadata) {\n        this.pendingMessage = interceptedMessage;\n        this.pendingMessageCallback = callback;\n      } else {\n        this.nextCall.sendMessage(interceptedMessage, callback);\n      }\n    });\n  }\n  sendStatus(status: PartialStatusObject): void {\n    this.responder.sendStatus(status, interceptedStatus => {\n      if (this.processingMetadata || this.processingMessage) {\n        this.pendingStatus = interceptedStatus;\n      } else {\n        this.nextCall.sendStatus(interceptedStatus);\n      }\n    });\n  }\n  startRead(): void {\n    this.nextCall.startRead();\n  }\n  getPeer(): string {\n    return this.nextCall.getPeer();\n  }\n  getDeadline(): Deadline {\n    return this.nextCall.getDeadline();\n  }\n}\n\nexport interface ServerInterceptor {\n  (\n    methodDescriptor: ServerMethodDefinition<any, any>,\n    call: ServerInterceptingCallInterface\n  ): ServerInterceptingCall;\n}\n\ninterface DeadlineUnitIndexSignature {\n  [name: string]: number;\n}\n\nconst GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nconst GRPC_ENCODING_HEADER = 'grpc-encoding';\nconst GRPC_MESSAGE_HEADER = 'grpc-message';\nconst GRPC_STATUS_HEADER = 'grpc-status';\nconst GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nconst DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nconst deadlineUnitsToMs: DeadlineUnitIndexSignature = {\n  H: 3600000,\n  M: 60000,\n  S: 1000,\n  m: 1,\n  u: 0.001,\n  n: 0.000001,\n};\n\nconst defaultCompressionHeaders = {\n  // TODO(cjihrig): Remove these encoding headers from the default response\n  // once compression is integrated.\n  [GRPC_ACCEPT_ENCODING_HEADER]: 'identity,deflate,gzip',\n  [GRPC_ENCODING_HEADER]: 'identity',\n};\nconst defaultResponseHeaders = {\n  [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n  [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n};\nconst defaultResponseOptions = {\n  waitForTrailers: true,\n} as http2.ServerStreamResponseOptions;\n\ntype ReadQueueEntryType = 'COMPRESSED' | 'READABLE' | 'HALF_CLOSE';\n\ninterface ReadQueueEntry {\n  type: ReadQueueEntryType;\n  compressedMessage: Buffer | null;\n  parsedMessage: any;\n}\n\nexport class BaseServerInterceptingCall\n  implements ServerInterceptingCallInterface\n{\n  private listener: InterceptingServerListener | null = null;\n  private metadata: Metadata;\n  private deadlineTimer: NodeJS.Timeout | null = null;\n  private deadline: Deadline = Infinity;\n  private maxSendMessageSize: number = DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n  private maxReceiveMessageSize: number = DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n  private cancelled = false;\n  private metadataSent = false;\n  private wantTrailers = false;\n  private cancelNotified = false;\n  private incomingEncoding = 'identity';\n  private decoder: StreamDecoder;\n  private readQueue: ReadQueueEntry[] = [];\n  private isReadPending = false;\n  private receivedHalfClose = false;\n  private streamEnded = false;\n\n  constructor(\n    private readonly stream: http2.ServerHttp2Stream,\n    headers: http2.IncomingHttpHeaders,\n    private readonly callEventTracker: CallEventTracker | null,\n    private readonly handler: Handler<any, any>,\n    options: ChannelOptions\n  ) {\n    this.stream.once('error', (err: ServerErrorResponse) => {\n      /* We need an error handler to avoid uncaught error event exceptions, but\n       * there is nothing we can reasonably do here. Any error event should\n       * have a corresponding close event, which handles emitting the cancelled\n       * event. And the stream is now in a bad state, so we can't reasonably\n       * expect to be able to send an error over it. */\n    });\n\n    this.stream.once('close', () => {\n      trace(\n        'Request to method ' +\n          this.handler?.path +\n          ' stream closed with rstCode ' +\n          this.stream.rstCode\n      );\n\n      if (this.callEventTracker && !this.streamEnded) {\n        this.streamEnded = true;\n        this.callEventTracker.onStreamEnd(false);\n        this.callEventTracker.onCallEnd({\n          code: Status.CANCELLED,\n          details: 'Stream closed before sending status',\n          metadata: null,\n        });\n      }\n\n      this.notifyOnCancel();\n    });\n\n    this.stream.on('data', (data: Buffer) => {\n      this.handleDataFrame(data);\n    });\n    this.stream.pause();\n\n    this.stream.on('end', () => {\n      this.handleEndEvent();\n    });\n\n    if ('grpc.max_send_message_length' in options) {\n      this.maxSendMessageSize = options['grpc.max_send_message_length']!;\n    }\n    if ('grpc.max_receive_message_length' in options) {\n      this.maxReceiveMessageSize = options['grpc.max_receive_message_length']!;\n    }\n\n    this.decoder = new StreamDecoder(this.maxReceiveMessageSize);\n\n    const metadata = Metadata.fromHttp2Headers(headers);\n\n    if (logging.isTracerEnabled(TRACER_NAME)) {\n      trace(\n        'Request to ' +\n          this.handler.path +\n          ' received headers ' +\n          JSON.stringify(metadata.toJSON())\n      );\n    }\n\n    const timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n\n    if (timeoutHeader.length > 0) {\n      this.handleTimeoutHeader(timeoutHeader[0] as string);\n    }\n\n    const encodingHeader = metadata.get(GRPC_ENCODING_HEADER);\n\n    if (encodingHeader.length > 0) {\n      this.incomingEncoding = encodingHeader[0] as string;\n    }\n\n    // Remove several headers that should not be propagated to the application\n    metadata.remove(GRPC_TIMEOUT_HEADER);\n    metadata.remove(GRPC_ENCODING_HEADER);\n    metadata.remove(GRPC_ACCEPT_ENCODING_HEADER);\n    metadata.remove(http2.constants.HTTP2_HEADER_ACCEPT_ENCODING);\n    metadata.remove(http2.constants.HTTP2_HEADER_TE);\n    metadata.remove(http2.constants.HTTP2_HEADER_CONTENT_TYPE);\n    this.metadata = metadata;\n  }\n\n  private handleTimeoutHeader(timeoutHeader: string) {\n    const match = timeoutHeader.toString().match(DEADLINE_REGEX);\n\n    if (match === null) {\n      const status: PartialStatusObject = {\n        code: Status.INTERNAL,\n        details: `Invalid ${GRPC_TIMEOUT_HEADER} value \"${timeoutHeader}\"`,\n        metadata: null,\n      };\n      // Wait for the constructor to complete before sending the error.\n      process.nextTick(() => {\n        this.sendStatus(status);\n      });\n      return;\n    }\n\n    const timeout = (+match[1] * deadlineUnitsToMs[match[2]]) | 0;\n\n    const now = new Date();\n    this.deadline = now.setMilliseconds(now.getMilliseconds() + timeout);\n    this.deadlineTimer = setTimeout(() => {\n      const status: PartialStatusObject = {\n        code: Status.DEADLINE_EXCEEDED,\n        details: 'Deadline exceeded',\n        metadata: null,\n      };\n      this.sendStatus(status);\n    }, timeout);\n  }\n\n  private checkCancelled(): boolean {\n    /* In some cases the stream can become destroyed before the close event\n     * fires. That creates a race condition that this check works around */\n    if (!this.cancelled && (this.stream.destroyed || this.stream.closed)) {\n      this.notifyOnCancel();\n      this.cancelled = true;\n    }\n    return this.cancelled;\n  }\n  private notifyOnCancel() {\n    if (this.cancelNotified) {\n      return;\n    }\n    this.cancelNotified = true;\n    this.cancelled = true;\n    process.nextTick(() => {\n      this.listener?.onCancel();\n    });\n    if (this.deadlineTimer) {\n      clearTimeout(this.deadlineTimer);\n    }\n    // Flush incoming data frames\n    this.stream.resume();\n  }\n\n  /**\n   * A server handler can start sending messages without explicitly sending\n   * metadata. In that case, we need to send headers before sending any\n   * messages. This function does that if necessary.\n   */\n  private maybeSendMetadata() {\n    if (!this.metadataSent) {\n      this.sendMetadata(new Metadata());\n    }\n  }\n\n  /**\n   * Serialize a message to a length-delimited byte string.\n   * @param value\n   * @returns\n   */\n  private serializeMessage(value: any) {\n    const messageBuffer = this.handler.serialize(value);\n    const byteLength = messageBuffer.byteLength;\n    const output = Buffer.allocUnsafe(byteLength + 5);\n    /* Note: response compression is currently not supported, so this\n     * compressed bit is always 0. */\n    output.writeUInt8(0, 0);\n    output.writeUInt32BE(byteLength, 1);\n    messageBuffer.copy(output, 5);\n    return output;\n  }\n\n  private decompressMessage(\n    message: Buffer,\n    encoding: string\n  ): Buffer | Promise<Buffer> {\n    const messageContents = message.subarray(5);\n    if (encoding === 'identity') {\n      return messageContents;\n    } else if (encoding === 'deflate' || encoding === 'gzip') {\n      let decompresser: zlib.Gunzip | zlib.Deflate;\n      if (encoding === 'deflate') {\n        decompresser = zlib.createInflate();\n      } else {\n        decompresser = zlib.createGunzip();\n      }\n      return new Promise((resolve, reject) => {\n        let totalLength = 0\n        const messageParts: Buffer[] = [];\n        decompresser.on('data', (chunk: Buffer) => {\n          messageParts.push(chunk);\n          totalLength += chunk.byteLength;\n          if (this.maxReceiveMessageSize !== -1 && totalLength > this.maxReceiveMessageSize) {\n            decompresser.destroy();\n            reject({\n              code: Status.RESOURCE_EXHAUSTED,\n              details: `Received message that decompresses to a size larger than ${this.maxReceiveMessageSize}`\n            });\n          }\n        });\n        decompresser.on('end', () => {\n          resolve(Buffer.concat(messageParts));\n        });\n        decompresser.write(messageContents);\n        decompresser.end();\n      });\n    } else {\n      return Promise.reject({\n        code: Status.UNIMPLEMENTED,\n        details: `Received message compressed with unsupported encoding \"${encoding}\"`,\n      });\n    }\n  }\n\n  private async decompressAndMaybePush(queueEntry: ReadQueueEntry) {\n    if (queueEntry.type !== 'COMPRESSED') {\n      throw new Error(`Invalid queue entry type: ${queueEntry.type}`);\n    }\n\n    const compressed = queueEntry.compressedMessage!.readUInt8(0) === 1;\n    const compressedMessageEncoding = compressed\n      ? this.incomingEncoding\n      : 'identity';\n    let decompressedMessage: Buffer;\n    try {\n      decompressedMessage = await this.decompressMessage(\n        queueEntry.compressedMessage!,\n        compressedMessageEncoding\n      );\n    } catch (err) {\n      this.sendStatus(err as PartialStatusObject);\n      return;\n    }\n    try {\n      queueEntry.parsedMessage = this.handler.deserialize(decompressedMessage);\n    } catch (err) {\n      this.sendStatus({\n        code: Status.INTERNAL,\n        details: `Error deserializing request: ${(err as Error).message}`,\n      });\n      return;\n    }\n    queueEntry.type = 'READABLE';\n    this.maybePushNextMessage();\n  }\n\n  private maybePushNextMessage() {\n    if (\n      this.listener &&\n      this.isReadPending &&\n      this.readQueue.length > 0 &&\n      this.readQueue[0].type !== 'COMPRESSED'\n    ) {\n      this.isReadPending = false;\n      const nextQueueEntry = this.readQueue.shift()!;\n      if (nextQueueEntry.type === 'READABLE') {\n        this.listener.onReceiveMessage(nextQueueEntry.parsedMessage);\n      } else {\n        // nextQueueEntry.type === 'HALF_CLOSE'\n        this.listener.onReceiveHalfClose();\n      }\n    }\n  }\n\n  private handleDataFrame(data: Buffer) {\n    if (this.checkCancelled()) {\n      return;\n    }\n    trace(\n      'Request to ' +\n        this.handler.path +\n        ' received data frame of size ' +\n        data.length\n    );\n    let rawMessages: Buffer[];\n    try {\n      rawMessages = this.decoder.write(data);\n    } catch (e) {\n      this.sendStatus({ code: Status.RESOURCE_EXHAUSTED, details: (e as Error).message });\n      return;\n    }\n\n    for (const messageBytes of rawMessages) {\n      this.stream.pause();\n      const queueEntry: ReadQueueEntry = {\n        type: 'COMPRESSED',\n        compressedMessage: messageBytes,\n        parsedMessage: null,\n      };\n      this.readQueue.push(queueEntry);\n      this.decompressAndMaybePush(queueEntry);\n      this.callEventTracker?.addMessageReceived();\n    }\n  }\n  private handleEndEvent() {\n    this.readQueue.push({\n      type: 'HALF_CLOSE',\n      compressedMessage: null,\n      parsedMessage: null,\n    });\n    this.receivedHalfClose = true;\n    this.maybePushNextMessage();\n  }\n  start(listener: InterceptingServerListener): void {\n    trace('Request to ' + this.handler.path + ' start called');\n    if (this.checkCancelled()) {\n      return;\n    }\n    this.listener = listener;\n    listener.onReceiveMetadata(this.metadata);\n  }\n  sendMetadata(metadata: Metadata): void {\n    if (this.checkCancelled()) {\n      return;\n    }\n\n    if (this.metadataSent) {\n      return;\n    }\n\n    this.metadataSent = true;\n    const custom = metadata ? metadata.toHttp2Headers() : null;\n    const headers = {\n      ...defaultResponseHeaders,\n      ...defaultCompressionHeaders,\n      ...custom,\n    };\n    this.stream.respond(headers, defaultResponseOptions);\n  }\n  sendMessage(message: any, callback: () => void): void {\n    if (this.checkCancelled()) {\n      return;\n    }\n    let response: Buffer;\n    try {\n      response = this.serializeMessage(message);\n    } catch (e) {\n      this.sendStatus({\n        code: Status.INTERNAL,\n        details: `Error serializing response: ${getErrorMessage(e)}`,\n        metadata: null,\n      });\n      return;\n    }\n\n    if (\n      this.maxSendMessageSize !== -1 &&\n      response.length - 5 > this.maxSendMessageSize\n    ) {\n      this.sendStatus({\n        code: Status.RESOURCE_EXHAUSTED,\n        details: `Sent message larger than max (${response.length} vs. ${this.maxSendMessageSize})`,\n        metadata: null,\n      });\n      return;\n    }\n    this.maybeSendMetadata();\n    trace(\n      'Request to ' +\n        this.handler.path +\n        ' sent data frame of size ' +\n        response.length\n    );\n    this.stream.write(response, error => {\n      if (error) {\n        this.sendStatus({\n          code: Status.INTERNAL,\n          details: `Error writing message: ${getErrorMessage(error)}`,\n          metadata: null,\n        });\n        return;\n      }\n      this.callEventTracker?.addMessageSent();\n      callback();\n    });\n  }\n  sendStatus(status: PartialStatusObject): void {\n    if (this.checkCancelled()) {\n      return;\n    }\n\n    trace(\n      'Request to method ' +\n        this.handler?.path +\n        ' ended with status code: ' +\n        Status[status.code] +\n        ' details: ' +\n        status.details\n    );\n\n    if (this.metadataSent) {\n      if (!this.wantTrailers) {\n        this.wantTrailers = true;\n        this.stream.once('wantTrailers', () => {\n          if (this.callEventTracker && !this.streamEnded) {\n            this.streamEnded = true;\n            this.callEventTracker.onStreamEnd(true);\n            this.callEventTracker.onCallEnd(status);\n          }\n          const trailersToSend = {\n            [GRPC_STATUS_HEADER]: status.code,\n            [GRPC_MESSAGE_HEADER]: encodeURI(status.details),\n            ...status.metadata?.toHttp2Headers(),\n          };\n\n          this.stream.sendTrailers(trailersToSend);\n          this.notifyOnCancel();\n        });\n        this.stream.end();\n      } else {\n        this.notifyOnCancel();\n      }\n    } else {\n      if (this.callEventTracker && !this.streamEnded) {\n        this.streamEnded = true;\n        this.callEventTracker.onStreamEnd(true);\n        this.callEventTracker.onCallEnd(status);\n      }\n      // Trailers-only response\n      const trailersToSend = {\n        [GRPC_STATUS_HEADER]: status.code,\n        [GRPC_MESSAGE_HEADER]: encodeURI(status.details),\n        ...defaultResponseHeaders,\n        ...status.metadata?.toHttp2Headers(),\n      };\n      this.stream.respond(trailersToSend, { endStream: true });\n      this.notifyOnCancel();\n    }\n  }\n  startRead(): void {\n    trace('Request to ' + this.handler.path + ' startRead called');\n    if (this.checkCancelled()) {\n      return;\n    }\n    this.isReadPending = true;\n    if (this.readQueue.length === 0) {\n      if (!this.receivedHalfClose) {\n        this.stream.resume();\n      }\n    } else {\n      this.maybePushNextMessage();\n    }\n  }\n  getPeer(): string {\n    const socket = this.stream.session?.socket;\n    if (socket?.remoteAddress) {\n      if (socket.remotePort) {\n        return `${socket.remoteAddress}:${socket.remotePort}`;\n      } else {\n        return socket.remoteAddress;\n      }\n    } else {\n      return 'unknown';\n    }\n  }\n  getDeadline(): Deadline {\n    return this.deadline;\n  }\n}\n\nexport function getServerInterceptingCall(\n  interceptors: ServerInterceptor[],\n  stream: http2.ServerHttp2Stream,\n  headers: http2.IncomingHttpHeaders,\n  callEventTracker: CallEventTracker | null,\n  handler: Handler<any, any>,\n  options: ChannelOptions\n) {\n  const methodDefinition: ServerMethodDefinition<any, any> = {\n    path: handler.path,\n    requestStream: handler.type === 'clientStream' || handler.type === 'bidi',\n    responseStream: handler.type === 'serverStream' || handler.type === 'bidi',\n    requestDeserialize: handler.deserialize,\n    responseSerialize: handler.serialize,\n  };\n  const baseCall = new BaseServerInterceptingCall(\n    stream,\n    headers,\n    callEventTracker,\n    handler,\n    options\n  );\n  return interceptors.reduce(\n    (call: ServerInterceptingCallInterface, interceptor: ServerInterceptor) => {\n      return interceptor(methodDefinition, call);\n    },\n    baseCall\n  );\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as http2 from 'http2';\nimport * as util from 'util';\n\nimport { ServiceError } from './call';\nimport { Status, LogVerbosity } from './constants';\nimport { Deserialize, Serialize, ServiceDefinition } from './make-client';\nimport { Metadata } from './metadata';\nimport {\n  BidiStreamingHandler,\n  ClientStreamingHandler,\n  HandleCall,\n  Handler,\n  HandlerType,\n  sendUnaryData,\n  ServerDuplexStream,\n  ServerDuplexStreamImpl,\n  ServerReadableStream,\n  ServerStreamingHandler,\n  ServerUnaryCall,\n  ServerWritableStream,\n  ServerWritableStreamImpl,\n  UnaryHandler,\n  ServerErrorResponse,\n  ServerStatusResponse,\n  serverErrorToStatus,\n} from './server-call';\nimport { ServerCredentials } from './server-credentials';\nimport { ChannelOptions } from './channel-options';\nimport {\n  createResolver,\n  ResolverListener,\n  mapUriDefaultScheme,\n} from './resolver';\nimport * as logging from './logging';\nimport {\n  SubchannelAddress,\n  isTcpSubchannelAddress,\n  subchannelAddressToString,\n  stringToSubchannelAddress,\n} from './subchannel-address';\nimport {\n  GrpcUri,\n  combineHostPort,\n  parseUri,\n  splitHostPort,\n  uriToString,\n} from './uri-parser';\nimport {\n  ChannelzCallTracker,\n  ChannelzCallTrackerStub,\n  ChannelzChildrenTracker,\n  ChannelzChildrenTrackerStub,\n  ChannelzTrace,\n  ChannelzTraceStub,\n  registerChannelzServer,\n  registerChannelzSocket,\n  ServerInfo,\n  ServerRef,\n  SocketInfo,\n  SocketRef,\n  TlsInfo,\n  unregisterChannelzRef,\n} from './channelz';\nimport { CipherNameAndProtocol, TLSSocket } from 'tls';\nimport {\n  ServerInterceptingCallInterface,\n  ServerInterceptor,\n  getServerInterceptingCall,\n} from './server-interceptors';\nimport { PartialStatusObject } from './call-interface';\nimport { CallEventTracker } from './transport';\n\nconst UNLIMITED_CONNECTION_AGE_MS = ~(1 << 31);\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst MAX_CONNECTION_IDLE_MS = ~(1 << 31);\n\nconst { HTTP2_HEADER_PATH } = http2.constants;\n\nconst TRACER_NAME = 'server';\nconst kMaxAge = Buffer.from('max_age');\n\ntype AnyHttp2Server = http2.Http2Server | http2.Http2SecureServer;\n\ninterface BindResult {\n  port: number;\n  count: number;\n  errors: string[];\n}\n\ninterface SingleAddressBindResult {\n  port: number;\n  error?: string;\n}\n\nfunction noop(): void {}\n\n/**\n * Decorator to wrap a class method with util.deprecate\n * @param message The message to output if the deprecated method is called\n * @returns\n */\nfunction deprecate(message: string) {\n  return function <This, Args extends any[], Return>(\n    target: (this: This, ...args: Args) => Return,\n    context: ClassMethodDecoratorContext<\n      This,\n      (this: This, ...args: Args) => Return\n    >\n  ) {\n    return util.deprecate(target, message);\n  };\n}\n\nfunction getUnimplementedStatusResponse(\n  methodName: string\n): PartialStatusObject {\n  return {\n    code: Status.UNIMPLEMENTED,\n    details: `The server does not implement the method ${methodName}`,\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype UntypedUnaryHandler = UnaryHandler<any, any>;\ntype UntypedClientStreamingHandler = ClientStreamingHandler<any, any>;\ntype UntypedServerStreamingHandler = ServerStreamingHandler<any, any>;\ntype UntypedBidiStreamingHandler = BidiStreamingHandler<any, any>;\nexport type UntypedHandleCall = HandleCall<any, any>;\ntype UntypedHandler = Handler<any, any>;\nexport interface UntypedServiceImplementation {\n  [name: string]: UntypedHandleCall;\n}\n\nfunction getDefaultHandler(handlerType: HandlerType, methodName: string) {\n  const unimplementedStatusResponse =\n    getUnimplementedStatusResponse(methodName);\n  switch (handlerType) {\n    case 'unary':\n      return (\n        call: ServerUnaryCall<any, any>,\n        callback: sendUnaryData<any>\n      ) => {\n        callback(unimplementedStatusResponse as ServiceError, null);\n      };\n    case 'clientStream':\n      return (\n        call: ServerReadableStream<any, any>,\n        callback: sendUnaryData<any>\n      ) => {\n        callback(unimplementedStatusResponse as ServiceError, null);\n      };\n    case 'serverStream':\n      return (call: ServerWritableStream<any, any>) => {\n        call.emit('error', unimplementedStatusResponse);\n      };\n    case 'bidi':\n      return (call: ServerDuplexStream<any, any>) => {\n        call.emit('error', unimplementedStatusResponse);\n      };\n    default:\n      throw new Error(`Invalid handlerType ${handlerType}`);\n  }\n}\n\ninterface ChannelzSessionInfo {\n  ref: SocketRef;\n  streamTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n  messagesSent: number;\n  messagesReceived: number;\n  keepAlivesSent: number;\n  lastMessageSentTimestamp: Date | null;\n  lastMessageReceivedTimestamp: Date | null;\n}\n\n/**\n * Information related to a single invocation of bindAsync. This should be\n * tracked in a map keyed by target string, normalized with a pass through\n * parseUri -> mapUriDefaultScheme -> uriToString. If the target has a port\n * number and the port number is 0, the target string is modified with the\n * concrete bound port.\n */\ninterface BoundPort {\n  /**\n   * The key used to refer to this object in the boundPorts map.\n   */\n  mapKey: string;\n  /**\n   * The target string, passed through parseUri -> mapUriDefaultScheme. Used\n   * to determine the final key when the port number is 0.\n   */\n  originalUri: GrpcUri;\n  /**\n   * If there is a pending bindAsync operation, this is a promise that resolves\n   * with the port number when that operation succeeds. If there is no such\n   * operation pending, this is null.\n   */\n  completionPromise: Promise<number> | null;\n  /**\n   * The port number that was actually bound. Populated only after\n   * completionPromise resolves.\n   */\n  portNumber: number;\n  /**\n   * Set by unbind if called while pending is true.\n   */\n  cancelled: boolean;\n  /**\n   * The credentials object passed to the original bindAsync call.\n   */\n  credentials: ServerCredentials;\n  /**\n   * The set of servers associated with this listening port. A target string\n   * that expands to multiple addresses will result in multiple listening\n   * servers.\n   */\n  listeningServers: Set<AnyHttp2Server>;\n}\n\n/**\n * Should be in a map keyed by AnyHttp2Server.\n */\ninterface Http2ServerInfo {\n  channelzRef: SocketRef;\n  sessions: Set<http2.ServerHttp2Session>;\n}\n\ninterface SessionIdleTimeoutTracker {\n  activeStreams: number;\n  lastIdle: number;\n  timeout: NodeJS.Timeout;\n  onClose: (session: http2.ServerHttp2Session) => void | null;\n}\n\nexport interface ServerOptions extends ChannelOptions {\n  interceptors?: ServerInterceptor[];\n}\n\nexport class Server {\n  private boundPorts: Map<string, BoundPort> = new Map();\n  private http2Servers: Map<AnyHttp2Server, Http2ServerInfo> = new Map();\n  private sessionIdleTimeouts = new Map<\n    http2.ServerHttp2Session,\n    SessionIdleTimeoutTracker\n  >();\n\n  private handlers: Map<string, UntypedHandler> = new Map<\n    string,\n    UntypedHandler\n  >();\n  private sessions = new Map<http2.ServerHttp2Session, ChannelzSessionInfo>();\n  /**\n   * This field only exists to ensure that the start method throws an error if\n   * it is called twice, as it did previously.\n   */\n  private started = false;\n  private shutdown = false;\n  private options: ServerOptions;\n  private serverAddressString = 'null';\n\n  // Channelz Info\n  private readonly channelzEnabled: boolean = true;\n  private channelzRef: ServerRef;\n  private channelzTrace: ChannelzTrace | ChannelzTraceStub;\n  private callTracker: ChannelzCallTracker | ChannelzCallTrackerStub;\n  private listenerChildrenTracker:\n    | ChannelzChildrenTracker\n    | ChannelzChildrenTrackerStub;\n  private sessionChildrenTracker:\n    | ChannelzChildrenTracker\n    | ChannelzChildrenTrackerStub;\n\n  private readonly maxConnectionAgeMs: number;\n  private readonly maxConnectionAgeGraceMs: number;\n\n  private readonly keepaliveTimeMs: number;\n  private readonly keepaliveTimeoutMs: number;\n\n  private readonly sessionIdleTimeout: number;\n\n  private readonly interceptors: ServerInterceptor[];\n\n  /**\n   * Options that will be used to construct all Http2Server instances for this\n   * Server.\n   */\n  private commonServerOptions: http2.ServerOptions;\n\n  constructor(options?: ServerOptions) {\n    this.options = options ?? {};\n    if (this.options['grpc.enable_channelz'] === 0) {\n      this.channelzEnabled = false;\n      this.channelzTrace = new ChannelzTraceStub();\n      this.callTracker = new ChannelzCallTrackerStub();\n      this.listenerChildrenTracker = new ChannelzChildrenTrackerStub();\n      this.sessionChildrenTracker = new ChannelzChildrenTrackerStub();\n    } else {\n      this.channelzTrace = new ChannelzTrace();\n      this.callTracker = new ChannelzCallTracker();\n      this.listenerChildrenTracker = new ChannelzChildrenTracker();\n      this.sessionChildrenTracker = new ChannelzChildrenTracker();\n    }\n\n    this.channelzRef = registerChannelzServer(\n      'server',\n      () => this.getChannelzInfo(),\n      this.channelzEnabled\n    );\n\n    this.channelzTrace.addTrace('CT_INFO', 'Server created');\n    this.maxConnectionAgeMs =\n      this.options['grpc.max_connection_age_ms'] ?? UNLIMITED_CONNECTION_AGE_MS;\n    this.maxConnectionAgeGraceMs =\n      this.options['grpc.max_connection_age_grace_ms'] ??\n      UNLIMITED_CONNECTION_AGE_MS;\n    this.keepaliveTimeMs =\n      this.options['grpc.keepalive_time_ms'] ?? KEEPALIVE_MAX_TIME_MS;\n    this.keepaliveTimeoutMs =\n      this.options['grpc.keepalive_timeout_ms'] ?? KEEPALIVE_TIMEOUT_MS;\n    this.sessionIdleTimeout =\n      this.options['grpc.max_connection_idle_ms'] ?? MAX_CONNECTION_IDLE_MS;\n\n    this.commonServerOptions = {\n      maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER,\n    };\n    if ('grpc-node.max_session_memory' in this.options) {\n      this.commonServerOptions.maxSessionMemory =\n        this.options['grpc-node.max_session_memory'];\n    } else {\n      /* By default, set a very large max session memory limit, to effectively\n       * disable enforcement of the limit. Some testing indicates that Node's\n       * behavior degrades badly when this limit is reached, so we solve that\n       * by disabling the check entirely. */\n      this.commonServerOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n    }\n    if ('grpc.max_concurrent_streams' in this.options) {\n      this.commonServerOptions.settings = {\n        maxConcurrentStreams: this.options['grpc.max_concurrent_streams'],\n      };\n    }\n    this.interceptors = this.options.interceptors ?? [];\n    this.trace('Server constructed');\n  }\n\n  private getChannelzInfo(): ServerInfo {\n    return {\n      trace: this.channelzTrace,\n      callTracker: this.callTracker,\n      listenerChildren: this.listenerChildrenTracker.getChildLists(),\n      sessionChildren: this.sessionChildrenTracker.getChildLists(),\n    };\n  }\n\n  private getChannelzSessionInfo(\n    session: http2.ServerHttp2Session\n  ): SocketInfo {\n    const sessionInfo = this.sessions.get(session)!;\n    const sessionSocket = session.socket;\n    const remoteAddress = sessionSocket.remoteAddress\n      ? stringToSubchannelAddress(\n          sessionSocket.remoteAddress,\n          sessionSocket.remotePort\n        )\n      : null;\n    const localAddress = sessionSocket.localAddress\n      ? stringToSubchannelAddress(\n          sessionSocket.localAddress!,\n          sessionSocket.localPort\n        )\n      : null;\n    let tlsInfo: TlsInfo | null;\n    if (session.encrypted) {\n      const tlsSocket: TLSSocket = sessionSocket as TLSSocket;\n      const cipherInfo: CipherNameAndProtocol & { standardName?: string } =\n        tlsSocket.getCipher();\n      const certificate = tlsSocket.getCertificate();\n      const peerCertificate = tlsSocket.getPeerCertificate();\n      tlsInfo = {\n        cipherSuiteStandardName: cipherInfo.standardName ?? null,\n        cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n        localCertificate:\n          certificate && 'raw' in certificate ? certificate.raw : null,\n        remoteCertificate:\n          peerCertificate && 'raw' in peerCertificate\n            ? peerCertificate.raw\n            : null,\n      };\n    } else {\n      tlsInfo = null;\n    }\n    const socketInfo: SocketInfo = {\n      remoteAddress: remoteAddress,\n      localAddress: localAddress,\n      security: tlsInfo,\n      remoteName: null,\n      streamsStarted: sessionInfo.streamTracker.callsStarted,\n      streamsSucceeded: sessionInfo.streamTracker.callsSucceeded,\n      streamsFailed: sessionInfo.streamTracker.callsFailed,\n      messagesSent: sessionInfo.messagesSent,\n      messagesReceived: sessionInfo.messagesReceived,\n      keepAlivesSent: sessionInfo.keepAlivesSent,\n      lastLocalStreamCreatedTimestamp: null,\n      lastRemoteStreamCreatedTimestamp:\n        sessionInfo.streamTracker.lastCallStartedTimestamp,\n      lastMessageSentTimestamp: sessionInfo.lastMessageSentTimestamp,\n      lastMessageReceivedTimestamp: sessionInfo.lastMessageReceivedTimestamp,\n      localFlowControlWindow: session.state.localWindowSize ?? null,\n      remoteFlowControlWindow: session.state.remoteWindowSize ?? null,\n    };\n    return socketInfo;\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '(' + this.channelzRef.id + ') ' + text\n    );\n  }\n\n  private keepaliveTrace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      'keepalive',\n      '(' + this.channelzRef.id + ') ' + text\n    );\n  }\n\n  addProtoService(): never {\n    throw new Error('Not implemented. Use addService() instead');\n  }\n\n  addService(\n    service: ServiceDefinition,\n    implementation: UntypedServiceImplementation\n  ): void {\n    if (\n      service === null ||\n      typeof service !== 'object' ||\n      implementation === null ||\n      typeof implementation !== 'object'\n    ) {\n      throw new Error('addService() requires two objects as arguments');\n    }\n\n    const serviceKeys = Object.keys(service);\n\n    if (serviceKeys.length === 0) {\n      throw new Error('Cannot add an empty service to a server');\n    }\n\n    serviceKeys.forEach(name => {\n      const attrs = service[name];\n      let methodType: HandlerType;\n\n      if (attrs.requestStream) {\n        if (attrs.responseStream) {\n          methodType = 'bidi';\n        } else {\n          methodType = 'clientStream';\n        }\n      } else {\n        if (attrs.responseStream) {\n          methodType = 'serverStream';\n        } else {\n          methodType = 'unary';\n        }\n      }\n\n      let implFn = implementation[name];\n      let impl;\n\n      if (implFn === undefined && typeof attrs.originalName === 'string') {\n        implFn = implementation[attrs.originalName];\n      }\n\n      if (implFn !== undefined) {\n        impl = implFn.bind(implementation);\n      } else {\n        impl = getDefaultHandler(methodType, name);\n      }\n\n      const success = this.register(\n        attrs.path,\n        impl as UntypedHandleCall,\n        attrs.responseSerialize,\n        attrs.requestDeserialize,\n        methodType\n      );\n\n      if (success === false) {\n        throw new Error(`Method handler for ${attrs.path} already provided.`);\n      }\n    });\n  }\n\n  removeService(service: ServiceDefinition): void {\n    if (service === null || typeof service !== 'object') {\n      throw new Error('removeService() requires object as argument');\n    }\n\n    const serviceKeys = Object.keys(service);\n    serviceKeys.forEach(name => {\n      const attrs = service[name];\n      this.unregister(attrs.path);\n    });\n  }\n\n  bind(port: string, creds: ServerCredentials): never {\n    throw new Error('Not implemented. Use bindAsync() instead');\n  }\n\n  private registerListenerToChannelz(boundAddress: SubchannelAddress) {\n    return registerChannelzSocket(\n      subchannelAddressToString(boundAddress),\n      () => {\n        return {\n          localAddress: boundAddress,\n          remoteAddress: null,\n          security: null,\n          remoteName: null,\n          streamsStarted: 0,\n          streamsSucceeded: 0,\n          streamsFailed: 0,\n          messagesSent: 0,\n          messagesReceived: 0,\n          keepAlivesSent: 0,\n          lastLocalStreamCreatedTimestamp: null,\n          lastRemoteStreamCreatedTimestamp: null,\n          lastMessageSentTimestamp: null,\n          lastMessageReceivedTimestamp: null,\n          localFlowControlWindow: null,\n          remoteFlowControlWindow: null,\n        };\n      },\n      this.channelzEnabled\n    );\n  }\n\n  private createHttp2Server(credentials: ServerCredentials) {\n    let http2Server: http2.Http2Server | http2.Http2SecureServer;\n    if (credentials._isSecure()) {\n      const secureServerOptions = Object.assign(\n        this.commonServerOptions,\n        credentials._getSettings()!\n      );\n      secureServerOptions.enableTrace =\n        this.options['grpc-node.tls_enable_trace'] === 1;\n      http2Server = http2.createSecureServer(secureServerOptions);\n      http2Server.on('secureConnection', (socket: TLSSocket) => {\n        /* These errors need to be handled by the user of Http2SecureServer,\n         * according to https://github.com/nodejs/node/issues/35824 */\n        socket.on('error', (e: Error) => {\n          this.trace(\n            'An incoming TLS connection closed with error: ' + e.message\n          );\n        });\n      });\n    } else {\n      http2Server = http2.createServer(this.commonServerOptions);\n    }\n\n    http2Server.setTimeout(0, noop);\n    this._setupHandlers(http2Server);\n    return http2Server;\n  }\n\n  private bindOneAddress(\n    address: SubchannelAddress,\n    boundPortObject: BoundPort\n  ): Promise<SingleAddressBindResult> {\n    this.trace('Attempting to bind ' + subchannelAddressToString(address));\n    const http2Server = this.createHttp2Server(boundPortObject.credentials);\n    return new Promise<SingleAddressBindResult>((resolve, reject) => {\n      const onError = (err: Error) => {\n        this.trace(\n          'Failed to bind ' +\n            subchannelAddressToString(address) +\n            ' with error ' +\n            err.message\n        );\n        resolve({\n          port: 'port' in address ? address.port : 1,\n          error: err.message,\n        });\n      };\n\n      http2Server.once('error', onError);\n\n      http2Server.listen(address, () => {\n        const boundAddress = http2Server.address()!;\n        let boundSubchannelAddress: SubchannelAddress;\n        if (typeof boundAddress === 'string') {\n          boundSubchannelAddress = {\n            path: boundAddress,\n          };\n        } else {\n          boundSubchannelAddress = {\n            host: boundAddress.address,\n            port: boundAddress.port,\n          };\n        }\n\n        const channelzRef = this.registerListenerToChannelz(\n          boundSubchannelAddress\n        );\n        this.listenerChildrenTracker.refChild(channelzRef);\n\n        this.http2Servers.set(http2Server, {\n          channelzRef: channelzRef,\n          sessions: new Set(),\n        });\n        boundPortObject.listeningServers.add(http2Server);\n        this.trace(\n          'Successfully bound ' +\n            subchannelAddressToString(boundSubchannelAddress)\n        );\n        resolve({\n          port:\n            'port' in boundSubchannelAddress ? boundSubchannelAddress.port : 1,\n        });\n        http2Server.removeListener('error', onError);\n      });\n    });\n  }\n\n  private async bindManyPorts(\n    addressList: SubchannelAddress[],\n    boundPortObject: BoundPort\n  ): Promise<BindResult> {\n    if (addressList.length === 0) {\n      return {\n        count: 0,\n        port: 0,\n        errors: [],\n      };\n    }\n    if (isTcpSubchannelAddress(addressList[0]) && addressList[0].port === 0) {\n      /* If binding to port 0, first try to bind the first address, then bind\n       * the rest of the address list to the specific port that it binds. */\n      const firstAddressResult = await this.bindOneAddress(\n        addressList[0],\n        boundPortObject\n      );\n      if (firstAddressResult.error) {\n        /* If the first address fails to bind, try the same operation starting\n         * from the second item in the list. */\n        const restAddressResult = await this.bindManyPorts(\n          addressList.slice(1),\n          boundPortObject\n        );\n        return {\n          ...restAddressResult,\n          errors: [firstAddressResult.error, ...restAddressResult.errors],\n        };\n      } else {\n        const restAddresses = addressList\n          .slice(1)\n          .map(address =>\n            isTcpSubchannelAddress(address)\n              ? { host: address.host, port: firstAddressResult.port }\n              : address\n          );\n        const restAddressResult = await Promise.all(\n          restAddresses.map(address =>\n            this.bindOneAddress(address, boundPortObject)\n          )\n        );\n        const allResults = [firstAddressResult, ...restAddressResult];\n        return {\n          count: allResults.filter(result => result.error === undefined).length,\n          port: firstAddressResult.port,\n          errors: allResults\n            .filter(result => result.error)\n            .map(result => result.error!),\n        };\n      }\n    } else {\n      const allResults = await Promise.all(\n        addressList.map(address =>\n          this.bindOneAddress(address, boundPortObject)\n        )\n      );\n      return {\n        count: allResults.filter(result => result.error === undefined).length,\n        port: allResults[0].port,\n        errors: allResults\n          .filter(result => result.error)\n          .map(result => result.error!),\n      };\n    }\n  }\n\n  private async bindAddressList(\n    addressList: SubchannelAddress[],\n    boundPortObject: BoundPort\n  ): Promise<number> {\n    const bindResult = await this.bindManyPorts(addressList, boundPortObject);\n    if (bindResult.count > 0) {\n      if (bindResult.count < addressList.length) {\n        logging.log(\n          LogVerbosity.INFO,\n          `WARNING Only ${bindResult.count} addresses added out of total ${addressList.length} resolved`\n        );\n      }\n      return bindResult.port;\n    } else {\n      const errorString = `No address added out of total ${addressList.length} resolved`;\n      logging.log(LogVerbosity.ERROR, errorString);\n      throw new Error(\n        `${errorString} errors: [${bindResult.errors.join(',')}]`\n      );\n    }\n  }\n\n  private resolvePort(port: GrpcUri): Promise<SubchannelAddress[]> {\n    return new Promise<SubchannelAddress[]>((resolve, reject) => {\n      const resolverListener: ResolverListener = {\n        onSuccessfulResolution: (\n          endpointList,\n          serviceConfig,\n          serviceConfigError\n        ) => {\n          // We only want one resolution result. Discard all future results\n          resolverListener.onSuccessfulResolution = () => {};\n          const addressList = ([] as SubchannelAddress[]).concat(\n            ...endpointList.map(endpoint => endpoint.addresses)\n          );\n          if (addressList.length === 0) {\n            reject(new Error(`No addresses resolved for port ${port}`));\n            return;\n          }\n          resolve(addressList);\n        },\n        onError: error => {\n          reject(new Error(error.details));\n        },\n      };\n      const resolver = createResolver(port, resolverListener, this.options);\n      resolver.updateResolution();\n    });\n  }\n\n  private async bindPort(\n    port: GrpcUri,\n    boundPortObject: BoundPort\n  ): Promise<number> {\n    const addressList = await this.resolvePort(port);\n    if (boundPortObject.cancelled) {\n      this.completeUnbind(boundPortObject);\n      throw new Error('bindAsync operation cancelled by unbind call');\n    }\n    const portNumber = await this.bindAddressList(addressList, boundPortObject);\n    if (boundPortObject.cancelled) {\n      this.completeUnbind(boundPortObject);\n      throw new Error('bindAsync operation cancelled by unbind call');\n    }\n    return portNumber;\n  }\n\n  private normalizePort(port: string): GrpcUri {\n    const initialPortUri = parseUri(port);\n    if (initialPortUri === null) {\n      throw new Error(`Could not parse port \"${port}\"`);\n    }\n    const portUri = mapUriDefaultScheme(initialPortUri);\n    if (portUri === null) {\n      throw new Error(`Could not get a default scheme for port \"${port}\"`);\n    }\n    return portUri;\n  }\n\n  bindAsync(\n    port: string,\n    creds: ServerCredentials,\n    callback: (error: Error | null, port: number) => void\n  ): void {\n    if (this.shutdown) {\n      throw new Error('bindAsync called after shutdown');\n    }\n    if (typeof port !== 'string') {\n      throw new TypeError('port must be a string');\n    }\n\n    if (creds === null || !(creds instanceof ServerCredentials)) {\n      throw new TypeError('creds must be a ServerCredentials object');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n\n    this.trace('bindAsync port=' + port);\n\n    const portUri = this.normalizePort(port);\n\n    const deferredCallback = (error: Error | null, port: number) => {\n      process.nextTick(() => callback(error, port));\n    };\n\n    /* First, if this port is already bound or that bind operation is in\n     * progress, use that result. */\n    let boundPortObject = this.boundPorts.get(uriToString(portUri));\n    if (boundPortObject) {\n      if (!creds._equals(boundPortObject.credentials)) {\n        deferredCallback(\n          new Error(`${port} already bound with incompatible credentials`),\n          0\n        );\n        return;\n      }\n      /* If that operation has previously been cancelled by an unbind call,\n       * uncancel it. */\n      boundPortObject.cancelled = false;\n      if (boundPortObject.completionPromise) {\n        boundPortObject.completionPromise.then(\n          portNum => callback(null, portNum),\n          error => callback(error as Error, 0)\n        );\n      } else {\n        deferredCallback(null, boundPortObject.portNumber);\n      }\n      return;\n    }\n    boundPortObject = {\n      mapKey: uriToString(portUri),\n      originalUri: portUri,\n      completionPromise: null,\n      cancelled: false,\n      portNumber: 0,\n      credentials: creds,\n      listeningServers: new Set(),\n    };\n    const splitPort = splitHostPort(portUri.path);\n    const completionPromise = this.bindPort(portUri, boundPortObject);\n    boundPortObject.completionPromise = completionPromise;\n    /* If the port number is 0, defer populating the map entry until after the\n     * bind operation completes and we have a specific port number. Otherwise,\n     * populate it immediately. */\n    if (splitPort?.port === 0) {\n      completionPromise.then(\n        portNum => {\n          const finalUri: GrpcUri = {\n            scheme: portUri.scheme,\n            authority: portUri.authority,\n            path: combineHostPort({ host: splitPort.host, port: portNum }),\n          };\n          boundPortObject!.mapKey = uriToString(finalUri);\n          boundPortObject!.completionPromise = null;\n          boundPortObject!.portNumber = portNum;\n          this.boundPorts.set(boundPortObject!.mapKey, boundPortObject!);\n          callback(null, portNum);\n        },\n        error => {\n          callback(error, 0);\n        }\n      );\n    } else {\n      this.boundPorts.set(boundPortObject.mapKey, boundPortObject);\n      completionPromise.then(\n        portNum => {\n          boundPortObject!.completionPromise = null;\n          boundPortObject!.portNumber = portNum;\n          callback(null, portNum);\n        },\n        error => {\n          callback(error, 0);\n        }\n      );\n    }\n  }\n\n  private closeServer(server: AnyHttp2Server, callback?: () => void) {\n    this.trace(\n      'Closing server with address ' + JSON.stringify(server.address())\n    );\n    const serverInfo = this.http2Servers.get(server);\n    server.close(() => {\n      if (serverInfo) {\n        this.listenerChildrenTracker.unrefChild(serverInfo.channelzRef);\n        unregisterChannelzRef(serverInfo.channelzRef);\n      }\n      this.http2Servers.delete(server);\n      callback?.();\n    });\n  }\n\n  private closeSession(\n    session: http2.ServerHttp2Session,\n    callback?: () => void\n  ) {\n    this.trace('Closing session initiated by ' + session.socket?.remoteAddress);\n    const sessionInfo = this.sessions.get(session);\n    const closeCallback = () => {\n      if (sessionInfo) {\n        this.sessionChildrenTracker.unrefChild(sessionInfo.ref);\n        unregisterChannelzRef(sessionInfo.ref);\n      }\n      callback?.();\n    };\n    if (session.closed) {\n      queueMicrotask(closeCallback);\n    } else {\n      session.close(closeCallback);\n    }\n  }\n\n  private completeUnbind(boundPortObject: BoundPort) {\n    for (const server of boundPortObject.listeningServers) {\n      const serverInfo = this.http2Servers.get(server);\n      this.closeServer(server, () => {\n        boundPortObject.listeningServers.delete(server);\n      });\n      if (serverInfo) {\n        for (const session of serverInfo.sessions) {\n          this.closeSession(session);\n        }\n      }\n    }\n    this.boundPorts.delete(boundPortObject.mapKey);\n  }\n\n  /**\n   * Unbind a previously bound port, or cancel an in-progress bindAsync\n   * operation. If port 0 was bound, only the actual bound port can be\n   * unbound. For example, if bindAsync was called with \"localhost:0\" and the\n   * bound port result was 54321, it can be unbound as \"localhost:54321\".\n   * @param port\n   */\n  unbind(port: string): void {\n    this.trace('unbind port=' + port);\n    const portUri = this.normalizePort(port);\n    const splitPort = splitHostPort(portUri.path);\n    if (splitPort?.port === 0) {\n      throw new Error('Cannot unbind port 0');\n    }\n    const boundPortObject = this.boundPorts.get(uriToString(portUri));\n    if (boundPortObject) {\n      this.trace(\n        'unbinding ' +\n          boundPortObject.mapKey +\n          ' originally bound as ' +\n          uriToString(boundPortObject.originalUri)\n      );\n      /* If the bind operation is pending, the cancelled flag will trigger\n       * the unbind operation later. */\n      if (boundPortObject.completionPromise) {\n        boundPortObject.cancelled = true;\n      } else {\n        this.completeUnbind(boundPortObject);\n      }\n    }\n  }\n\n  /**\n   * Gracefully close all connections associated with a previously bound port.\n   * After the grace time, forcefully close all remaining open connections.\n   *\n   * If port 0 was bound, only the actual bound port can be\n   * drained. For example, if bindAsync was called with \"localhost:0\" and the\n   * bound port result was 54321, it can be drained as \"localhost:54321\".\n   * @param port\n   * @param graceTimeMs\n   * @returns\n   */\n  drain(port: string, graceTimeMs: number): void {\n    this.trace('drain port=' + port + ' graceTimeMs=' + graceTimeMs);\n    const portUri = this.normalizePort(port);\n    const splitPort = splitHostPort(portUri.path);\n    if (splitPort?.port === 0) {\n      throw new Error('Cannot drain port 0');\n    }\n    const boundPortObject = this.boundPorts.get(uriToString(portUri));\n    if (!boundPortObject) {\n      return;\n    }\n    const allSessions: Set<http2.Http2Session> = new Set();\n    for (const http2Server of boundPortObject.listeningServers) {\n      const serverEntry = this.http2Servers.get(http2Server);\n      if (serverEntry) {\n        for (const session of serverEntry.sessions) {\n          allSessions.add(session);\n          this.closeSession(session, () => {\n            allSessions.delete(session);\n          });\n        }\n      }\n    }\n    /* After the grace time ends, send another goaway to all remaining sessions\n     * with the CANCEL code. */\n    setTimeout(() => {\n      for (const session of allSessions) {\n        session.destroy(http2.constants.NGHTTP2_CANCEL as any);\n      }\n    }, graceTimeMs).unref?.();\n  }\n\n  forceShutdown(): void {\n    for (const boundPortObject of this.boundPorts.values()) {\n      boundPortObject.cancelled = true;\n    }\n    this.boundPorts.clear();\n    // Close the server if it is still running.\n    for (const server of this.http2Servers.keys()) {\n      this.closeServer(server);\n    }\n\n    // Always destroy any available sessions. It's possible that one or more\n    // tryShutdown() calls are in progress. Don't wait on them to finish.\n    this.sessions.forEach((channelzInfo, session) => {\n      this.closeSession(session);\n      // Cast NGHTTP2_CANCEL to any because TypeScript doesn't seem to\n      // recognize destroy(code) as a valid signature.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      session.destroy(http2.constants.NGHTTP2_CANCEL as any);\n    });\n    this.sessions.clear();\n    unregisterChannelzRef(this.channelzRef);\n\n    this.shutdown = true;\n  }\n\n  register<RequestType, ResponseType>(\n    name: string,\n    handler: HandleCall<RequestType, ResponseType>,\n    serialize: Serialize<ResponseType>,\n    deserialize: Deserialize<RequestType>,\n    type: string\n  ): boolean {\n    if (this.handlers.has(name)) {\n      return false;\n    }\n\n    this.handlers.set(name, {\n      func: handler,\n      serialize,\n      deserialize,\n      type,\n      path: name,\n    } as UntypedHandler);\n    return true;\n  }\n\n  unregister(name: string): boolean {\n    return this.handlers.delete(name);\n  }\n\n  /**\n   * @deprecated No longer needed as of version 1.10.x\n   */\n  @deprecate(\n    'Calling start() is no longer necessary. It can be safely omitted.'\n  )\n  start(): void {\n    if (\n      this.http2Servers.size === 0 ||\n      [...this.http2Servers.keys()].every(server => !server.listening)\n    ) {\n      throw new Error('server must be bound in order to start');\n    }\n\n    if (this.started === true) {\n      throw new Error('server is already started');\n    }\n    this.started = true;\n  }\n\n  tryShutdown(callback: (error?: Error) => void): void {\n    const wrappedCallback = (error?: Error) => {\n      unregisterChannelzRef(this.channelzRef);\n      callback(error);\n    };\n    let pendingChecks = 0;\n\n    function maybeCallback(): void {\n      pendingChecks--;\n\n      if (pendingChecks === 0) {\n        wrappedCallback();\n      }\n    }\n    this.shutdown = true;\n\n    for (const [serverKey, server] of this.http2Servers.entries()) {\n      pendingChecks++;\n      const serverString = server.channelzRef.name;\n      this.trace('Waiting for server ' + serverString + ' to close');\n      this.closeServer(serverKey, () => {\n        this.trace('Server ' + serverString + ' finished closing');\n        maybeCallback();\n      });\n\n      for (const session of server.sessions.keys()) {\n        pendingChecks++;\n        const sessionString = session.socket?.remoteAddress;\n        this.trace('Waiting for session ' + sessionString + ' to close');\n        this.closeSession(session, () => {\n          this.trace('Session ' + sessionString + ' finished closing');\n          maybeCallback();\n        });\n      }\n    }\n\n    if (pendingChecks === 0) {\n      wrappedCallback();\n    }\n  }\n\n  addHttp2Port(): never {\n    throw new Error('Not yet implemented');\n  }\n\n  /**\n   * Get the channelz reference object for this server. The returned value is\n   * garbage if channelz is disabled for this server.\n   * @returns\n   */\n  getChannelzRef() {\n    return this.channelzRef;\n  }\n\n  private _verifyContentType(\n    stream: http2.ServerHttp2Stream,\n    headers: http2.IncomingHttpHeaders\n  ): boolean {\n    const contentType = headers[http2.constants.HTTP2_HEADER_CONTENT_TYPE];\n\n    if (\n      typeof contentType !== 'string' ||\n      !contentType.startsWith('application/grpc')\n    ) {\n      stream.respond(\n        {\n          [http2.constants.HTTP2_HEADER_STATUS]:\n            http2.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,\n        },\n        { endStream: true }\n      );\n      return false;\n    }\n\n    return true;\n  }\n\n  private _retrieveHandler(path: string): Handler<any, any> | null {\n    this.trace(\n      'Received call to method ' +\n        path +\n        ' at address ' +\n        this.serverAddressString\n    );\n\n    const handler = this.handlers.get(path);\n\n    if (handler === undefined) {\n      this.trace(\n        'No handler registered for method ' +\n          path +\n          '. Sending UNIMPLEMENTED status.'\n      );\n      return null;\n    }\n\n    return handler;\n  }\n\n  private _respondWithError(\n    err: PartialStatusObject,\n    stream: http2.ServerHttp2Stream,\n    channelzSessionInfo: ChannelzSessionInfo | null = null\n  ) {\n    const trailersToSend = {\n      'grpc-status': err.code ?? Status.INTERNAL,\n      'grpc-message': err.details,\n      [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n      [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n      ...err.metadata?.toHttp2Headers(),\n    };\n    stream.respond(trailersToSend, { endStream: true });\n\n    this.callTracker.addCallFailed();\n    channelzSessionInfo?.streamTracker.addCallFailed();\n  }\n\n  private _channelzHandler(\n    stream: http2.ServerHttp2Stream,\n    headers: http2.IncomingHttpHeaders\n  ) {\n    // for handling idle timeout\n    this.onStreamOpened(stream);\n\n    const channelzSessionInfo = this.sessions.get(\n      stream.session as http2.ServerHttp2Session\n    );\n\n    this.callTracker.addCallStarted();\n    channelzSessionInfo?.streamTracker.addCallStarted();\n\n    if (!this._verifyContentType(stream, headers)) {\n      this.callTracker.addCallFailed();\n      channelzSessionInfo?.streamTracker.addCallFailed();\n      return;\n    }\n\n    const path = headers[HTTP2_HEADER_PATH] as string;\n\n    const handler = this._retrieveHandler(path);\n    if (!handler) {\n      this._respondWithError(\n        getUnimplementedStatusResponse(path),\n        stream,\n        channelzSessionInfo\n      );\n      return;\n    }\n\n    const callEventTracker: CallEventTracker = {\n      addMessageSent: () => {\n        if (channelzSessionInfo) {\n          channelzSessionInfo.messagesSent += 1;\n          channelzSessionInfo.lastMessageSentTimestamp = new Date();\n        }\n      },\n      addMessageReceived: () => {\n        if (channelzSessionInfo) {\n          channelzSessionInfo.messagesReceived += 1;\n          channelzSessionInfo.lastMessageReceivedTimestamp = new Date();\n        }\n      },\n      onCallEnd: status => {\n        if (status.code === Status.OK) {\n          this.callTracker.addCallSucceeded();\n        } else {\n          this.callTracker.addCallFailed();\n        }\n      },\n      onStreamEnd: success => {\n        if (channelzSessionInfo) {\n          if (success) {\n            channelzSessionInfo.streamTracker.addCallSucceeded();\n          } else {\n            channelzSessionInfo.streamTracker.addCallFailed();\n          }\n        }\n      },\n    };\n\n    const call = getServerInterceptingCall(\n      this.interceptors,\n      stream,\n      headers,\n      callEventTracker,\n      handler,\n      this.options\n    );\n\n    if (!this._runHandlerForCall(call, handler)) {\n      this.callTracker.addCallFailed();\n      channelzSessionInfo?.streamTracker.addCallFailed();\n\n      call.sendStatus({\n        code: Status.INTERNAL,\n        details: `Unknown handler type: ${handler.type}`,\n      });\n    }\n  }\n\n  private _streamHandler(\n    stream: http2.ServerHttp2Stream,\n    headers: http2.IncomingHttpHeaders\n  ) {\n    // for handling idle timeout\n    this.onStreamOpened(stream);\n\n    if (this._verifyContentType(stream, headers) !== true) {\n      return;\n    }\n\n    const path = headers[HTTP2_HEADER_PATH] as string;\n\n    const handler = this._retrieveHandler(path);\n    if (!handler) {\n      this._respondWithError(\n        getUnimplementedStatusResponse(path),\n        stream,\n        null\n      );\n      return;\n    }\n\n    const call = getServerInterceptingCall(\n      this.interceptors,\n      stream,\n      headers,\n      null,\n      handler,\n      this.options\n    );\n\n    if (!this._runHandlerForCall(call, handler)) {\n      call.sendStatus({\n        code: Status.INTERNAL,\n        details: `Unknown handler type: ${handler.type}`,\n      });\n    }\n  }\n\n  private _runHandlerForCall(\n    call: ServerInterceptingCallInterface,\n    handler:\n      | UntypedUnaryHandler\n      | UntypedClientStreamingHandler\n      | UntypedServerStreamingHandler\n      | UntypedBidiStreamingHandler\n  ): boolean {\n    const { type } = handler;\n    if (type === 'unary') {\n      handleUnary(call, handler);\n    } else if (type === 'clientStream') {\n      handleClientStreaming(call, handler);\n    } else if (type === 'serverStream') {\n      handleServerStreaming(call, handler);\n    } else if (type === 'bidi') {\n      handleBidiStreaming(call, handler);\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  private _setupHandlers(\n    http2Server: http2.Http2Server | http2.Http2SecureServer\n  ): void {\n    if (http2Server === null) {\n      return;\n    }\n\n    const serverAddress = http2Server.address();\n    let serverAddressString = 'null';\n    if (serverAddress) {\n      if (typeof serverAddress === 'string') {\n        serverAddressString = serverAddress;\n      } else {\n        serverAddressString = serverAddress.address + ':' + serverAddress.port;\n      }\n    }\n    this.serverAddressString = serverAddressString;\n\n    const handler = this.channelzEnabled\n      ? this._channelzHandler\n      : this._streamHandler;\n\n    const sessionHandler = this.channelzEnabled\n      ? this._channelzSessionHandler(http2Server)\n      : this._sessionHandler(http2Server);\n\n    http2Server.on('stream', handler.bind(this));\n    http2Server.on('session', sessionHandler);\n  }\n\n  private _sessionHandler(\n    http2Server: http2.Http2Server | http2.Http2SecureServer\n  ) {\n    return (session: http2.ServerHttp2Session) => {\n      this.http2Servers.get(http2Server)?.sessions.add(session);\n\n      let connectionAgeTimer: NodeJS.Timeout | null = null;\n      let connectionAgeGraceTimer: NodeJS.Timeout | null = null;\n      let keepaliveTimer: NodeJS.Timeout | null = null;\n      let sessionClosedByServer = false;\n\n      const idleTimeoutObj = this.enableIdleTimeout(session);\n\n      if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n        // Apply a random jitter within a +/-10% range\n        const jitterMagnitude = this.maxConnectionAgeMs / 10;\n        const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n\n        connectionAgeTimer = setTimeout(() => {\n          sessionClosedByServer = true;\n\n          this.trace(\n            'Connection dropped by max connection age: ' +\n              session.socket?.remoteAddress\n          );\n\n          try {\n            session.goaway(\n              http2.constants.NGHTTP2_NO_ERROR,\n              ~(1 << 31),\n              kMaxAge\n            );\n          } catch (e) {\n            // The goaway can't be sent because the session is already closed\n            session.destroy();\n            return;\n          }\n          session.close();\n\n          /* Allow a grace period after sending the GOAWAY before forcibly\n           * closing the connection. */\n          if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n            connectionAgeGraceTimer = setTimeout(() => {\n              session.destroy();\n            }, this.maxConnectionAgeGraceMs);\n            connectionAgeGraceTimer.unref?.();\n          }\n        }, this.maxConnectionAgeMs + jitter);\n        connectionAgeTimer.unref?.();\n      }\n\n      const clearKeepaliveTimeout = () => {\n        if (keepaliveTimer) {\n          clearTimeout(keepaliveTimer);\n          keepaliveTimer = null;\n        }\n      };\n\n      const canSendPing = () => {\n        return (\n          !session.destroyed &&\n          this.keepaliveTimeMs < KEEPALIVE_MAX_TIME_MS &&\n          this.keepaliveTimeMs > 0\n        );\n      };\n\n      /* eslint-disable-next-line prefer-const */\n      let sendPing: () => void; // hoisted for use in maybeStartKeepalivePingTimer\n\n      const maybeStartKeepalivePingTimer = () => {\n        if (!canSendPing()) {\n          return;\n        }\n        this.keepaliveTrace(\n          'Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms'\n        );\n        keepaliveTimer = setTimeout(() => {\n          clearKeepaliveTimeout();\n          sendPing();\n        }, this.keepaliveTimeMs);\n        keepaliveTimer.unref?.();\n      };\n\n      sendPing = () => {\n        if (!canSendPing()) {\n          return;\n        }\n        this.keepaliveTrace(\n          'Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms'\n        );\n        let pingSendError = '';\n        try {\n          const pingSentSuccessfully = session.ping(\n            (err: Error | null, duration: number, payload: Buffer) => {\n              clearKeepaliveTimeout();\n              if (err) {\n                this.keepaliveTrace('Ping failed with error: ' + err.message);\n                sessionClosedByServer = true;\n                session.close();\n              } else {\n                this.keepaliveTrace('Received ping response');\n                maybeStartKeepalivePingTimer();\n              }\n            }\n          );\n          if (!pingSentSuccessfully) {\n            pingSendError = 'Ping returned false';\n          }\n        } catch (e) {\n          // grpc/grpc-node#2139\n          pingSendError =\n            (e instanceof Error ? e.message : '') || 'Unknown error';\n        }\n\n        if (pingSendError) {\n          this.keepaliveTrace('Ping send failed: ' + pingSendError);\n          this.trace(\n            'Connection dropped due to ping send error: ' + pingSendError\n          );\n          sessionClosedByServer = true;\n          session.close();\n          return;\n        }\n\n        keepaliveTimer = setTimeout(() => {\n          clearKeepaliveTimeout();\n          this.keepaliveTrace('Ping timeout passed without response');\n          this.trace('Connection dropped by keepalive timeout');\n          sessionClosedByServer = true;\n          session.close();\n        }, this.keepaliveTimeoutMs);\n        keepaliveTimer.unref?.();\n      };\n\n      maybeStartKeepalivePingTimer();\n\n      session.on('close', () => {\n        if (!sessionClosedByServer) {\n          this.trace(\n            `Connection dropped by client ${session.socket?.remoteAddress}`\n          );\n        }\n\n        if (connectionAgeTimer) {\n          clearTimeout(connectionAgeTimer);\n        }\n\n        if (connectionAgeGraceTimer) {\n          clearTimeout(connectionAgeGraceTimer);\n        }\n\n        clearKeepaliveTimeout();\n\n        if (idleTimeoutObj !== null) {\n          clearTimeout(idleTimeoutObj.timeout);\n          this.sessionIdleTimeouts.delete(session);\n        }\n\n        this.http2Servers.get(http2Server)?.sessions.delete(session);\n      });\n    };\n  }\n\n  private _channelzSessionHandler(\n    http2Server: http2.Http2Server | http2.Http2SecureServer\n  ) {\n    return (session: http2.ServerHttp2Session) => {\n      const channelzRef = registerChannelzSocket(\n        session.socket?.remoteAddress ?? 'unknown',\n        this.getChannelzSessionInfo.bind(this, session),\n        this.channelzEnabled\n      );\n\n      const channelzSessionInfo: ChannelzSessionInfo = {\n        ref: channelzRef,\n        streamTracker: new ChannelzCallTracker(),\n        messagesSent: 0,\n        messagesReceived: 0,\n        keepAlivesSent: 0,\n        lastMessageSentTimestamp: null,\n        lastMessageReceivedTimestamp: null,\n      };\n\n      this.http2Servers.get(http2Server)?.sessions.add(session);\n      this.sessions.set(session, channelzSessionInfo);\n      const clientAddress = `${session.socket.remoteAddress}:${session.socket.remotePort}`;\n\n      this.channelzTrace.addTrace(\n        'CT_INFO',\n        'Connection established by client ' + clientAddress\n      );\n      this.trace('Connection established by client ' + clientAddress);\n      this.sessionChildrenTracker.refChild(channelzRef);\n\n      let connectionAgeTimer: NodeJS.Timeout | null = null;\n      let connectionAgeGraceTimer: NodeJS.Timeout | null = null;\n      let keepaliveTimeout: NodeJS.Timeout | null = null;\n      let sessionClosedByServer = false;\n\n      const idleTimeoutObj = this.enableIdleTimeout(session);\n\n      if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n        // Apply a random jitter within a +/-10% range\n        const jitterMagnitude = this.maxConnectionAgeMs / 10;\n        const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n\n        connectionAgeTimer = setTimeout(() => {\n          sessionClosedByServer = true;\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Connection dropped by max connection age from ' + clientAddress\n          );\n\n          try {\n            session.goaway(\n              http2.constants.NGHTTP2_NO_ERROR,\n              ~(1 << 31),\n              kMaxAge\n            );\n          } catch (e) {\n            // The goaway can't be sent because the session is already closed\n            session.destroy();\n            return;\n          }\n          session.close();\n\n          /* Allow a grace period after sending the GOAWAY before forcibly\n           * closing the connection. */\n          if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n            connectionAgeGraceTimer = setTimeout(() => {\n              session.destroy();\n            }, this.maxConnectionAgeGraceMs);\n            connectionAgeGraceTimer.unref?.();\n          }\n        }, this.maxConnectionAgeMs + jitter);\n        connectionAgeTimer.unref?.();\n      }\n\n      const clearKeepaliveTimeout = () => {\n        if (keepaliveTimeout) {\n          clearTimeout(keepaliveTimeout);\n          keepaliveTimeout = null;\n        }\n      };\n\n      const canSendPing = () => {\n        return (\n          !session.destroyed &&\n          this.keepaliveTimeMs < KEEPALIVE_MAX_TIME_MS &&\n          this.keepaliveTimeMs > 0\n        );\n      };\n\n      /* eslint-disable-next-line prefer-const */\n      let sendPing: () => void; // hoisted for use in maybeStartKeepalivePingTimer\n\n      const maybeStartKeepalivePingTimer = () => {\n        if (!canSendPing()) {\n          return;\n        }\n        this.keepaliveTrace(\n          'Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms'\n        );\n        keepaliveTimeout = setTimeout(() => {\n          clearKeepaliveTimeout();\n          sendPing();\n        }, this.keepaliveTimeMs);\n        keepaliveTimeout.unref?.();\n      };\n\n      sendPing = () => {\n        if (!canSendPing()) {\n          return;\n        }\n        this.keepaliveTrace(\n          'Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms'\n        );\n        let pingSendError = '';\n        try {\n          const pingSentSuccessfully = session.ping(\n            (err: Error | null, duration: number, payload: Buffer) => {\n              clearKeepaliveTimeout();\n              if (err) {\n                this.keepaliveTrace('Ping failed with error: ' + err.message);\n                this.channelzTrace.addTrace(\n                  'CT_INFO',\n                  'Connection dropped due to error of a ping frame ' +\n                    err.message +\n                    ' return in ' +\n                    duration\n                );\n                sessionClosedByServer = true;\n                session.close();\n              } else {\n                this.keepaliveTrace('Received ping response');\n                maybeStartKeepalivePingTimer();\n              }\n            }\n          );\n          if (!pingSentSuccessfully) {\n            pingSendError = 'Ping returned false';\n          }\n        } catch (e) {\n          // grpc/grpc-node#2139\n          pingSendError =\n            (e instanceof Error ? e.message : '') || 'Unknown error';\n        }\n\n        if (pingSendError) {\n          this.keepaliveTrace('Ping send failed: ' + pingSendError);\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Connection dropped due to ping send error: ' + pingSendError\n          );\n          sessionClosedByServer = true;\n          session.close();\n          return;\n        }\n\n        channelzSessionInfo.keepAlivesSent += 1;\n\n        keepaliveTimeout = setTimeout(() => {\n          clearKeepaliveTimeout();\n          this.keepaliveTrace('Ping timeout passed without response');\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Connection dropped by keepalive timeout from ' + clientAddress\n          );\n          sessionClosedByServer = true;\n          session.close();\n        }, this.keepaliveTimeoutMs);\n        keepaliveTimeout.unref?.();\n      };\n\n      maybeStartKeepalivePingTimer();\n\n      session.on('close', () => {\n        if (!sessionClosedByServer) {\n          this.channelzTrace.addTrace(\n            'CT_INFO',\n            'Connection dropped by client ' + clientAddress\n          );\n        }\n\n        this.sessionChildrenTracker.unrefChild(channelzRef);\n        unregisterChannelzRef(channelzRef);\n\n        if (connectionAgeTimer) {\n          clearTimeout(connectionAgeTimer);\n        }\n\n        if (connectionAgeGraceTimer) {\n          clearTimeout(connectionAgeGraceTimer);\n        }\n\n        clearKeepaliveTimeout();\n\n        if (idleTimeoutObj !== null) {\n          clearTimeout(idleTimeoutObj.timeout);\n          this.sessionIdleTimeouts.delete(session);\n        }\n\n        this.http2Servers.get(http2Server)?.sessions.delete(session);\n        this.sessions.delete(session);\n      });\n    };\n  }\n\n  private enableIdleTimeout(\n    session: http2.ServerHttp2Session\n  ): SessionIdleTimeoutTracker | null {\n    if (this.sessionIdleTimeout >= MAX_CONNECTION_IDLE_MS) {\n      return null;\n    }\n\n    const idleTimeoutObj: SessionIdleTimeoutTracker = {\n      activeStreams: 0,\n      lastIdle: Date.now(),\n      onClose: this.onStreamClose.bind(this, session),\n      timeout: setTimeout(\n        this.onIdleTimeout,\n        this.sessionIdleTimeout,\n        this,\n        session\n      ),\n    };\n    idleTimeoutObj.timeout.unref?.();\n    this.sessionIdleTimeouts.set(session, idleTimeoutObj);\n\n    const { socket } = session;\n    this.trace(\n      'Enable idle timeout for ' +\n        socket.remoteAddress +\n        ':' +\n        socket.remotePort\n    );\n\n    return idleTimeoutObj;\n  }\n\n  private onIdleTimeout(\n    this: undefined,\n    ctx: Server,\n    session: http2.ServerHttp2Session\n  ) {\n    const { socket } = session;\n    const sessionInfo = ctx.sessionIdleTimeouts.get(session);\n\n    // if it is called while we have activeStreams - timer will not be rescheduled\n    // until last active stream is closed, then it will call .refresh() on the timer\n    // important part is to not clearTimeout(timer) or it becomes unusable\n    // for future refreshes\n    if (\n      sessionInfo !== undefined &&\n      sessionInfo.activeStreams === 0 &&\n      Date.now() - sessionInfo.lastIdle >= ctx.sessionIdleTimeout\n    ) {\n      ctx.trace(\n        'Session idle timeout triggered for ' +\n          socket?.remoteAddress +\n          ':' +\n          socket?.remotePort +\n          ' last idle at ' +\n          sessionInfo.lastIdle\n      );\n\n      ctx.closeSession(session);\n    }\n  }\n\n  private onStreamOpened(stream: http2.ServerHttp2Stream) {\n    const session = stream.session as http2.ServerHttp2Session;\n\n    const idleTimeoutObj = this.sessionIdleTimeouts.get(session);\n    if (idleTimeoutObj) {\n      idleTimeoutObj.activeStreams += 1;\n      stream.once('close', idleTimeoutObj.onClose);\n    }\n  }\n\n  private onStreamClose(session: http2.ServerHttp2Session) {\n    const idleTimeoutObj = this.sessionIdleTimeouts.get(session);\n\n    if (idleTimeoutObj) {\n      idleTimeoutObj.activeStreams -= 1;\n      if (idleTimeoutObj.activeStreams === 0) {\n        idleTimeoutObj.lastIdle = Date.now();\n        idleTimeoutObj.timeout.refresh();\n\n        this.trace(\n          'Session onStreamClose' +\n            session.socket?.remoteAddress +\n            ':' +\n            session.socket?.remotePort +\n            ' at ' +\n            idleTimeoutObj.lastIdle\n        );\n      }\n    }\n  }\n}\n\nasync function handleUnary<RequestType, ResponseType>(\n  call: ServerInterceptingCallInterface,\n  handler: UnaryHandler<RequestType, ResponseType>\n): Promise<void> {\n  let stream: ServerUnaryCall<RequestType, ResponseType>;\n\n  function respond(\n    err: ServerErrorResponse | ServerStatusResponse | null,\n    value?: ResponseType | null,\n    trailer?: Metadata,\n    flags?: number\n  ) {\n    if (err) {\n      call.sendStatus(serverErrorToStatus(err, trailer));\n      return;\n    }\n    call.sendMessage(value, () => {\n      call.sendStatus({\n        code: Status.OK,\n        details: 'OK',\n        metadata: trailer ?? null,\n      });\n    });\n  }\n\n  let requestMetadata: Metadata;\n  let requestMessage: RequestType | null = null;\n  call.start({\n    onReceiveMetadata(metadata) {\n      requestMetadata = metadata;\n      call.startRead();\n    },\n    onReceiveMessage(message) {\n      if (requestMessage) {\n        call.sendStatus({\n          code: Status.UNIMPLEMENTED,\n          details: `Received a second request message for server streaming method ${handler.path}`,\n          metadata: null,\n        });\n        return;\n      }\n      requestMessage = message;\n      call.startRead();\n    },\n    onReceiveHalfClose() {\n      if (!requestMessage) {\n        call.sendStatus({\n          code: Status.UNIMPLEMENTED,\n          details: `Received no request message for server streaming method ${handler.path}`,\n          metadata: null,\n        });\n        return;\n      }\n      stream = new ServerWritableStreamImpl(\n        handler.path,\n        call,\n        requestMetadata,\n        requestMessage\n      );\n      try {\n        handler.func(stream, respond);\n      } catch (err) {\n        call.sendStatus({\n          code: Status.UNKNOWN,\n          details: `Server method handler threw error ${\n            (err as Error).message\n          }`,\n          metadata: null,\n        });\n      }\n    },\n    onCancel() {\n      if (stream) {\n        stream.cancelled = true;\n        stream.emit('cancelled', 'cancelled');\n      }\n    },\n  });\n}\n\nfunction handleClientStreaming<RequestType, ResponseType>(\n  call: ServerInterceptingCallInterface,\n  handler: ClientStreamingHandler<RequestType, ResponseType>\n): void {\n  let stream: ServerReadableStream<RequestType, ResponseType>;\n\n  function respond(\n    err: ServerErrorResponse | ServerStatusResponse | null,\n    value?: ResponseType | null,\n    trailer?: Metadata,\n    flags?: number\n  ) {\n    if (err) {\n      call.sendStatus(serverErrorToStatus(err, trailer));\n      return;\n    }\n    call.sendMessage(value, () => {\n      call.sendStatus({\n        code: Status.OK,\n        details: 'OK',\n        metadata: trailer ?? null,\n      });\n    });\n  }\n\n  call.start({\n    onReceiveMetadata(metadata) {\n      stream = new ServerDuplexStreamImpl(handler.path, call, metadata);\n      try {\n        handler.func(stream, respond);\n      } catch (err) {\n        call.sendStatus({\n          code: Status.UNKNOWN,\n          details: `Server method handler threw error ${\n            (err as Error).message\n          }`,\n          metadata: null,\n        });\n      }\n    },\n    onReceiveMessage(message) {\n      stream.push(message);\n    },\n    onReceiveHalfClose() {\n      stream.push(null);\n    },\n    onCancel() {\n      if (stream) {\n        stream.cancelled = true;\n        stream.emit('cancelled', 'cancelled');\n        stream.destroy();\n      }\n    },\n  });\n}\n\nfunction handleServerStreaming<RequestType, ResponseType>(\n  call: ServerInterceptingCallInterface,\n  handler: ServerStreamingHandler<RequestType, ResponseType>\n): void {\n  let stream: ServerWritableStream<RequestType, ResponseType>;\n\n  let requestMetadata: Metadata;\n  let requestMessage: RequestType | null = null;\n  call.start({\n    onReceiveMetadata(metadata) {\n      requestMetadata = metadata;\n      call.startRead();\n    },\n    onReceiveMessage(message) {\n      if (requestMessage) {\n        call.sendStatus({\n          code: Status.UNIMPLEMENTED,\n          details: `Received a second request message for server streaming method ${handler.path}`,\n          metadata: null,\n        });\n        return;\n      }\n      requestMessage = message;\n      call.startRead();\n    },\n    onReceiveHalfClose() {\n      if (!requestMessage) {\n        call.sendStatus({\n          code: Status.UNIMPLEMENTED,\n          details: `Received no request message for server streaming method ${handler.path}`,\n          metadata: null,\n        });\n        return;\n      }\n      stream = new ServerWritableStreamImpl(\n        handler.path,\n        call,\n        requestMetadata,\n        requestMessage\n      );\n      try {\n        handler.func(stream);\n      } catch (err) {\n        call.sendStatus({\n          code: Status.UNKNOWN,\n          details: `Server method handler threw error ${\n            (err as Error).message\n          }`,\n          metadata: null,\n        });\n      }\n    },\n    onCancel() {\n      if (stream) {\n        stream.cancelled = true;\n        stream.emit('cancelled', 'cancelled');\n        stream.destroy();\n      }\n    },\n  });\n}\n\nfunction handleBidiStreaming<RequestType, ResponseType>(\n  call: ServerInterceptingCallInterface,\n  handler: BidiStreamingHandler<RequestType, ResponseType>\n): void {\n  let stream: ServerDuplexStream<RequestType, ResponseType>;\n\n  call.start({\n    onReceiveMetadata(metadata) {\n      stream = new ServerDuplexStreamImpl(handler.path, call, metadata);\n      try {\n        handler.func(stream);\n      } catch (err) {\n        call.sendStatus({\n          code: Status.UNKNOWN,\n          details: `Server method handler threw error ${\n            (err as Error).message\n          }`,\n          metadata: null,\n        });\n      }\n    },\n    onReceiveMessage(message) {\n      stream.push(message);\n    },\n    onReceiveHalfClose() {\n      stream.push(null);\n    },\n    onCancel() {\n      if (stream) {\n        stream.cancelled = true;\n        stream.emit('cancelled', 'cancelled');\n        stream.destroy();\n      }\n    },\n  });\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject } from './call-interface';\nimport { Status } from './constants';\nimport { Metadata } from './metadata';\n\n/**\n * A builder for gRPC status objects.\n */\nexport class StatusBuilder {\n  private code: Status | null;\n  private details: string | null;\n  private metadata: Metadata | null;\n\n  constructor() {\n    this.code = null;\n    this.details = null;\n    this.metadata = null;\n  }\n\n  /**\n   * Adds a status code to the builder.\n   */\n  withCode(code: Status): this {\n    this.code = code;\n    return this;\n  }\n\n  /**\n   * Adds details to the builder.\n   */\n  withDetails(details: string): this {\n    this.details = details;\n    return this;\n  }\n\n  /**\n   * Adds metadata to the builder.\n   */\n  withMetadata(metadata: Metadata): this {\n    this.metadata = metadata;\n    return this;\n  }\n\n  /**\n   * Builds the status object.\n   */\n  build(): Partial<StatusObject> {\n    const status: Partial<StatusObject> = {};\n\n    if (this.code !== null) {\n      status.code = this.code;\n    }\n\n    if (this.details !== null) {\n      status.details = this.details;\n    }\n\n    if (this.metadata !== null) {\n      status.metadata = this.metadata;\n    }\n\n    return status;\n  }\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport interface Duration {\n  seconds: number;\n  nanos: number;\n}\n\nexport function msToDuration(millis: number): Duration {\n  return {\n    seconds: (millis / 1000) | 0,\n    nanos: ((millis % 1000) * 1_000_000) | 0,\n  };\n}\n\nexport function durationToMs(duration: Duration): number {\n  return (duration.seconds * 1000 + duration.nanos / 1_000_000) | 0;\n}\n\nexport function isDuration(value: any): value is Duration {\n  return typeof value.seconds === 'number' && typeof value.nanos === 'number';\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  LoadBalancer,\n  ChannelControlHelper,\n  TypedLoadBalancingConfig,\n  registerDefaultLoadBalancerType,\n  registerLoadBalancerType,\n  createChildChannelControlHelper,\n} from './load-balancer';\nimport { ConnectivityState } from './connectivity-state';\nimport {\n  QueuePicker,\n  Picker,\n  PickArgs,\n  CompletePickResult,\n  PickResultType,\n  UnavailablePicker,\n} from './picker';\nimport { Endpoint, SubchannelAddress } from './subchannel-address';\nimport * as logging from './logging';\nimport { LogVerbosity } from './constants';\nimport {\n  SubchannelInterface,\n  ConnectivityStateListener,\n  HealthListener,\n} from './subchannel-interface';\nimport { isTcpSubchannelAddress } from './subchannel-address';\nimport { isIPv6 } from 'net';\nimport { ChannelOptions } from './channel-options';\n\nconst TRACER_NAME = 'pick_first';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\nconst TYPE_NAME = 'pick_first';\n\n/**\n * Delay after starting a connection on a subchannel before starting a\n * connection on the next subchannel in the list, for Happy Eyeballs algorithm.\n */\nconst CONNECTION_DELAY_INTERVAL_MS = 250;\n\nexport class PickFirstLoadBalancingConfig implements TypedLoadBalancingConfig {\n  constructor(private readonly shuffleAddressList: boolean) {}\n\n  getLoadBalancerName(): string {\n    return TYPE_NAME;\n  }\n\n  toJsonObject(): object {\n    return {\n      [TYPE_NAME]: {\n        shuffleAddressList: this.shuffleAddressList,\n      },\n    };\n  }\n\n  getShuffleAddressList() {\n    return this.shuffleAddressList;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static createFromJson(obj: any) {\n    if (\n      'shuffleAddressList' in obj &&\n      !(typeof obj.shuffleAddressList === 'boolean')\n    ) {\n      throw new Error(\n        'pick_first config field shuffleAddressList must be a boolean if provided'\n      );\n    }\n    return new PickFirstLoadBalancingConfig(obj.shuffleAddressList === true);\n  }\n}\n\n/**\n * Picker for a `PickFirstLoadBalancer` in the READY state. Always returns the\n * picked subchannel.\n */\nclass PickFirstPicker implements Picker {\n  constructor(private subchannel: SubchannelInterface) {}\n\n  pick(pickArgs: PickArgs): CompletePickResult {\n    return {\n      pickResultType: PickResultType.COMPLETE,\n      subchannel: this.subchannel,\n      status: null,\n      onCallStarted: null,\n      onCallEnded: null,\n    };\n  }\n}\n\ninterface SubchannelChild {\n  subchannel: SubchannelInterface;\n  hasReportedTransientFailure: boolean;\n}\n\n/**\n * Return a new array with the elements of the input array in a random order\n * @param list The input array\n * @returns A shuffled array of the elements of list\n */\nexport function shuffled<T>(list: T[]): T[] {\n  const result = list.slice();\n  for (let i = result.length - 1; i > 1; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = result[i];\n    result[i] = result[j];\n    result[j] = temp;\n  }\n  return result;\n}\n\n/**\n * Interleave addresses in addressList by family in accordance with RFC-8304 section 4\n * @param addressList\n * @returns\n */\nfunction interleaveAddressFamilies(\n  addressList: SubchannelAddress[]\n): SubchannelAddress[] {\n  const result: SubchannelAddress[] = [];\n  const ipv6Addresses: SubchannelAddress[] = [];\n  const ipv4Addresses: SubchannelAddress[] = [];\n  const ipv6First =\n    isTcpSubchannelAddress(addressList[0]) && isIPv6(addressList[0].host);\n  for (const address of addressList) {\n    if (isTcpSubchannelAddress(address) && isIPv6(address.host)) {\n      ipv6Addresses.push(address);\n    } else {\n      ipv4Addresses.push(address);\n    }\n  }\n  const firstList = ipv6First ? ipv6Addresses : ipv4Addresses;\n  const secondList = ipv6First ? ipv4Addresses : ipv6Addresses;\n  for (let i = 0; i < Math.max(firstList.length, secondList.length); i++) {\n    if (i < firstList.length) {\n      result.push(firstList[i]);\n    }\n    if (i < secondList.length) {\n      result.push(secondList[i]);\n    }\n  }\n  return result;\n}\n\nconst REPORT_HEALTH_STATUS_OPTION_NAME =\n  'grpc-node.internal.pick-first.report_health_status';\n\nexport class PickFirstLoadBalancer implements LoadBalancer {\n  /**\n   * The list of subchannels this load balancer is currently attempting to\n   * connect to.\n   */\n  private children: SubchannelChild[] = [];\n  /**\n   * The current connectivity state of the load balancer.\n   */\n  private currentState: ConnectivityState = ConnectivityState.IDLE;\n  /**\n   * The index within the `subchannels` array of the subchannel with the most\n   * recently started connection attempt.\n   */\n  private currentSubchannelIndex = 0;\n  /**\n   * The currently picked subchannel used for making calls. Populated if\n   * and only if the load balancer's current state is READY. In that case,\n   * the subchannel's current state is also READY.\n   */\n  private currentPick: SubchannelInterface | null = null;\n  /**\n   * Listener callback attached to each subchannel in the `subchannels` list\n   * while establishing a connection.\n   */\n  private subchannelStateListener: ConnectivityStateListener = (\n    subchannel,\n    previousState,\n    newState,\n    keepaliveTime,\n    errorMessage\n  ) => {\n    this.onSubchannelStateUpdate(\n      subchannel,\n      previousState,\n      newState,\n      errorMessage\n    );\n  };\n\n  private pickedSubchannelHealthListener: HealthListener = () =>\n    this.calculateAndReportNewState();\n  /**\n   * Timer reference for the timer tracking when to start\n   */\n  private connectionDelayTimeout: NodeJS.Timeout;\n\n  private triedAllSubchannels = false;\n\n  /**\n   * The LB policy enters sticky TRANSIENT_FAILURE mode when all\n   * subchannels have failed to connect at least once, and it stays in that\n   * mode until a connection attempt is successful. While in sticky TF mode,\n   * the LB policy continuously attempts to connect to all of its subchannels.\n   */\n  private stickyTransientFailureMode = false;\n\n  private reportHealthStatus: boolean;\n\n  /**\n   * Indicates whether we called channelControlHelper.requestReresolution since\n   * the last call to updateAddressList\n   */\n  private requestedResolutionSinceLastUpdate = false;\n\n  /**\n   * The most recent error reported by any subchannel as it transitioned to\n   * TRANSIENT_FAILURE.\n   */\n  private lastError: string | null = null;\n\n  private latestAddressList: SubchannelAddress[] | null = null;\n\n  /**\n   * Load balancer that attempts to connect to each backend in the address list\n   * in order, and picks the first one that connects, using it for every\n   * request.\n   * @param channelControlHelper `ChannelControlHelper` instance provided by\n   *     this load balancer's owner.\n   */\n  constructor(\n    private readonly channelControlHelper: ChannelControlHelper,\n    options: ChannelOptions\n  ) {\n    this.connectionDelayTimeout = setTimeout(() => {}, 0);\n    clearTimeout(this.connectionDelayTimeout);\n    this.reportHealthStatus = options[REPORT_HEALTH_STATUS_OPTION_NAME];\n  }\n\n  private allChildrenHaveReportedTF(): boolean {\n    return this.children.every(child => child.hasReportedTransientFailure);\n  }\n\n  private calculateAndReportNewState() {\n    if (this.currentPick) {\n      if (this.reportHealthStatus && !this.currentPick.isHealthy()) {\n        this.updateState(\n          ConnectivityState.TRANSIENT_FAILURE,\n          new UnavailablePicker({\n            details: `Picked subchannel ${this.currentPick.getAddress()} is unhealthy`,\n          })\n        );\n      } else {\n        this.updateState(\n          ConnectivityState.READY,\n          new PickFirstPicker(this.currentPick)\n        );\n      }\n    } else if (this.children.length === 0) {\n      this.updateState(ConnectivityState.IDLE, new QueuePicker(this));\n    } else {\n      if (this.stickyTransientFailureMode) {\n        this.updateState(\n          ConnectivityState.TRANSIENT_FAILURE,\n          new UnavailablePicker({\n            details: `No connection established. Last error: ${this.lastError}`,\n          })\n        );\n      } else {\n        this.updateState(ConnectivityState.CONNECTING, new QueuePicker(this));\n      }\n    }\n  }\n\n  private requestReresolution() {\n    this.requestedResolutionSinceLastUpdate = true;\n    this.channelControlHelper.requestReresolution();\n  }\n\n  private maybeEnterStickyTransientFailureMode() {\n    if (!this.allChildrenHaveReportedTF()) {\n      return;\n    }\n    if (!this.requestedResolutionSinceLastUpdate) {\n      /* Each time we get an update we reset each subchannel's\n       * hasReportedTransientFailure flag, so the next time we get to this\n       * point after that, each subchannel has reported TRANSIENT_FAILURE\n       * at least once since then. That is the trigger for requesting\n       * reresolution, whether or not the LB policy is already in sticky TF\n       * mode. */\n      this.requestReresolution();\n    }\n    if (this.stickyTransientFailureMode) {\n      return;\n    }\n    this.stickyTransientFailureMode = true;\n    for (const { subchannel } of this.children) {\n      subchannel.startConnecting();\n    }\n    this.calculateAndReportNewState();\n  }\n\n  private removeCurrentPick() {\n    if (this.currentPick !== null) {\n      /* Unref can cause a state change, which can cause a change in the value\n       * of this.currentPick, so we hold a local reference to make sure that\n       * does not impact this function. */\n      const currentPick = this.currentPick;\n      this.currentPick = null;\n      currentPick.unref();\n      currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n      this.channelControlHelper.removeChannelzChild(\n        currentPick.getChannelzRef()\n      );\n      if (this.reportHealthStatus) {\n        currentPick.removeHealthStateWatcher(\n          this.pickedSubchannelHealthListener\n        );\n      }\n    }\n  }\n\n  private onSubchannelStateUpdate(\n    subchannel: SubchannelInterface,\n    previousState: ConnectivityState,\n    newState: ConnectivityState,\n    errorMessage?: string\n  ) {\n    if (this.currentPick?.realSubchannelEquals(subchannel)) {\n      if (newState !== ConnectivityState.READY) {\n        this.removeCurrentPick();\n        this.calculateAndReportNewState();\n        this.requestReresolution();\n      }\n      return;\n    }\n    for (const [index, child] of this.children.entries()) {\n      if (subchannel.realSubchannelEquals(child.subchannel)) {\n        if (newState === ConnectivityState.READY) {\n          this.pickSubchannel(child.subchannel);\n        }\n        if (newState === ConnectivityState.TRANSIENT_FAILURE) {\n          child.hasReportedTransientFailure = true;\n          if (errorMessage) {\n            this.lastError = errorMessage;\n          }\n          this.maybeEnterStickyTransientFailureMode();\n          if (index === this.currentSubchannelIndex) {\n            this.startNextSubchannelConnecting(index + 1);\n          }\n        }\n        child.subchannel.startConnecting();\n        return;\n      }\n    }\n  }\n\n  private startNextSubchannelConnecting(startIndex: number) {\n    clearTimeout(this.connectionDelayTimeout);\n    if (this.triedAllSubchannels) {\n      return;\n    }\n    for (const [index, child] of this.children.entries()) {\n      if (index >= startIndex) {\n        const subchannelState = child.subchannel.getConnectivityState();\n        if (\n          subchannelState === ConnectivityState.IDLE ||\n          subchannelState === ConnectivityState.CONNECTING\n        ) {\n          this.startConnecting(index);\n          return;\n        }\n      }\n    }\n    this.triedAllSubchannels = true;\n    this.maybeEnterStickyTransientFailureMode();\n  }\n\n  /**\n   * Have a single subchannel in the `subchannels` list start connecting.\n   * @param subchannelIndex The index into the `subchannels` list.\n   */\n  private startConnecting(subchannelIndex: number) {\n    clearTimeout(this.connectionDelayTimeout);\n    this.currentSubchannelIndex = subchannelIndex;\n    if (\n      this.children[subchannelIndex].subchannel.getConnectivityState() ===\n      ConnectivityState.IDLE\n    ) {\n      trace(\n        'Start connecting to subchannel with address ' +\n          this.children[subchannelIndex].subchannel.getAddress()\n      );\n      process.nextTick(() => {\n        this.children[subchannelIndex]?.subchannel.startConnecting();\n      });\n    }\n    this.connectionDelayTimeout = setTimeout(() => {\n      this.startNextSubchannelConnecting(subchannelIndex + 1);\n    }, CONNECTION_DELAY_INTERVAL_MS);\n    this.connectionDelayTimeout.unref?.();\n  }\n\n  private pickSubchannel(subchannel: SubchannelInterface) {\n    if (this.currentPick && subchannel.realSubchannelEquals(this.currentPick)) {\n      return;\n    }\n    trace('Pick subchannel with address ' + subchannel.getAddress());\n    this.stickyTransientFailureMode = false;\n    this.removeCurrentPick();\n    this.currentPick = subchannel;\n    subchannel.ref();\n    if (this.reportHealthStatus) {\n      subchannel.addHealthStateWatcher(this.pickedSubchannelHealthListener);\n    }\n    this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n    this.resetSubchannelList();\n    clearTimeout(this.connectionDelayTimeout);\n    this.calculateAndReportNewState();\n  }\n\n  private updateState(newState: ConnectivityState, picker: Picker) {\n    trace(\n      ConnectivityState[this.currentState] +\n        ' -> ' +\n        ConnectivityState[newState]\n    );\n    this.currentState = newState;\n    this.channelControlHelper.updateState(newState, picker);\n  }\n\n  private resetSubchannelList() {\n    for (const child of this.children) {\n      if (\n        !(\n          this.currentPick &&\n          child.subchannel.realSubchannelEquals(this.currentPick)\n        )\n      ) {\n        /* The connectivity state listener is the same whether the subchannel\n         * is in the list of children or it is the currentPick, so if it is in\n         * both, removing it here would cause problems. In particular, that\n         * always happens immediately after the subchannel is picked. */\n        child.subchannel.removeConnectivityStateListener(\n          this.subchannelStateListener\n        );\n      }\n      /* Refs are counted independently for the children list and the\n       * currentPick, so we call unref whether or not the child is the\n       * currentPick. Channelz child references are also refcounted, so\n       * removeChannelzChild can be handled the same way. */\n      child.subchannel.unref();\n      this.channelControlHelper.removeChannelzChild(\n        child.subchannel.getChannelzRef()\n      );\n    }\n    this.currentSubchannelIndex = 0;\n    this.children = [];\n    this.triedAllSubchannels = false;\n    this.requestedResolutionSinceLastUpdate = false;\n  }\n\n  private connectToAddressList(addressList: SubchannelAddress[]) {\n    const newChildrenList = addressList.map(address => ({\n      subchannel: this.channelControlHelper.createSubchannel(address, {}),\n      hasReportedTransientFailure: false,\n    }));\n    /* Ref each subchannel before resetting the list, to ensure that\n     * subchannels shared between the list don't drop to 0 refs during the\n     * transition. */\n    for (const { subchannel } of newChildrenList) {\n      subchannel.ref();\n      this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n    }\n    this.resetSubchannelList();\n    this.children = newChildrenList;\n    for (const { subchannel } of this.children) {\n      subchannel.addConnectivityStateListener(this.subchannelStateListener);\n      if (subchannel.getConnectivityState() === ConnectivityState.READY) {\n        this.pickSubchannel(subchannel);\n        return;\n      }\n    }\n    for (const child of this.children) {\n      if (\n        child.subchannel.getConnectivityState() ===\n        ConnectivityState.TRANSIENT_FAILURE\n      ) {\n        child.hasReportedTransientFailure = true;\n      }\n    }\n    this.startNextSubchannelConnecting(0);\n    this.calculateAndReportNewState();\n  }\n\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig\n  ): void {\n    if (!(lbConfig instanceof PickFirstLoadBalancingConfig)) {\n      return;\n    }\n    /* Previously, an update would be discarded if it was identical to the\n     * previous update, to minimize churn. Now the DNS resolver is\n     * rate-limited, so that is less of a concern. */\n    if (lbConfig.getShuffleAddressList()) {\n      endpointList = shuffled(endpointList);\n    }\n    const rawAddressList = ([] as SubchannelAddress[]).concat(\n      ...endpointList.map(endpoint => endpoint.addresses)\n    );\n    if (rawAddressList.length === 0) {\n      throw new Error('No addresses in endpoint list passed to pick_first');\n    }\n    const addressList = interleaveAddressFamilies(rawAddressList);\n    this.latestAddressList = addressList;\n    this.connectToAddressList(addressList);\n  }\n\n  exitIdle() {\n    if (\n      this.currentState === ConnectivityState.IDLE &&\n      this.latestAddressList\n    ) {\n      this.connectToAddressList(this.latestAddressList);\n    }\n  }\n\n  resetBackoff() {\n    /* The pick first load balancer does not have a connection backoff, so this\n     * does nothing */\n  }\n\n  destroy() {\n    this.resetSubchannelList();\n    this.removeCurrentPick();\n  }\n\n  getTypeName(): string {\n    return TYPE_NAME;\n  }\n}\n\nconst LEAF_CONFIG = new PickFirstLoadBalancingConfig(false);\n\n/**\n * This class handles the leaf load balancing operations for a single endpoint.\n * It is a thin wrapper around a PickFirstLoadBalancer with a different API\n * that more closely reflects how it will be used as a leaf balancer.\n */\nexport class LeafLoadBalancer {\n  private pickFirstBalancer: PickFirstLoadBalancer;\n  private latestState: ConnectivityState = ConnectivityState.IDLE;\n  private latestPicker: Picker;\n  constructor(\n    private endpoint: Endpoint,\n    channelControlHelper: ChannelControlHelper,\n    options: ChannelOptions\n  ) {\n    const childChannelControlHelper = createChildChannelControlHelper(\n      channelControlHelper,\n      {\n        updateState: (connectivityState, picker) => {\n          this.latestState = connectivityState;\n          this.latestPicker = picker;\n          channelControlHelper.updateState(connectivityState, picker);\n        },\n      }\n    );\n    this.pickFirstBalancer = new PickFirstLoadBalancer(\n      childChannelControlHelper,\n      { ...options, [REPORT_HEALTH_STATUS_OPTION_NAME]: true }\n    );\n    this.latestPicker = new QueuePicker(this.pickFirstBalancer);\n  }\n\n  startConnecting() {\n    this.pickFirstBalancer.updateAddressList([this.endpoint], LEAF_CONFIG);\n  }\n\n  /**\n   * Update the endpoint associated with this LeafLoadBalancer to a new\n   * endpoint. Does not trigger connection establishment if a connection\n   * attempt is not already in progress.\n   * @param newEndpoint\n   */\n  updateEndpoint(newEndpoint: Endpoint) {\n    this.endpoint = newEndpoint;\n    if (this.latestState !== ConnectivityState.IDLE) {\n      this.startConnecting();\n    }\n  }\n\n  getConnectivityState() {\n    return this.latestState;\n  }\n\n  getPicker() {\n    return this.latestPicker;\n  }\n\n  getEndpoint() {\n    return this.endpoint;\n  }\n\n  exitIdle() {\n    this.pickFirstBalancer.exitIdle();\n  }\n\n  destroy() {\n    this.pickFirstBalancer.destroy();\n  }\n}\n\nexport function setup(): void {\n  registerLoadBalancerType(\n    TYPE_NAME,\n    PickFirstLoadBalancer,\n    PickFirstLoadBalancingConfig\n  );\n  registerDefaultLoadBalancerType(TYPE_NAME);\n}\n", "export { trace, log } from './logging';\nexport {\n  Resolver,\n  ResolverListener,\n  registerResolver,\n  ConfigSelector,\n  createResolver,\n} from './resolver';\nexport { GrpcUri, uriToString } from './uri-parser';\nexport { Duration, durationToMs } from './duration';\nexport { BackoffTimeout } from './backoff-timeout';\nexport {\n  LoadBalancer,\n  TypedLoadBalancingConfig,\n  ChannelControlHelper,\n  createChildChannelControlHelper,\n  registerLoadBalancerType,\n  selectLbConfigFromList,\n  parseLoadBalancingConfig,\n  isLoadBalancerNameRegistered,\n} from './load-balancer';\nexport { LeafLoadBalancer } from './load-balancer-pick-first';\nexport {\n  SubchannelAddress,\n  subchannelAddressToString,\n  Endpoint,\n  endpointToString,\n  endpointHasAddress,\n  EndpointMap,\n} from './subchannel-address';\nexport { ChildLoadBalancerHandler } from './load-balancer-child-handler';\nexport {\n  Picker,\n  UnavailablePicker,\n  QueuePicker,\n  PickResult,\n  PickArgs,\n  PickResultType,\n} from './picker';\nexport { Call as CallStream } from './call-interface';\nexport { Filter, BaseFilter, FilterFactory } from './filter';\nexport { FilterStackFactory } from './filter-stack';\nexport { registerAdminService } from './admin';\nexport {\n  SubchannelInterface,\n  BaseSubchannelWrapper,\n  ConnectivityStateListener,\n  HealthListener,\n} from './subchannel-interface';\nexport {\n  OutlierDetectionRawConfig,\n  SuccessRateEjectionConfig,\n  FailurePercentageEjectionConfig,\n} from './load-balancer-outlier-detection';\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resolver, ResolverListener, registerResolver } from './resolver';\nimport { Endpoint } from './subchannel-address';\nimport { GrpcUri } from './uri-parser';\nimport { ChannelOptions } from './channel-options';\n\nclass UdsResolver implements Resolver {\n  private hasReturnedResult = false;\n  private endpoints: Endpoint[] = [];\n  constructor(\n    target: GrpcUri,\n    private listener: ResolverListener,\n    channelOptions: ChannelOptions\n  ) {\n    let path: string;\n    if (target.authority === '') {\n      path = '/' + target.path;\n    } else {\n      path = target.path;\n    }\n    this.endpoints = [{ addresses: [{ path }] }];\n  }\n  updateResolution(): void {\n    if (!this.hasReturnedResult) {\n      this.hasReturnedResult = true;\n      process.nextTick(\n        this.listener.onSuccessfulResolution,\n        this.endpoints,\n        null,\n        null,\n        null,\n        {}\n      );\n    }\n  }\n\n  destroy() {\n    this.hasReturnedResult = false;\n  }\n\n  static getDefaultAuthority(target: GrpcUri): string {\n    return 'localhost';\n  }\n}\n\nexport function setup() {\n  registerResolver('unix', UdsResolver);\n}\n", "/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIPv4, isIPv6 } from 'net';\nimport { StatusObject } from './call-interface';\nimport { ChannelOptions } from './channel-options';\nimport { LogVerbosity, Status } from './constants';\nimport { Metadata } from './metadata';\nimport { registerResolver, Resolver, ResolverListener } from './resolver';\nimport { Endpoint, SubchannelAddress } from './subchannel-address';\nimport { GrpcUri, splitHostPort, uriToString } from './uri-parser';\nimport * as logging from './logging';\n\nconst TRACER_NAME = 'ip_resolver';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\nconst IPV4_SCHEME = 'ipv4';\nconst IPV6_SCHEME = 'ipv6';\n\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\n\nclass IpResolver implements Resolver {\n  private endpoints: Endpoint[] = [];\n  private error: StatusObject | null = null;\n  private hasReturnedResult = false;\n  constructor(\n    target: GrpcUri,\n    private listener: ResolverListener,\n    channelOptions: ChannelOptions\n  ) {\n    trace('Resolver constructed for target ' + uriToString(target));\n    const addresses: SubchannelAddress[] = [];\n    if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n      this.error = {\n        code: Status.UNAVAILABLE,\n        details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n        metadata: new Metadata(),\n      };\n      return;\n    }\n    const pathList = target.path.split(',');\n    for (const path of pathList) {\n      const hostPort = splitHostPort(path);\n      if (hostPort === null) {\n        this.error = {\n          code: Status.UNAVAILABLE,\n          details: `Failed to parse ${target.scheme} address ${path}`,\n          metadata: new Metadata(),\n        };\n        return;\n      }\n      if (\n        (target.scheme === IPV4_SCHEME && !isIPv4(hostPort.host)) ||\n        (target.scheme === IPV6_SCHEME && !isIPv6(hostPort.host))\n      ) {\n        this.error = {\n          code: Status.UNAVAILABLE,\n          details: `Failed to parse ${target.scheme} address ${path}`,\n          metadata: new Metadata(),\n        };\n        return;\n      }\n      addresses.push({\n        host: hostPort.host,\n        port: hostPort.port ?? DEFAULT_PORT,\n      });\n    }\n    this.endpoints = addresses.map(address => ({ addresses: [address] }));\n    trace('Parsed ' + target.scheme + ' address list ' + addresses);\n  }\n  updateResolution(): void {\n    if (!this.hasReturnedResult) {\n      this.hasReturnedResult = true;\n      process.nextTick(() => {\n        if (this.error) {\n          this.listener.onError(this.error);\n        } else {\n          this.listener.onSuccessfulResolution(\n            this.endpoints,\n            null,\n            null,\n            null,\n            {}\n          );\n        }\n      });\n    }\n  }\n  destroy(): void {\n    this.hasReturnedResult = false;\n  }\n\n  static getDefaultAuthority(target: GrpcUri): string {\n    return target.path.split(',')[0];\n  }\n}\n\nexport function setup() {\n  registerResolver(IPV4_SCHEME, IpResolver);\n  registerResolver(IPV6_SCHEME, IpResolver);\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  LoadBalancer,\n  ChannelControlHelper,\n  TypedLoadBalancingConfig,\n  registerLoadBalancerType,\n  createChildChannelControlHelper,\n} from './load-balancer';\nimport { ConnectivityState } from './connectivity-state';\nimport {\n  QueuePicker,\n  Picker,\n  PickArgs,\n  UnavailablePicker,\n  PickResult,\n} from './picker';\nimport * as logging from './logging';\nimport { LogVerbosity } from './constants';\nimport {\n  Endpoint,\n  endpointEqual,\n  endpointToString,\n} from './subchannel-address';\nimport { LeafLoadBalancer } from './load-balancer-pick-first';\nimport { ChannelOptions } from './channel-options';\n\nconst TRACER_NAME = 'round_robin';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\nconst TYPE_NAME = 'round_robin';\n\nclass RoundRobinLoadBalancingConfig implements TypedLoadBalancingConfig {\n  getLoadBalancerName(): string {\n    return TYPE_NAME;\n  }\n\n  constructor() {}\n\n  toJsonObject(): object {\n    return {\n      [TYPE_NAME]: {},\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static createFromJson(obj: any) {\n    return new RoundRobinLoadBalancingConfig();\n  }\n}\n\nclass RoundRobinPicker implements Picker {\n  constructor(\n    private readonly children: { endpoint: Endpoint; picker: Picker }[],\n    private nextIndex = 0\n  ) {}\n\n  pick(pickArgs: PickArgs): PickResult {\n    const childPicker = this.children[this.nextIndex].picker;\n    this.nextIndex = (this.nextIndex + 1) % this.children.length;\n    return childPicker.pick(pickArgs);\n  }\n\n  /**\n   * Check what the next subchannel returned would be. Used by the load\n   * balancer implementation to preserve this part of the picker state if\n   * possible when a subchannel connects or disconnects.\n   */\n  peekNextEndpoint(): Endpoint {\n    return this.children[this.nextIndex].endpoint;\n  }\n}\n\nexport class RoundRobinLoadBalancer implements LoadBalancer {\n  private children: LeafLoadBalancer[] = [];\n\n  private currentState: ConnectivityState = ConnectivityState.IDLE;\n\n  private currentReadyPicker: RoundRobinPicker | null = null;\n\n  private updatesPaused = false;\n\n  private childChannelControlHelper: ChannelControlHelper;\n\n  private lastError: string | null = null;\n\n  constructor(\n    private readonly channelControlHelper: ChannelControlHelper,\n    private readonly options: ChannelOptions\n  ) {\n    this.childChannelControlHelper = createChildChannelControlHelper(\n      channelControlHelper,\n      {\n        updateState: (connectivityState, picker) => {\n          this.calculateAndUpdateState();\n        },\n      }\n    );\n  }\n\n  private countChildrenWithState(state: ConnectivityState) {\n    return this.children.filter(child => child.getConnectivityState() === state)\n      .length;\n  }\n\n  private calculateAndUpdateState() {\n    if (this.updatesPaused) {\n      return;\n    }\n    if (this.countChildrenWithState(ConnectivityState.READY) > 0) {\n      const readyChildren = this.children.filter(\n        child => child.getConnectivityState() === ConnectivityState.READY\n      );\n      let index = 0;\n      if (this.currentReadyPicker !== null) {\n        const nextPickedEndpoint = this.currentReadyPicker.peekNextEndpoint();\n        index = readyChildren.findIndex(child =>\n          endpointEqual(child.getEndpoint(), nextPickedEndpoint)\n        );\n        if (index < 0) {\n          index = 0;\n        }\n      }\n      this.updateState(\n        ConnectivityState.READY,\n        new RoundRobinPicker(\n          readyChildren.map(child => ({\n            endpoint: child.getEndpoint(),\n            picker: child.getPicker(),\n          })),\n          index\n        )\n      );\n    } else if (this.countChildrenWithState(ConnectivityState.CONNECTING) > 0) {\n      this.updateState(ConnectivityState.CONNECTING, new QueuePicker(this));\n    } else if (\n      this.countChildrenWithState(ConnectivityState.TRANSIENT_FAILURE) > 0\n    ) {\n      this.updateState(\n        ConnectivityState.TRANSIENT_FAILURE,\n        new UnavailablePicker({\n          details: `No connection established. Last error: ${this.lastError}`,\n        })\n      );\n    } else {\n      this.updateState(ConnectivityState.IDLE, new QueuePicker(this));\n    }\n    /* round_robin should keep all children connected, this is how we do that.\n     * We can't do this more efficiently in the individual child's updateState\n     * callback because that doesn't have a reference to which child the state\n     * change is associated with. */\n    for (const child of this.children) {\n      if (child.getConnectivityState() === ConnectivityState.IDLE) {\n        child.exitIdle();\n      }\n    }\n  }\n\n  private updateState(newState: ConnectivityState, picker: Picker) {\n    trace(\n      ConnectivityState[this.currentState] +\n        ' -> ' +\n        ConnectivityState[newState]\n    );\n    if (newState === ConnectivityState.READY) {\n      this.currentReadyPicker = picker as RoundRobinPicker;\n    } else {\n      this.currentReadyPicker = null;\n    }\n    this.currentState = newState;\n    this.channelControlHelper.updateState(newState, picker);\n  }\n\n  private resetSubchannelList() {\n    for (const child of this.children) {\n      child.destroy();\n    }\n  }\n\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig\n  ): void {\n    this.resetSubchannelList();\n    trace('Connect to endpoint list ' + endpointList.map(endpointToString));\n    this.updatesPaused = true;\n    this.children = endpointList.map(\n      endpoint =>\n        new LeafLoadBalancer(\n          endpoint,\n          this.childChannelControlHelper,\n          this.options\n        )\n    );\n    for (const child of this.children) {\n      child.startConnecting();\n    }\n    this.updatesPaused = false;\n    this.calculateAndUpdateState();\n  }\n\n  exitIdle(): void {\n    /* The round_robin LB policy is only in the IDLE state if it has no\n     * addresses to try to connect to and it has no picked subchannel.\n     * In that case, there is no meaningful action that can be taken here. */\n  }\n  resetBackoff(): void {\n    // This LB policy has no backoff to reset\n  }\n  destroy(): void {\n    this.resetSubchannelList();\n  }\n  getTypeName(): string {\n    return TYPE_NAME;\n  }\n}\n\nexport function setup() {\n  registerLoadBalancerType(\n    TYPE_NAME,\n    RoundRobinLoadBalancer,\n    RoundRobinLoadBalancingConfig\n  );\n}\n", "/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { ChannelOptions } from './channel-options';\nimport { ConnectivityState } from './connectivity-state';\nimport { LogVerbosity, Status } from './constants';\nimport { Duration, durationToMs, isDuration, msToDuration } from './duration';\nimport {\n  ChannelControlHelper,\n  createChildChannelControlHelper,\n  registerLoadBalancerType,\n} from './experimental';\nimport {\n  selectLbConfigFromList,\n  LoadBalancer,\n  TypedLoadBalancingConfig,\n} from './load-balancer';\nimport { ChildLoadBalancerHandler } from './load-balancer-child-handler';\nimport { PickArgs, Picker, PickResult, PickResultType } from './picker';\nimport {\n  Endpoint,\n  EndpointMap,\n  SubchannelAddress,\n  endpointToString,\n} from './subchannel-address';\nimport {\n  BaseSubchannelWrapper,\n  SubchannelInterface,\n} from './subchannel-interface';\nimport * as logging from './logging';\nimport { LoadBalancingConfig } from './service-config';\n\nconst TRACER_NAME = 'outlier_detection';\n\nfunction trace(text: string): void {\n  logging.trace(LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n\nconst TYPE_NAME = 'outlier_detection';\n\nconst OUTLIER_DETECTION_ENABLED =\n  (process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION ?? 'true') === 'true';\n\nexport interface SuccessRateEjectionConfig {\n  readonly stdev_factor: number;\n  readonly enforcement_percentage: number;\n  readonly minimum_hosts: number;\n  readonly request_volume: number;\n}\n\nexport interface FailurePercentageEjectionConfig {\n  readonly threshold: number;\n  readonly enforcement_percentage: number;\n  readonly minimum_hosts: number;\n  readonly request_volume: number;\n}\n\nexport interface OutlierDetectionRawConfig {\n  interval?: Duration;\n  base_ejection_time?: Duration;\n  max_ejection_time?: Duration;\n  max_ejection_percent?: number;\n  success_rate_ejection?: Partial<SuccessRateEjectionConfig>;\n  failure_percentage_ejection?: Partial<FailurePercentageEjectionConfig>;\n  child_policy: LoadBalancingConfig[];\n}\n\nconst defaultSuccessRateEjectionConfig: SuccessRateEjectionConfig = {\n  stdev_factor: 1900,\n  enforcement_percentage: 100,\n  minimum_hosts: 5,\n  request_volume: 100,\n};\n\nconst defaultFailurePercentageEjectionConfig: FailurePercentageEjectionConfig =\n  {\n    threshold: 85,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 50,\n  };\n\ntype TypeofValues =\n  | 'object'\n  | 'boolean'\n  | 'function'\n  | 'number'\n  | 'string'\n  | 'undefined';\n\nfunction validateFieldType(\n  obj: any,\n  fieldName: string,\n  expectedType: TypeofValues,\n  objectName?: string\n) {\n  if (\n    fieldName in obj &&\n    obj[fieldName] !== undefined &&\n    typeof obj[fieldName] !== expectedType\n  ) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    throw new Error(\n      `outlier detection config ${fullFieldName} parse error: expected ${expectedType}, got ${typeof obj[\n        fieldName\n      ]}`\n    );\n  }\n}\n\nfunction validatePositiveDuration(\n  obj: any,\n  fieldName: string,\n  objectName?: string\n) {\n  const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n  if (fieldName in obj && obj[fieldName] !== undefined) {\n    if (!isDuration(obj[fieldName])) {\n      throw new Error(\n        `outlier detection config ${fullFieldName} parse error: expected Duration, got ${typeof obj[\n          fieldName\n        ]}`\n      );\n    }\n    if (\n      !(\n        obj[fieldName].seconds >= 0 &&\n        obj[fieldName].seconds <= 315_576_000_000 &&\n        obj[fieldName].nanos >= 0 &&\n        obj[fieldName].nanos <= 999_999_999\n      )\n    ) {\n      throw new Error(\n        `outlier detection config ${fullFieldName} parse error: values out of range for non-negative Duaration`\n      );\n    }\n  }\n}\n\nfunction validatePercentage(obj: any, fieldName: string, objectName?: string) {\n  const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n  validateFieldType(obj, fieldName, 'number', objectName);\n  if (\n    fieldName in obj &&\n    obj[fieldName] !== undefined &&\n    !(obj[fieldName] >= 0 && obj[fieldName] <= 100)\n  ) {\n    throw new Error(\n      `outlier detection config ${fullFieldName} parse error: value out of range for percentage (0-100)`\n    );\n  }\n}\n\nexport class OutlierDetectionLoadBalancingConfig\n  implements TypedLoadBalancingConfig\n{\n  private readonly intervalMs: number;\n  private readonly baseEjectionTimeMs: number;\n  private readonly maxEjectionTimeMs: number;\n  private readonly maxEjectionPercent: number;\n  private readonly successRateEjection: SuccessRateEjectionConfig | null;\n  private readonly failurePercentageEjection: FailurePercentageEjectionConfig | null;\n\n  constructor(\n    intervalMs: number | null,\n    baseEjectionTimeMs: number | null,\n    maxEjectionTimeMs: number | null,\n    maxEjectionPercent: number | null,\n    successRateEjection: Partial<SuccessRateEjectionConfig> | null,\n    failurePercentageEjection: Partial<FailurePercentageEjectionConfig> | null,\n    private readonly childPolicy: TypedLoadBalancingConfig\n  ) {\n    if (childPolicy.getLoadBalancerName() === 'pick_first') {\n      throw new Error(\n        'outlier_detection LB policy cannot have a pick_first child policy'\n      );\n    }\n    this.intervalMs = intervalMs ?? 10_000;\n    this.baseEjectionTimeMs = baseEjectionTimeMs ?? 30_000;\n    this.maxEjectionTimeMs = maxEjectionTimeMs ?? 300_000;\n    this.maxEjectionPercent = maxEjectionPercent ?? 10;\n    this.successRateEjection = successRateEjection\n      ? { ...defaultSuccessRateEjectionConfig, ...successRateEjection }\n      : null;\n    this.failurePercentageEjection = failurePercentageEjection\n      ? {\n          ...defaultFailurePercentageEjectionConfig,\n          ...failurePercentageEjection,\n        }\n      : null;\n  }\n  getLoadBalancerName(): string {\n    return TYPE_NAME;\n  }\n  toJsonObject(): object {\n    return {\n      outlier_detection: {\n        interval: msToDuration(this.intervalMs),\n        base_ejection_time: msToDuration(this.baseEjectionTimeMs),\n        max_ejection_time: msToDuration(this.maxEjectionTimeMs),\n        max_ejection_percent: this.maxEjectionPercent,\n        success_rate_ejection: this.successRateEjection ?? undefined,\n        failure_percentage_ejection:\n          this.failurePercentageEjection ?? undefined,\n        child_policy: [this.childPolicy.toJsonObject()],\n      },\n    };\n  }\n\n  getIntervalMs(): number {\n    return this.intervalMs;\n  }\n  getBaseEjectionTimeMs(): number {\n    return this.baseEjectionTimeMs;\n  }\n  getMaxEjectionTimeMs(): number {\n    return this.maxEjectionTimeMs;\n  }\n  getMaxEjectionPercent(): number {\n    return this.maxEjectionPercent;\n  }\n  getSuccessRateEjectionConfig(): SuccessRateEjectionConfig | null {\n    return this.successRateEjection;\n  }\n  getFailurePercentageEjectionConfig(): FailurePercentageEjectionConfig | null {\n    return this.failurePercentageEjection;\n  }\n  getChildPolicy(): TypedLoadBalancingConfig {\n    return this.childPolicy;\n  }\n\n  static createFromJson(obj: any): OutlierDetectionLoadBalancingConfig {\n    validatePositiveDuration(obj, 'interval');\n    validatePositiveDuration(obj, 'base_ejection_time');\n    validatePositiveDuration(obj, 'max_ejection_time');\n    validatePercentage(obj, 'max_ejection_percent');\n    if (\n      'success_rate_ejection' in obj &&\n      obj.success_rate_ejection !== undefined\n    ) {\n      if (typeof obj.success_rate_ejection !== 'object') {\n        throw new Error(\n          'outlier detection config success_rate_ejection must be an object'\n        );\n      }\n      validateFieldType(\n        obj.success_rate_ejection,\n        'stdev_factor',\n        'number',\n        'success_rate_ejection'\n      );\n      validatePercentage(\n        obj.success_rate_ejection,\n        'enforcement_percentage',\n        'success_rate_ejection'\n      );\n      validateFieldType(\n        obj.success_rate_ejection,\n        'minimum_hosts',\n        'number',\n        'success_rate_ejection'\n      );\n      validateFieldType(\n        obj.success_rate_ejection,\n        'request_volume',\n        'number',\n        'success_rate_ejection'\n      );\n    }\n    if (\n      'failure_percentage_ejection' in obj &&\n      obj.failure_percentage_ejection !== undefined\n    ) {\n      if (typeof obj.failure_percentage_ejection !== 'object') {\n        throw new Error(\n          'outlier detection config failure_percentage_ejection must be an object'\n        );\n      }\n      validatePercentage(\n        obj.failure_percentage_ejection,\n        'threshold',\n        'failure_percentage_ejection'\n      );\n      validatePercentage(\n        obj.failure_percentage_ejection,\n        'enforcement_percentage',\n        'failure_percentage_ejection'\n      );\n      validateFieldType(\n        obj.failure_percentage_ejection,\n        'minimum_hosts',\n        'number',\n        'failure_percentage_ejection'\n      );\n      validateFieldType(\n        obj.failure_percentage_ejection,\n        'request_volume',\n        'number',\n        'failure_percentage_ejection'\n      );\n    }\n\n    if (!('child_policy' in obj) || !Array.isArray(obj.child_policy)) {\n      throw new Error('outlier detection config child_policy must be an array');\n    }\n    const childPolicy = selectLbConfigFromList(obj.child_policy);\n    if (!childPolicy) {\n      throw new Error(\n        'outlier detection config child_policy: no valid recognized policy found'\n      );\n    }\n\n    return new OutlierDetectionLoadBalancingConfig(\n      obj.interval ? durationToMs(obj.interval) : null,\n      obj.base_ejection_time ? durationToMs(obj.base_ejection_time) : null,\n      obj.max_ejection_time ? durationToMs(obj.max_ejection_time) : null,\n      obj.max_ejection_percent ?? null,\n      obj.success_rate_ejection,\n      obj.failure_percentage_ejection,\n      childPolicy\n    );\n  }\n}\n\nclass OutlierDetectionSubchannelWrapper\n  extends BaseSubchannelWrapper\n  implements SubchannelInterface\n{\n  private refCount = 0;\n  constructor(\n    childSubchannel: SubchannelInterface,\n    private mapEntry?: MapEntry\n  ) {\n    super(childSubchannel);\n  }\n\n  ref() {\n    this.child.ref();\n    this.refCount += 1;\n  }\n\n  unref() {\n    this.child.unref();\n    this.refCount -= 1;\n    if (this.refCount <= 0) {\n      if (this.mapEntry) {\n        const index = this.mapEntry.subchannelWrappers.indexOf(this);\n        if (index >= 0) {\n          this.mapEntry.subchannelWrappers.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  eject() {\n    this.setHealthy(false);\n  }\n\n  uneject() {\n    this.setHealthy(true);\n  }\n\n  getMapEntry(): MapEntry | undefined {\n    return this.mapEntry;\n  }\n\n  getWrappedSubchannel(): SubchannelInterface {\n    return this.child;\n  }\n}\n\ninterface CallCountBucket {\n  success: number;\n  failure: number;\n}\n\nfunction createEmptyBucket(): CallCountBucket {\n  return {\n    success: 0,\n    failure: 0,\n  };\n}\n\nclass CallCounter {\n  private activeBucket: CallCountBucket = createEmptyBucket();\n  private inactiveBucket: CallCountBucket = createEmptyBucket();\n  addSuccess() {\n    this.activeBucket.success += 1;\n  }\n  addFailure() {\n    this.activeBucket.failure += 1;\n  }\n  switchBuckets() {\n    this.inactiveBucket = this.activeBucket;\n    this.activeBucket = createEmptyBucket();\n  }\n  getLastSuccesses() {\n    return this.inactiveBucket.success;\n  }\n  getLastFailures() {\n    return this.inactiveBucket.failure;\n  }\n}\n\nclass OutlierDetectionPicker implements Picker {\n  constructor(private wrappedPicker: Picker, private countCalls: boolean) {}\n  pick(pickArgs: PickArgs): PickResult {\n    const wrappedPick = this.wrappedPicker.pick(pickArgs);\n    if (wrappedPick.pickResultType === PickResultType.COMPLETE) {\n      const subchannelWrapper =\n        wrappedPick.subchannel as OutlierDetectionSubchannelWrapper;\n      const mapEntry = subchannelWrapper.getMapEntry();\n      if (mapEntry) {\n        let onCallEnded = wrappedPick.onCallEnded;\n        if (this.countCalls) {\n          onCallEnded = statusCode => {\n            if (statusCode === Status.OK) {\n              mapEntry.counter.addSuccess();\n            } else {\n              mapEntry.counter.addFailure();\n            }\n            wrappedPick.onCallEnded?.(statusCode);\n          };\n        }\n        return {\n          ...wrappedPick,\n          subchannel: subchannelWrapper.getWrappedSubchannel(),\n          onCallEnded: onCallEnded,\n        };\n      } else {\n        return {\n          ...wrappedPick,\n          subchannel: subchannelWrapper.getWrappedSubchannel(),\n        };\n      }\n    } else {\n      return wrappedPick;\n    }\n  }\n}\n\ninterface MapEntry {\n  counter: CallCounter;\n  currentEjectionTimestamp: Date | null;\n  ejectionTimeMultiplier: number;\n  subchannelWrappers: OutlierDetectionSubchannelWrapper[];\n}\n\nexport class OutlierDetectionLoadBalancer implements LoadBalancer {\n  private childBalancer: ChildLoadBalancerHandler;\n  private entryMap = new EndpointMap<MapEntry>();\n  private latestConfig: OutlierDetectionLoadBalancingConfig | null = null;\n  private ejectionTimer: NodeJS.Timeout;\n  private timerStartTime: Date | null = null;\n\n  constructor(\n    channelControlHelper: ChannelControlHelper,\n    options: ChannelOptions\n  ) {\n    this.childBalancer = new ChildLoadBalancerHandler(\n      createChildChannelControlHelper(channelControlHelper, {\n        createSubchannel: (\n          subchannelAddress: SubchannelAddress,\n          subchannelArgs: ChannelOptions\n        ) => {\n          const originalSubchannel = channelControlHelper.createSubchannel(\n            subchannelAddress,\n            subchannelArgs\n          );\n          const mapEntry =\n            this.entryMap.getForSubchannelAddress(subchannelAddress);\n          const subchannelWrapper = new OutlierDetectionSubchannelWrapper(\n            originalSubchannel,\n            mapEntry\n          );\n          if (mapEntry?.currentEjectionTimestamp !== null) {\n            // If the address is ejected, propagate that to the new subchannel wrapper\n            subchannelWrapper.eject();\n          }\n          mapEntry?.subchannelWrappers.push(subchannelWrapper);\n          return subchannelWrapper;\n        },\n        updateState: (connectivityState: ConnectivityState, picker: Picker) => {\n          if (connectivityState === ConnectivityState.READY) {\n            channelControlHelper.updateState(\n              connectivityState,\n              new OutlierDetectionPicker(picker, this.isCountingEnabled())\n            );\n          } else {\n            channelControlHelper.updateState(connectivityState, picker);\n          }\n        },\n      }),\n      options\n    );\n    this.ejectionTimer = setInterval(() => {}, 0);\n    clearInterval(this.ejectionTimer);\n  }\n\n  private isCountingEnabled(): boolean {\n    return (\n      this.latestConfig !== null &&\n      (this.latestConfig.getSuccessRateEjectionConfig() !== null ||\n        this.latestConfig.getFailurePercentageEjectionConfig() !== null)\n    );\n  }\n\n  private getCurrentEjectionPercent() {\n    let ejectionCount = 0;\n    for (const mapEntry of this.entryMap.values()) {\n      if (mapEntry.currentEjectionTimestamp !== null) {\n        ejectionCount += 1;\n      }\n    }\n    return (ejectionCount * 100) / this.entryMap.size;\n  }\n\n  private runSuccessRateCheck(ejectionTimestamp: Date) {\n    if (!this.latestConfig) {\n      return;\n    }\n    const successRateConfig = this.latestConfig.getSuccessRateEjectionConfig();\n    if (!successRateConfig) {\n      return;\n    }\n    trace('Running success rate check');\n    // Step 1\n    const targetRequestVolume = successRateConfig.request_volume;\n    let addresesWithTargetVolume = 0;\n    const successRates: number[] = [];\n    for (const [endpoint, mapEntry] of this.entryMap.entries()) {\n      const successes = mapEntry.counter.getLastSuccesses();\n      const failures = mapEntry.counter.getLastFailures();\n      trace(\n        'Stats for ' +\n          endpointToString(endpoint) +\n          ': successes=' +\n          successes +\n          ' failures=' +\n          failures +\n          ' targetRequestVolume=' +\n          targetRequestVolume\n      );\n      if (successes + failures >= targetRequestVolume) {\n        addresesWithTargetVolume += 1;\n        successRates.push(successes / (successes + failures));\n      }\n    }\n    trace(\n      'Found ' +\n        addresesWithTargetVolume +\n        ' success rate candidates; currentEjectionPercent=' +\n        this.getCurrentEjectionPercent() +\n        ' successRates=[' +\n        successRates +\n        ']'\n    );\n    if (addresesWithTargetVolume < successRateConfig.minimum_hosts) {\n      return;\n    }\n\n    // Step 2\n    const successRateMean =\n      successRates.reduce((a, b) => a + b) / successRates.length;\n    let successRateDeviationSum = 0;\n    for (const rate of successRates) {\n      const deviation = rate - successRateMean;\n      successRateDeviationSum += deviation * deviation;\n    }\n    const successRateVariance = successRateDeviationSum / successRates.length;\n    const successRateStdev = Math.sqrt(successRateVariance);\n    const ejectionThreshold =\n      successRateMean -\n      successRateStdev * (successRateConfig.stdev_factor / 1000);\n    trace(\n      'stdev=' + successRateStdev + ' ejectionThreshold=' + ejectionThreshold\n    );\n\n    // Step 3\n    for (const [address, mapEntry] of this.entryMap.entries()) {\n      // Step 3.i\n      if (\n        this.getCurrentEjectionPercent() >=\n        this.latestConfig.getMaxEjectionPercent()\n      ) {\n        break;\n      }\n      // Step 3.ii\n      const successes = mapEntry.counter.getLastSuccesses();\n      const failures = mapEntry.counter.getLastFailures();\n      if (successes + failures < targetRequestVolume) {\n        continue;\n      }\n      // Step 3.iii\n      const successRate = successes / (successes + failures);\n      trace('Checking candidate ' + address + ' successRate=' + successRate);\n      if (successRate < ejectionThreshold) {\n        const randomNumber = Math.random() * 100;\n        trace(\n          'Candidate ' +\n            address +\n            ' randomNumber=' +\n            randomNumber +\n            ' enforcement_percentage=' +\n            successRateConfig.enforcement_percentage\n        );\n        if (randomNumber < successRateConfig.enforcement_percentage) {\n          trace('Ejecting candidate ' + address);\n          this.eject(mapEntry, ejectionTimestamp);\n        }\n      }\n    }\n  }\n\n  private runFailurePercentageCheck(ejectionTimestamp: Date) {\n    if (!this.latestConfig) {\n      return;\n    }\n    const failurePercentageConfig =\n      this.latestConfig.getFailurePercentageEjectionConfig();\n    if (!failurePercentageConfig) {\n      return;\n    }\n    trace(\n      'Running failure percentage check. threshold=' +\n        failurePercentageConfig.threshold +\n        ' request volume threshold=' +\n        failurePercentageConfig.request_volume\n    );\n    // Step 1\n    let addressesWithTargetVolume = 0;\n    for (const mapEntry of this.entryMap.values()) {\n      const successes = mapEntry.counter.getLastSuccesses();\n      const failures = mapEntry.counter.getLastFailures();\n      if (successes + failures >= failurePercentageConfig.request_volume) {\n        addressesWithTargetVolume += 1;\n      }\n    }\n    if (addressesWithTargetVolume < failurePercentageConfig.minimum_hosts) {\n      return;\n    }\n\n    // Step 2\n    for (const [address, mapEntry] of this.entryMap.entries()) {\n      // Step 2.i\n      if (\n        this.getCurrentEjectionPercent() >=\n        this.latestConfig.getMaxEjectionPercent()\n      ) {\n        break;\n      }\n      // Step 2.ii\n      const successes = mapEntry.counter.getLastSuccesses();\n      const failures = mapEntry.counter.getLastFailures();\n      trace('Candidate successes=' + successes + ' failures=' + failures);\n      if (successes + failures < failurePercentageConfig.request_volume) {\n        continue;\n      }\n      // Step 2.iii\n      const failurePercentage = (failures * 100) / (failures + successes);\n      if (failurePercentage > failurePercentageConfig.threshold) {\n        const randomNumber = Math.random() * 100;\n        trace(\n          'Candidate ' +\n            address +\n            ' randomNumber=' +\n            randomNumber +\n            ' enforcement_percentage=' +\n            failurePercentageConfig.enforcement_percentage\n        );\n        if (randomNumber < failurePercentageConfig.enforcement_percentage) {\n          trace('Ejecting candidate ' + address);\n          this.eject(mapEntry, ejectionTimestamp);\n        }\n      }\n    }\n  }\n\n  private eject(mapEntry: MapEntry, ejectionTimestamp: Date) {\n    mapEntry.currentEjectionTimestamp = new Date();\n    mapEntry.ejectionTimeMultiplier += 1;\n    for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n      subchannelWrapper.eject();\n    }\n  }\n\n  private uneject(mapEntry: MapEntry) {\n    mapEntry.currentEjectionTimestamp = null;\n    for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n      subchannelWrapper.uneject();\n    }\n  }\n\n  private switchAllBuckets() {\n    for (const mapEntry of this.entryMap.values()) {\n      mapEntry.counter.switchBuckets();\n    }\n  }\n\n  private startTimer(delayMs: number) {\n    this.ejectionTimer = setTimeout(() => this.runChecks(), delayMs);\n    this.ejectionTimer.unref?.();\n  }\n\n  private runChecks() {\n    const ejectionTimestamp = new Date();\n    trace('Ejection timer running');\n\n    this.switchAllBuckets();\n\n    if (!this.latestConfig) {\n      return;\n    }\n    this.timerStartTime = ejectionTimestamp;\n    this.startTimer(this.latestConfig.getIntervalMs());\n\n    this.runSuccessRateCheck(ejectionTimestamp);\n    this.runFailurePercentageCheck(ejectionTimestamp);\n\n    for (const [address, mapEntry] of this.entryMap.entries()) {\n      if (mapEntry.currentEjectionTimestamp === null) {\n        if (mapEntry.ejectionTimeMultiplier > 0) {\n          mapEntry.ejectionTimeMultiplier -= 1;\n        }\n      } else {\n        const baseEjectionTimeMs = this.latestConfig.getBaseEjectionTimeMs();\n        const maxEjectionTimeMs = this.latestConfig.getMaxEjectionTimeMs();\n        const returnTime = new Date(\n          mapEntry.currentEjectionTimestamp.getTime()\n        );\n        returnTime.setMilliseconds(\n          returnTime.getMilliseconds() +\n            Math.min(\n              baseEjectionTimeMs * mapEntry.ejectionTimeMultiplier,\n              Math.max(baseEjectionTimeMs, maxEjectionTimeMs)\n            )\n        );\n        if (returnTime < new Date()) {\n          trace('Unejecting ' + address);\n          this.uneject(mapEntry);\n        }\n      }\n    }\n  }\n\n  updateAddressList(\n    endpointList: Endpoint[],\n    lbConfig: TypedLoadBalancingConfig,\n    attributes: { [key: string]: unknown }\n  ): void {\n    if (!(lbConfig instanceof OutlierDetectionLoadBalancingConfig)) {\n      return;\n    }\n    for (const endpoint of endpointList) {\n      if (!this.entryMap.has(endpoint)) {\n        trace('Adding map entry for ' + endpointToString(endpoint));\n        this.entryMap.set(endpoint, {\n          counter: new CallCounter(),\n          currentEjectionTimestamp: null,\n          ejectionTimeMultiplier: 0,\n          subchannelWrappers: [],\n        });\n      }\n    }\n    this.entryMap.deleteMissing(endpointList);\n    const childPolicy = lbConfig.getChildPolicy();\n    this.childBalancer.updateAddressList(endpointList, childPolicy, attributes);\n\n    if (\n      lbConfig.getSuccessRateEjectionConfig() ||\n      lbConfig.getFailurePercentageEjectionConfig()\n    ) {\n      if (this.timerStartTime) {\n        trace('Previous timer existed. Replacing timer');\n        clearTimeout(this.ejectionTimer);\n        const remainingDelay =\n          lbConfig.getIntervalMs() -\n          (new Date().getTime() - this.timerStartTime.getTime());\n        this.startTimer(remainingDelay);\n      } else {\n        trace('Starting new timer');\n        this.timerStartTime = new Date();\n        this.startTimer(lbConfig.getIntervalMs());\n        this.switchAllBuckets();\n      }\n    } else {\n      trace('Counting disabled. Cancelling timer.');\n      this.timerStartTime = null;\n      clearTimeout(this.ejectionTimer);\n      for (const mapEntry of this.entryMap.values()) {\n        this.uneject(mapEntry);\n        mapEntry.ejectionTimeMultiplier = 0;\n      }\n    }\n\n    this.latestConfig = lbConfig;\n  }\n  exitIdle(): void {\n    this.childBalancer.exitIdle();\n  }\n  resetBackoff(): void {\n    this.childBalancer.resetBackoff();\n  }\n  destroy(): void {\n    clearTimeout(this.ejectionTimer);\n    this.childBalancer.destroy();\n  }\n  getTypeName(): string {\n    return TYPE_NAME;\n  }\n}\n\nexport function setup() {\n  if (OUTLIER_DETECTION_ENABLED) {\n    registerLoadBalancerType(\n      TYPE_NAME,\n      OutlierDetectionLoadBalancer,\n      OutlierDetectionLoadBalancingConfig\n    );\n  }\n}\n", "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  ClientDuplexStream,\n  ClientReadableStream,\n  ClientUnaryCall,\n  ClientWritableStream,\n  ServiceError,\n} from './call';\nimport { CallCredentials, OAuth2Client } from './call-credentials';\nimport { StatusObject } from './call-interface';\nimport { Channel, ChannelImplementation } from './channel';\nimport { CompressionAlgorithms } from './compression-algorithms';\nimport { ConnectivityState } from './connectivity-state';\nimport { ChannelCredentials, VerifyOptions } from './channel-credentials';\nimport {\n  CallOptions,\n  Client,\n  ClientOptions,\n  CallInvocationTransformer,\n  CallProperties,\n  UnaryCallback,\n} from './client';\nimport { LogVerbosity, Status, Propagate } from './constants';\nimport * as logging from './logging';\nimport {\n  Deserialize,\n  loadPackageDefinition,\n  makeClientConstructor,\n  MethodDefinition,\n  Serialize,\n  ServiceDefinition,\n} from './make-client';\nimport { Metadata, MetadataOptions, MetadataValue } from './metadata';\nimport {\n  Server,\n  ServerOptions,\n  UntypedHandleCall,\n  UntypedServiceImplementation,\n} from './server';\nimport { KeyCertPair, ServerCredentials } from './server-credentials';\nimport { StatusBuilder } from './status-builder';\nimport {\n  handleBidiStreamingCall,\n  handleServerStreamingCall,\n  handleClientStreamingCall,\n  handleUnaryCall,\n  sendUnaryData,\n  ServerUnaryCall,\n  ServerReadableStream,\n  ServerWritableStream,\n  ServerDuplexStream,\n  ServerErrorResponse,\n} from './server-call';\n\nexport { OAuth2Client };\n\n/**** Client Credentials ****/\n\n// Using assign only copies enumerable properties, which is what we want\nexport const credentials = {\n  /**\n   * Combine a ChannelCredentials with any number of CallCredentials into a\n   * single ChannelCredentials object.\n   * @param channelCredentials The ChannelCredentials object.\n   * @param callCredentials Any number of CallCredentials objects.\n   * @return The resulting ChannelCredentials object.\n   */\n  combineChannelCredentials: (\n    channelCredentials: ChannelCredentials,\n    ...callCredentials: CallCredentials[]\n  ): ChannelCredentials => {\n    return callCredentials.reduce(\n      (acc, other) => acc.compose(other),\n      channelCredentials\n    );\n  },\n\n  /**\n   * Combine any number of CallCredentials into a single CallCredentials\n   * object.\n   * @param first The first CallCredentials object.\n   * @param additional Any number of additional CallCredentials objects.\n   * @return The resulting CallCredentials object.\n   */\n  combineCallCredentials: (\n    first: CallCredentials,\n    ...additional: CallCredentials[]\n  ): CallCredentials => {\n    return additional.reduce((acc, other) => acc.compose(other), first);\n  },\n\n  // from channel-credentials.ts\n  createInsecure: ChannelCredentials.createInsecure,\n  createSsl: ChannelCredentials.createSsl,\n  createFromSecureContext: ChannelCredentials.createFromSecureContext,\n\n  // from call-credentials.ts\n  createFromMetadataGenerator: CallCredentials.createFromMetadataGenerator,\n  createFromGoogleCredential: CallCredentials.createFromGoogleCredential,\n  createEmpty: CallCredentials.createEmpty,\n};\n\n/**** Metadata ****/\n\nexport { Metadata, MetadataOptions, MetadataValue };\n\n/**** Constants ****/\n\nexport {\n  LogVerbosity as logVerbosity,\n  Status as status,\n  ConnectivityState as connectivityState,\n  Propagate as propagate,\n  CompressionAlgorithms as compressionAlgorithms,\n  // TODO: Other constants as well\n};\n\n/**** Client ****/\n\nexport {\n  Client,\n  ClientOptions,\n  loadPackageDefinition,\n  makeClientConstructor,\n  makeClientConstructor as makeGenericClientConstructor,\n  CallProperties,\n  CallInvocationTransformer,\n  ChannelImplementation as Channel,\n  Channel as ChannelInterface,\n  UnaryCallback as requestCallback,\n};\n\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nexport const closeClient = (client: Client) => client.close();\n\nexport const waitForClientReady = (\n  client: Client,\n  deadline: Date | number,\n  callback: (error?: Error) => void\n) => client.waitForReady(deadline, callback);\n\n/* Interfaces */\n\nexport {\n  sendUnaryData,\n  ChannelCredentials,\n  CallCredentials,\n  Deadline,\n  Serialize as serialize,\n  Deserialize as deserialize,\n  ClientUnaryCall,\n  ClientReadableStream,\n  ClientWritableStream,\n  ClientDuplexStream,\n  CallOptions,\n  MethodDefinition,\n  StatusObject,\n  ServiceError,\n  ServerUnaryCall,\n  ServerReadableStream,\n  ServerWritableStream,\n  ServerDuplexStream,\n  ServerErrorResponse,\n  ServiceDefinition,\n  UntypedHandleCall,\n  UntypedServiceImplementation,\n  VerifyOptions,\n};\n\n/**** Server ****/\n\nexport {\n  handleBidiStreamingCall,\n  handleServerStreamingCall,\n  handleUnaryCall,\n  handleClientStreamingCall,\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type Call =\n  | ClientUnaryCall\n  | ClientReadableStream<any>\n  | ClientWritableStream<any>\n  | ClientDuplexStream<any, any>;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**** Unimplemented function stubs ****/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const loadObject = (value: any, options: any): never => {\n  throw new Error(\n    'Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead'\n  );\n};\n\nexport const load = (filename: any, format: any, options: any): never => {\n  throw new Error(\n    'Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead'\n  );\n};\n\nexport const setLogger = (logger: Partial<Console>): void => {\n  logging.setLogger(logger);\n};\n\nexport const setLogVerbosity = (verbosity: LogVerbosity): void => {\n  logging.setLoggerVerbosity(verbosity);\n};\n\nexport { Server, ServerOptions };\nexport { ServerCredentials };\nexport { KeyCertPair };\n\nexport const getClientChannel = (client: Client) => {\n  return Client.prototype.getChannel.call(client);\n};\n\nexport { StatusBuilder };\n\nexport { Listener, InterceptingListener } from './call-interface';\n\nexport {\n  Requester,\n  ListenerBuilder,\n  RequesterBuilder,\n  Interceptor,\n  InterceptorOptions,\n  InterceptorProvider,\n  InterceptingCall,\n  InterceptorConfigurationError,\n  NextCall,\n} from './client-interceptors';\n\nexport {\n  GrpcObject,\n  ServiceClientConstructor,\n  ProtobufTypeDefinition,\n} from './make-client';\n\nexport { ChannelOptions } from './channel-options';\n\nexport { getChannelzServiceDefinition, getChannelzHandlers } from './channelz';\n\nexport { addAdminServicesToServer } from './admin';\n\nexport {\n  ServiceConfig,\n  LoadBalancingConfig,\n  MethodConfig,\n  RetryPolicy,\n} from './service-config';\n\nexport {\n  ServerListener,\n  FullServerListener,\n  ServerListenerBuilder,\n  Responder,\n  FullResponder,\n  ResponderBuilder,\n  ServerInterceptingCallInterface,\n  ServerInterceptingCall,\n  ServerInterceptor,\n} from './server-interceptors';\n\nimport * as experimental from './experimental';\nexport { experimental };\n\nimport * as resolver_dns from './resolver-dns';\nimport * as resolver_uds from './resolver-uds';\nimport * as resolver_ip from './resolver-ip';\nimport * as load_balancer_pick_first from './load-balancer-pick-first';\nimport * as load_balancer_round_robin from './load-balancer-round-robin';\nimport * as load_balancer_outlier_detection from './load-balancer-outlier-detection';\nimport * as channelz from './channelz';\nimport { Deadline } from './deadline';\n\n(() => {\n  resolver_dns.setup();\n  resolver_uds.setup();\n  resolver_ip.setup();\n  load_balancer_pick_first.setup();\n  load_balancer_round_robin.setup();\n  load_balancer_outlier_detection.setup();\n  channelz.setup();\n})();\n", "'use strict'\n\nconst fpStackTracePattern = /at\\s{1}(?:.*\\.)?plugin\\s{1}.*\\n\\s*(.*)/\nconst fileNamePattern = /(\\w*(\\.\\w*)*)\\..*/\n\nmodule.exports = function getPluginName (fn) {\n  if (fn.name.length > 0) return fn.name\n\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 10\n  try {\n    throw new Error('anonymous function')\n  } catch (e) {\n    Error.stackTraceLimit = stackTraceLimit\n    return extractPluginName(e.stack)\n  }\n}\n\nfunction extractPluginName (stack) {\n  const m = stack.match(fpStackTracePattern)\n\n  // get last section of path and match for filename\n  return m ? m[1].split(/[/\\\\]/).slice(-1)[0].match(fileNamePattern)[1] : 'anonymous'\n}\nmodule.exports.extractPluginName = extractPluginName\n", "'use strict'\n\nmodule.exports = function toCamelCase (name) {\n  if (name[0] === '@') {\n    name = name.slice(1).replace('/', '-')\n  }\n  const newName = name.replace(/-(.)/g, function (match, g1) {\n    return g1.toUpperCase()\n  })\n  return newName\n}\n", "'use strict'\n\nconst getPluginName = require('./lib/getPluginName')\nconst toCamelCase = require('./lib/toCamelCase')\n\nlet count = 0\n\nfunction plugin (fn, options = {}) {\n  let autoName = false\n\n  if (typeof fn.default !== 'undefined') {\n    // Support for 'export default' behaviour in transpiled ECMAScript module\n    fn = fn.default\n  }\n\n  if (typeof fn !== 'function') {\n    throw new TypeError(\n      `fastify-plugin expects a function, instead got a '${typeof fn}'`\n    )\n  }\n\n  if (typeof options === 'string') {\n    options = {\n      fastify: options\n    }\n  }\n\n  if (\n    typeof options !== 'object' ||\n    Array.isArray(options) ||\n    options === null\n  ) {\n    throw new TypeError('The options object should be an object')\n  }\n\n  if (options.fastify !== undefined && typeof options.fastify !== 'string') {\n    throw new TypeError(`fastify-plugin expects a version string, instead got '${typeof options.fastify}'`)\n  }\n\n  if (!options.name) {\n    autoName = true\n    options.name = getPluginName(fn) + '-auto-' + count++\n  }\n\n  fn[Symbol.for('skip-override')] = options.encapsulate !== true\n  fn[Symbol.for('fastify.display-name')] = options.name\n  fn[Symbol.for('plugin-meta')] = options\n\n  // Faux modules support\n  if (!fn.default) {\n    fn.default = fn\n  }\n\n  // TypeScript support for named imports\n  // See https://github.com/fastify/fastify/issues/2404 for more details\n  // The type definitions would have to be update to match this.\n  const camelCase = toCamelCase(options.name)\n  if (!autoName && !fn[camelCase]) {\n    fn[camelCase] = fn\n  }\n\n  return fn\n}\n\nmodule.exports = plugin\nmodule.exports.default = plugin\nmodule.exports.fastifyPlugin = plugin\n", "import * as grpc from '@grpc/grpc-js';\r\nimport * as protoLoader from '@grpc/proto-loader';\r\nimport fp from 'fastify-plugin';\r\nimport path from 'path';\r\nimport { FastifyInstance, FastifyPluginAsync } from 'fastify';\r\nimport { ProtoGrpcType } from 'protobufTypings/user';\r\nimport { UserServiceClient } from 'protobufTypings/user/service/UserService';\r\n\r\ndeclare module 'fastify' {\r\n  interface FastifyInstance {\r\n    grpcUserClient: UserServiceClient;\r\n  }\r\n}\r\n\r\nconst grpcClientUserService: FastifyPluginAsync = fp(async (app: FastifyInstance): Promise<void> => {\r\n  try {\r\n    /*\r\n     * Load config grpc with user\r\n     */\r\n    const PROTO_FILE_USER = path.resolve(process.cwd(), './proto/user.proto');\r\n    const packageDef = protoLoader.loadSync(PROTO_FILE_USER);\r\n    const grpcObj = grpc.loadPackageDefinition(packageDef) as unknown as ProtoGrpcType;\r\n\r\n    /*\r\n     * Load config grpc with enviroment\r\n     */\r\n    const hasGrpcClientUser = !app.config.GRPC_CLIENT_USER;\r\n    if (hasGrpcClientUser) {\r\n      app.log.error('Env config grpc client user empty or undifined');\r\n\r\n      return;\r\n    }\r\n\r\n    /*\r\n     * Load and check connect server grpc user\r\n     */\r\n    const client = new grpcObj.user.service.UserService(\r\n      `${app.config.GRPC_CLIENT_USER}`,\r\n      grpc.credentials.createInsecure(),\r\n    );\r\n\r\n    const hasGrpcUserClientApp = app.grpcUserClient;\r\n    if (!hasGrpcUserClientApp) {\r\n      app.grpcUserClient = client;\r\n    }\r\n\r\n    const deadline = new Date();\r\n    deadline.setSeconds(deadline.getSeconds() + 1);\r\n    client.waitForReady(deadline, (error?: Error): void => {\r\n      if (error) {\r\n        app.log.error('Grpc client user falsed to coonnect error', error.stack);\r\n\r\n        return;\r\n      }\r\n\r\n      client.Healcheck({}, (error: grpc.ServiceError | null, result): void => {\r\n        if (error) {\r\n          app.log.error('Grpc client user healcheck error', error.stack);\r\n          return;\r\n        }\r\n\r\n        app.log.info('Grpc client user healcheck success');\r\n      });\r\n    });\r\n\r\n    if (app) app.log.info('Load config grpc client user successs');\r\n  } catch (error) {\r\n    app.log.error('Connect grpc client user error', error);\r\n  }\r\n});\r\n\r\nexport default grpcClientUserService;\r\n"],
  "mappings": "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R,KAAQ,sBACR,GAAM,GACR,CACF,EACA,WAAc,CACZ,CACE,IACA,SACF,CACF,EACA,SAAY,CACV,CACE,EACA,CACF,CACF,CACF,EACA,aAAgB,CACd,OAAU,CACR,MAAS,CACP,KAAQ,QACR,GAAM,EACN,QAAW,CACT,QAAW,QACb,CACF,EACA,OAAU,CACR,KAAQ,OACR,GAAM,CACR,EACA,OAAU,CACR,KAAQ,SACR,GAAM,EACN,QAAW,CACT,QAAW,WACb,CACF,EACA,KAAQ,CACN,KAAQ,OACR,GAAM,CACR,EACA,WAAc,CACZ,KAAQ,OACR,GAAM,CACR,EACA,KAAQ,CACN,KAAQ,OACR,GAAM,EACR,EACA,oBAAuB,CACrB,KAAQ,WACR,KAAQ,sBACR,GAAM,GACR,CACF,EACA,WAAc,CACZ,CACE,IACA,SACF,CACF,EACA,SAAY,CACV,CACE,EACA,CACF,CACF,EACA,OAAU,CACR,MAAS,CACP,OAAU,CACR,OAAU,EACV,KAAQ,EACR,aAAgB,CAClB,CACF,EACA,OAAU,CACR,OAAU,CACR,UAAa,EACb,UAAa,EACb,UAAa,CACf,CACF,CACF,CACF,EACA,aAAgB,CACd,OAAU,CACR,oBAAuB,CACrB,KAAQ,WACR,KAAQ,sBACR,GAAM,GACR,CACF,EACA,WAAc,CACZ,CACE,IACA,SACF,CACF,CACF,EACA,YAAe,CACb,OAAU,CACR,WAAc,CACZ,KAAQ,OACR,GAAM,CACR,EACA,WAAc,CACZ,KAAQ,OACR,GAAM,CACR,EACA,oBAAuB,CACrB,KAAQ,WACR,KAAQ,sBACR,GAAM,GACR,CACF,EACA,WAAc,CACZ,CACE,IACA,SACF,CACF,CACF,EACA,iBAAoB,CAClB,OAAU,CACR,WAAc,CACZ,KAAQ,OACR,GAAM,CACR,EACA,oBAAuB,CACrB,KAAQ,WACR,KAAQ,sBACR,GAAM,GACR,CACF,EACA,WAAc,CACZ,CACE,IACA,SACF,CACF,CACF,EACA,eAAkB,CAChB,OAAU,CACR,WAAc,CACZ,KAAQ,OACR,GAAM,EACR,EACA,oBAAuB,CACrB,KAAQ,WACR,KAAQ,sBACR,GAA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",
  "names": ["Status", "exports", "LogVerbosity", "Propagate", "require_package", "__commonJSMin", "exports", "module", "constants_1", "process_1", "clientVersion", "DEFAULT_LOGGER", "message", "optionalParams", "_logger", "_logVerbosity", "verbosityString", "_b", "_a", "getLogger", "exports", "setLogger", "logger", "setLoggerVerbosity", "verbosity", "log", "severity", "args", "logFunction", "tracersString", "_d", "_c", "enabledTracers", "disabledTracers", "tracerName", "allEnabled", "trace", "tracer", "text", "isTracerEnabled", "getErrorMessage", "error", "exports", "getErrorCode", "logging_1", "constants_1", "error_1", "LEGAL_KEY_REGEX", "LEGAL_NON_BINARY_VALUE_REGEX", "isLegalKey", "key", "isLegalNonBinaryValue", "value", "isBinaryKey", "isCustomMetadata", "normalizeKey", "validate", "Metadata", "options", "existingValue", "result", "values", "v", "newMetadata", "newInternalRepr", "clonedValue", "other", "mergedValue", "bufToString", "headers", "error", "message", "exports", "val", "metadata_1", "isCurrentOauth2Client", "client", "CallCredentials", "metadataGenerator", "SingleCallCredentials", "googleCredentials", "options", "callback", "getHeaders", "resolve", "reject", "err", "headers", "metadata", "key", "EmptyCallCredentials", "exports", "ComposedCallCredentials", "creds", "base", "generated", "cred", "gen", "other", "value", "index", "fs", "exports", "DEFAULT_ROOTS_FILE_PATH", "defaultRootsData", "getDefaultRootsData", "tls_1", "call_credentials_1", "tls_helpers_1", "verifyIsBufferOrNull", "obj", "friendlyName", "ChannelCredentials", "callCredentials", "rootCerts", "privateKey", "certChain", "verifyOptions", "secureContext", "_a", "SecureChannelCredentialsImpl", "InsecureChannelCredentialsImpl", "exports", "other", "combinedCallCredentials", "ComposedChannelCredentialsImpl", "channelCredentials", "callCreds", "logging_1", "constants_1", "createChildChannelControlHelper", "parent", "overrides", "_b", "_a", "_d", "_c", "_f", "_e", "_h", "_g", "_k", "_j", "exports", "registeredLoadBalancerTypes", "defaultLoadBalancerType", "registerLoadBalancerType", "typeName", "loadBalancerType", "loadBalancingConfigType", "registerDefaultLoadBalancerType", "createLoadBalancer", "config", "channelControlHelper", "options", "isLoadBalancerNameRegistered", "parseLoadBalancingConfig", "rawConfig", "keys", "e", "getDefaultConfig", "selectLbConfigFromList", "configs", "fallbackTodefault", "os", "constants_1", "DURATION_REGEX", "CLIENT_LANGUAGE_STRING", "validateName", "obj", "validateRetryPolicy", "value", "validateHedgingPolicy", "result", "validateMethodConfig", "name", "timeoutParts", "_a", "validateRetryThrottling", "exports", "validateLoadBalancingConfig", "keys", "validateServiceConfig", "config", "methodConfig", "seenMethodNames", "seenName", "validateCanaryConfig", "lang", "allowedFields", "field", "validateAndSelectCanaryConfig", "percentage", "validatedConfig", "hostnameMatched", "hostname", "languageMatched", "language", "extractAndSelectServiceConfig", "txtRecord", "record", "recordString", "recordJson", "ConnectivityState", "exports", "URI_REGEX", "parseUri", "uriString", "parsedUri", "exports", "NUMBER_REGEX", "splitHostPort", "path", "hostEnd", "host", "portString", "splitPath", "combineHostPort", "hostPort", "uriToString", "uri", "result", "uri_parser_1", "registeredResolvers", "defaultScheme", "registerResolver", "scheme", "resolverClass", "exports", "registerDefaultScheme", "createResolver", "target", "listener", "options", "getDefaultAuthority", "mapUriDefaultScheme", "metadata_1", "constants_1", "PickResultType", "exports", "UnavailablePicker", "status", "pickArgs", "QueuePicker", "loadBalancer", "childPicker", "INITIAL_BACKOFF_MS", "BACKOFF_MULTIPLIER", "MAX_BACKOFF_MS", "BACKOFF_JITTER", "uniformRandom", "min", "max", "BackoffTimeout", "callback", "options", "delay", "_b", "_a", "nextBackoff", "jitterMagnitude", "now", "newEndTime", "exports", "load_balancer_1", "connectivity_state_1", "TYPE_NAME", "ChildLoadBalancerHandler", "channelControlHelper", "options", "parent", "subchannelAddress", "subchannelArgs", "connectivityState", "picker", "_a", "latestChild", "newChild", "child", "oldConfig", "newConfig", "endpointList", "lbConfig", "attributes", "childToUpdate", "newHelper", "exports", "load_balancer_1", "service_config_1", "connectivity_state_1", "resolver_1", "picker_1", "backoff_timeout_1", "constants_1", "metadata_1", "logging", "constants_2", "uri_parser_1", "load_balancer_child_handler_1", "TRACER_NAME", "trace", "text", "NAME_MATCH_LEVEL_ORDER", "hasMatchingName", "service", "method", "methodConfig", "matchLevel", "name", "findMatchingConfig", "methodConfigs", "config", "getDefaultConfigSelector", "serviceConfig", "methodName", "metadata", "splitName", "x", "_a", "_b", "matchingConfig", "ResolvingLoadBalancer", "target", "channelControlHelper", "channelOptions", "onSuccessfulResolution", "onFailedResolution", "newState", "picker", "endpointList", "serviceConfigError", "configSelector", "attributes", "workingServiceConfig", "workingConfigList", "loadBalancingConfig", "finalServiceConfig", "error", "backoffOptions", "connectivityState", "lbConfig", "exports", "exports", "channelOptionsEqual", "options1", "options2", "keys1", "keys2", "i", "net_1", "isTcpSubchannelAddress", "address", "exports", "subchannelAddressEqual", "address1", "address2", "subchannelAddressToString", "DEFAULT_PORT", "stringToSubchannelAddress", "addressString", "port", "endpointEqual", "endpoint1", "endpoint2", "i", "endpointToString", "endpoint", "endpointHasAddress", "expectedAddress", "endpointEqualUnordered", "matchFound", "EndpointMap", "entry", "endpoints", "removedValues", "foundEntry", "mapEntry", "require_cjs", "__commonJSMin", "exports", "Object", "defineProperty", "value", "TreeNode", "constructor", "key", "color", "this", "_left", "undefined", "_right", "_parent", "_key", "_value", "_color", "_pre", "preNode", "isRootOrHeader", "pre", "_next", "nextNode", "_rotateLeft", "PP", "V", "R", "_rotateRight", "F", "K", "TreeNodeEnableIndex", "super", "arguments", "_subTreeSize", "parent", "_recount", "ContainerIterator", "iteratorType", "equals", "iter", "_node", "Base", "_length", "length", "size", "empty", "Container", "throwIteratorAccessError", "RangeError", "TreeContainer", "cmp", "x", "y", "enableIndex", "_root", "_cmp", "_TreeNodeClass", "_header", "_lowerBound", "curNode", "resNode", "cmpResult", "_upperBound", "_reverseLowerBound", "_reverseUpperBound", "_eraseNodeSelfBalance", "parentNode", "brother", "_eraseNode", "clear", "swapNode", "_inOrderTraversal", "param", "pos", "callback", "nodeList", "index", "stack", "push", "pop", "_insertNodeSelfBalance", "grandParent", "uncle", "GP", "_set", "hint", "minNode", "compareToMin", "maxNode", "compareToMax", "iterNode", "iterCmpRes", "preCmpRes", "_getTreeNodeByKey", "updateKeyByIterator", "node", "nextKey", "preKey", "eraseElementByPos", "eraseElementByKey", "eraseElementByIterator", "hasNoRight", "next", "getHeight", "traversal", "Math", "max", "TreeIterator", "header", "root", "isAccessible", "OrderedMapIterator", "container", "pointer", "self", "Proxy", "get", "target", "prop", "set", "_", "newValue", "TypeError", "copy", "OrderedMap", "forEach", "el", "setElement", "begin", "end", "rBegin", "rEnd", "front", "back", "lowerBound", "upperBound", "reverseLowerBound", "reverseUpperBound", "map", "getElementByPos", "find", "getElementByKey", "union", "other", "Symbol", "iterator", "i", "registeredAdminServices", "registerAdminService", "getServiceDefinition", "getHandlers", "exports", "addAdminServicesToServer", "server", "events_1", "stream_1", "constants_1", "callErrorFromStatus", "status", "callerStack", "message", "stack", "exports", "ClientUnaryCallImpl", "_a", "_b", "ClientReadableStreamImpl", "deserialize", "_size", "ClientWritableStreamImpl", "serialize", "chunk", "encoding", "cb", "context", "flags", "ClientDuplexStreamImpl", "isInterceptingListener", "listener", "exports", "InterceptingListenerImpl", "nextListener", "metadata", "message", "msg", "status", "processedStatus", "metadata_1", "call_interface_1", "constants_1", "error_1", "InterceptorConfigurationError", "message", "exports", "ListenerBuilder", "onReceiveMetadata", "onReceiveMessage", "onReceiveStatus", "RequesterBuilder", "start", "sendMessage", "halfClose", "cancel", "defaultListener", "metadata", "next", "status", "defaultRequester", "listener", "InterceptingCall", "nextCall", "requester", "_a", "_b", "_c", "_d", "details", "interceptingListener", "fullInterceptingListener", "_f", "_e", "md", "finalInterceptingListener", "fullListener", "context", "finalMessage", "getCall", "channel", "path", "options", "deadline", "host", "parent", "propagateFlags", "credentials", "call", "BaseInterceptingCall", "methodDefinition", "serialized", "e", "readError", "deserialized", "BaseUnaryInterceptingCall", "receivedMessage", "wrapperListener", "BaseStreamingInterceptingCall", "getBottomInterceptingCall", "getInterceptingCall", "interceptorArgs", "interceptors", "provider", "interceptor", "interceptorOptions", "nextInterceptor", "currentOptions", "finalOptions", "call_1", "channel_1", "connectivity_state_1", "constants_1", "metadata_1", "client_interceptors_1", "CHANNEL_SYMBOL", "INTERCEPTOR_SYMBOL", "INTERCEPTOR_PROVIDER_SYMBOL", "CALL_INVOCATION_TRANSFORMER_SYMBOL", "isFunction", "arg", "getErrorStackString", "error", "_a", "Client", "address", "credentials", "options", "_b", "channelFactoryOverride", "deadline", "callback", "checkState", "err", "newState", "arg1", "arg2", "arg3", "method", "serialize", "deserialize", "argument", "metadata", "checkedArguments", "methodDefinition", "callProperties", "emitter", "interceptorArgs", "call", "responseMessage", "receivedStatus", "callerStackError", "message", "status", "callerStack", "stream", "exports", "client_1", "requesterFuncs", "isPrototypePolluted", "key", "makeClientConstructor", "methods", "serviceName", "classOptions", "ServiceClientImpl", "name", "attrs", "methodType", "serialize", "deserialize", "methodFunc", "partial", "exports", "fn", "path", "args", "isProtobufTypeDefinition", "obj", "loadPackageDefinition", "packageDef", "result", "serviceFqn", "service", "nameComponents", "comp", "current", "packageName", "require_lodash", "__commonJSMin", "exports", "module", "INFINITY", "symbolTag", "reAsciiWord", "reLatin", "rsAstralRange", "rsComboMarksRange", "rsComboSymbolsRange", "rsDingbatRange", "rsLowerRange", "rsMathOpRange", "rsNonCharRange", "rsPunctuationRange", "rsSpaceRange", "rsUpperRange", "rsVarRange", "rsBreakRange", "rsApos", "rsAstral", "rsBreak", "rsCombo", "rsDigits", "rsDingbat", "rsLower", "rsMisc", "rsFitz", "rsModifier", "rsNonAstral", "rsRegional", "rsSurrPair", "rsUpper", "rsZWJ", "rsLowerMisc", "rsUpperMisc", "rsOptLowerContr", "rsOptUpperContr", "reOptMod", "rsOptVar", "rsOptJoin", "rsSeq", "rsEmoji", "rsSymbol", "reApos", "reComboMark", "reUnicode", "reUnicodeWord", "reHasUnicode", "reHasUnicodeWord", "deburredLetters", "freeGlobal", "freeSelf", "root", "arrayReduce", "array", "iteratee", "accumulator", "initAccum", "index", "length", "asciiToArray", "string", "asciiWords", "basePropertyOf", "object", "key", "deburrLetter", "hasUnicode", "hasUnicodeWord", "stringToArray", "unicodeToArray", "unicodeWords", "objectProto", "objectToString", "Symbol", "symbolProto", "symbolToString", "baseSlice", "start", "end", "result", "baseToString", "value", "isSymbol", "castSlice", "createCaseFirst", "methodName", "toString", "strSymbols", "chr", "trailing", "createCompounder", "callback", "words", "deburr", "isObjectLike", "camelCase", "word", "capitalize", "upperFirst", "pattern", "guard", "require_aspromise", "__commonJSMin", "exports", "module", "asPromise", "fn", "ctx", "params", "offset", "index", "pending", "resolve", "reject", "err", "require_base64", "__commonJSMin", "exports", "base64", "string", "p", "n", "b64", "s64", "i", "buffer", "start", "end", "parts", "chunk", "j", "t", "b", "invalidEncoding", "offset", "c", "require_eventemitter", "__commonJSMin", "exports", "module", "EventEmitter", "evt", "fn", "ctx", "listeners", "i", "args", "require_float", "__commonJSMin", "exports", "module", "factory", "f32", "f8b", "le", "writeFloat_f32_cpy", "val", "buf", "pos", "writeFloat_f32_rev", "readFloat_f32_cpy", "readFloat_f32_rev", "writeFloat_ieee754", "writeUint", "sign", "exponent", "mantissa", "writeUintLE", "writeUintBE", "readFloat_ieee754", "readUint", "uint", "readUintLE", "readUintBE", "f64", "writeDouble_f64_cpy", "writeDouble_f64_rev", "readDouble_f64_cpy", "readDouble_f64_rev", "writeDouble_ieee754", "off0", "off1", "readDouble_ieee754", "lo", "hi", "require_inquire", "__commonJSMin", "e", "require_utf8", "__commonJSMin", "exports", "utf8", "string", "len", "c", "i", "buffer", "start", "end", "parts", "chunk", "t", "offset", "c1", "c2", "require_pool", "__commonJSMin", "exports", "module", "pool", "alloc", "slice", "size", "SIZE", "MAX", "slab", "offset", "buf", "require_longbits", "__commonJSMin", "exports", "module", "LongBits", "util", "lo", "hi", "zero", "zeroHash", "value", "sign", "unsigned", "charCodeAt", "hash", "mask", "part0", "part1", "part2", "require_minimal", "__commonJSMin", "exports", "util", "value", "obj", "prop", "Buffer", "sizeOrArray", "hash", "unsigned", "bits", "merge", "dst", "src", "ifNotSet", "keys", "i", "str", "newError", "name", "CustomError", "message", "properties", "fieldNames", "fieldMap", "encoding", "size", "require_writer", "__commonJSMin", "exports", "module", "Writer", "util", "BufferWriter", "LongBits", "base64", "utf8", "Op", "fn", "len", "val", "noop", "State", "writer", "create", "size", "writeByte", "buf", "pos", "writeVarint32", "VarintOp", "value", "writeVarint64", "bits", "writeFixed32", "writeBytes", "i", "head", "tail", "BufferWriter_", "require_writer_buffer", "__commonJSMin", "exports", "module", "BufferWriter", "Writer", "util", "val", "buf", "pos", "i", "value", "len", "writeStringBuffer", "require_reader", "__commonJSMin", "exports", "module", "Reader", "util", "BufferReader", "LongBits", "utf8", "indexOutOfRange", "reader", "writeLength", "buffer", "create_array", "create", "value", "readLongVarint", "bits", "i", "readFixed32_end", "buf", "end", "readFixed64", "length", "start", "nativeBuffer", "bytes", "wireType", "BufferReader_", "fn", "require_reader_buffer", "__commonJSMin", "exports", "module", "BufferReader", "Reader", "util", "buffer", "len", "require_service", "__commonJSMin", "exports", "module", "Service", "util", "rpcImpl", "requestDelimited", "responseDelimited", "rpcCall", "method", "requestCtor", "responseCtor", "request", "callback", "self", "err", "response", "endedByRPC", "require_rpc", "__commonJSMin", "exports", "rpc", "require_roots", "__commonJSMin", "exports", "module", "require_index_minimal", "__commonJSMin", "exports", "protobuf", "configure", "require_codegen", "__commonJSMin", "exports", "module", "codegen", "functionParams", "functionName", "body", "Codegen", "formatStringOrScope", "source", "toString", "scopeKeys", "scopeParams", "scopeValues", "scopeOffset", "formatParams", "formatOffset", "$0", "$1", "value", "functionNameOverride", "require_fetch", "__commonJSMin", "exports", "module", "fetch", "asPromise", "inquire", "fs", "filename", "options", "callback", "err", "contents", "xhr", "buffer", "i", "require_path", "__commonJSMin", "exports", "path", "isAbsolute", "normalize", "parts", "absolute", "prefix", "i", "originPath", "includePath", "alreadyNormalized", "require_types", "__commonJSMin", "exports", "types", "util", "s", "bake", "values", "offset", "i", "o", "require_field", "__commonJSMin", "exports", "module", "Field", "ReflectionObject", "Enum", "types", "util", "Type", "ruleRe", "name", "json", "id", "type", "rule", "extend", "options", "comment", "value", "ifNotSet", "toJSONOptions", "keepComments", "buf", "fieldId", "fieldType", "fieldRule", "defaultValue", "prototype", "fieldName", "Type_", "require_oneof", "__commonJSMin", "exports", "module", "OneOf", "ReflectionObject", "Field", "util", "name", "fieldNames", "options", "comment", "json", "toJSONOptions", "keepComments", "addFieldsToParent", "oneof", "i", "field", "index", "parent", "self", "prototype", "oneofName", "require_namespace", "__commonJSMin", "exports", "module", "Namespace", "ReflectionObject", "Field", "util", "OneOf", "Type", "Service", "Enum", "name", "json", "arrayToJSON", "array", "toJSONOptions", "obj", "reserved", "id", "options", "clearCache", "namespace", "nestedJson", "ns", "names", "i", "nested", "object", "prev", "path", "ptr", "part", "filterTypes", "parentAlreadyChecked", "found", "Type_", "Service_", "Enum_", "require_mapfield", "__commonJSMin", "exports", "module", "MapField", "Field", "types", "util", "name", "id", "keyType", "type", "options", "comment", "json", "toJSONOptions", "keepComments", "fieldId", "fieldKeyType", "fieldValueType", "prototype", "fieldName", "require_method", "__commonJSMin", "exports", "module", "Method", "ReflectionObject", "util", "name", "type", "requestType", "responseType", "requestStream", "responseStream", "options", "comment", "parsedOptions", "json", "toJSONOptions", "keepComments", "require_service", "__commonJSMin", "exports", "module", "Service", "Namespace", "Method", "util", "rpc", "name", "options", "json", "service", "names", "i", "toJSONOptions", "inherited", "keepComments", "clearCache", "methods", "object", "rpcImpl", "requestDelimited", "responseDelimited", "rpcService", "method", "methodName", "require_message", "__commonJSMin", "exports", "module", "Message", "util", "properties", "keys", "i", "message", "writer", "reader", "object", "options", "require_decoder", "__commonJSMin", "exports", "module", "decoder", "Enum", "types", "util", "missing", "field", "mtype", "gen", "i", "type", "ref", "rfield", "require_verifier", "__commonJSMin", "exports", "module", "verifier", "Enum", "util", "invalid", "field", "expected", "genVerifyValue", "gen", "fieldIndex", "ref", "keys", "j", "genVerifyKey", "mtype", "oneofs", "seenFirstField", "i", "oneofProp", "require_converter", "__commonJSMin", "exports", "converter", "Enum", "util", "genValuePartial_fromObject", "gen", "field", "fieldIndex", "prop", "defaultAlreadyEmitted", "values", "keys", "i", "isUnsigned", "mtype", "fields", "genValuePartial_toObject", "repeatedFields", "mapFields", "normalFields", "arrayDefault", "hasKs2", "index", "require_wrappers", "__commonJSMin", "exports", "wrappers", "Message", "object", "name", "type", "type_url", "message", "options", "googleApi", "prefix", "messageName", "require_type", "__commonJSMin", "exports", "module", "Type", "Namespace", "Enum", "OneOf", "Field", "MapField", "Service", "Message", "Reader", "Writer", "util", "encoder", "decoder", "verifier", "converter", "wrappers", "name", "options", "names", "i", "field", "id", "ctor", "prototype", "ctorProperties", "mtype", "gen", "clearCache", "type", "json", "nested", "toJSONOptions", "inherited", "keepComments", "obj", "fields", "oneofs", "object", "properties", "fullName", "types", "wrapper", "originalThis", "message", "writer", "reader", "length", "typeName", "target", "require_root", "__commonJSMin", "exports", "module", "Root", "Namespace", "Field", "Enum", "OneOf", "util", "Type", "parse", "common", "options", "json", "root", "SYNC", "load", "filename", "callback", "self", "sync", "finish", "err", "cb", "getBundledFileName", "idx", "altname", "process", "source", "parsed", "resolved", "i", "fetch", "queued", "weak", "field", "exposeRe", "tryHandleExtension", "extendedType", "sisterField", "object", "j", "index", "Type_", "parse_", "common_", "require_util", "__commonJSMin", "exports", "module", "util", "roots", "Type", "Enum", "object", "keys", "array", "index", "key", "val", "safePropBackslashRe", "safePropQuoteRe", "name", "prop", "str", "camelCaseRe", "$0", "$1", "a", "b", "ctor", "typeName", "type", "decorateEnumIndex", "enm", "dst", "path", "value", "setProp", "part", "prevValue", "require_object", "__commonJSMin", "exports", "module", "ReflectionObject", "util", "Root", "name", "options", "ptr", "path", "parent", "root", "value", "ifNotSet", "propName", "parsedOptions", "opt", "newValue", "newOpt", "keys", "i", "className", "fullName", "Root_", "require_enum", "__commonJSMin", "exports", "module", "Enum", "ReflectionObject", "Namespace", "util", "name", "values", "options", "comment", "comments", "valuesOptions", "keys", "i", "json", "enm", "toJSONOptions", "keepComments", "id", "val", "require_encoder", "__commonJSMin", "exports", "module", "encoder", "Enum", "types", "util", "genTypePartial", "gen", "field", "fieldIndex", "ref", "mtype", "i", "fields", "index", "type", "wireType", "require_index_light", "__commonJSMin", "exports", "module", "protobuf", "load", "filename", "root", "callback", "loadSync", "require_tokenize", "__commonJSMin", "exports", "module", "tokenize", "delimRe", "stringDoubleRe", "stringSingleRe", "setCommentRe", "setCommentAltRe", "setCommentSplitRe", "whitespaceRe", "unescapeRe", "unescapeMap", "unescape", "str", "$0", "$1", "source", "alternateCommentMode", "offset", "length", "line", "lastCommentLine", "comments", "stack", "stringDelim", "illegal", "subject", "readString", "re", "match", "push", "charAt", "pos", "setComment", "start", "end", "isLeading", "comment", "lookback", "commentOffset", "c", "lines", "i", "isDoubleSlashCommentLine", "startOffset", "endOffset", "findEndOfLine", "lineText", "isComment", "cursor", "next", "repeat", "prev", "curr", "isDoc", "isLeadingComment", "delim", "token", "peek", "skip", "expected", "optional", "actual", "equals", "cmnt", "trailingLine", "ret", "require_parse", "__commonJSMin", "exports", "module", "parse", "tokenize", "Root", "Type", "Field", "MapField", "OneOf", "Enum", "Service", "Method", "types", "util", "base10Re", "base10NegRe", "base16Re", "base16NegRe", "base8Re", "base8NegRe", "numberRe", "nameRe", "typeRefRe", "fqTypeRefRe", "source", "root", "options", "preferTrailingComment", "tn", "next", "push", "peek", "skip", "cmnt", "head", "pkg", "imports", "weakImports", "syntax", "isProto3", "ptr", "applyCase", "name", "illegal", "token", "insideTryCatch", "filename", "readString", "values", "readValue", "acceptTypeRef", "parseNumber", "readRanges", "target", "acceptStrings", "start", "parseId", "dummy", "value", "ifBlock", "parseOption", "parseInlineOptions", "sign", "acceptNegative", "parsePackage", "parseImport", "whichImports", "parseSyntax", "parseCommon", "parent", "parseType", "parseEnum", "parseService", "parseExtension", "obj", "fnIf", "fnElse", "trailingLine", "type", "parseMapField", "parseField", "parseOneOf", "rule", "extend", "parseGroup", "field", "oneof", "fieldName", "id", "keyType", "valueType", "enm", "parseEnumValue", "isCustom", "option", "propName", "optionValue", "parseOptionValue", "setParsedOption", "objectResult", "lastValue", "setOption", "prevValue", "simpleValue", "service", "parseMethod", "commentText", "requestType", "requestStream", "responseType", "responseStream", "method", "reference", "require_common", "__commonJSMin", "exports", "module", "common", "commonRe", "name", "json", "timeType", "file", "require_src", "__commonJSMin", "exports", "module", "protobuf", "require_protobufjs", "__commonJSMin", "exports", "module", "require_descriptor", "__commonJSMin", "exports", "module", "require_descriptor", "__commonJSMin", "exports", "module", "$protobuf", "Namespace", "Root", "Enum", "Type", "Field", "MapField", "OneOf", "Service", "Method", "descriptor", "root", "fileDescriptor", "filePackage", "j", "i", "opts", "fromDescriptorOptions", "ks", "syntax", "set", "Root_toDescriptorRecursive", "ns", "files", "file", "nested", "toDescriptorOptions", "unnamedMessageIndex", "type", "field", "fieldDescriptor", "keyType", "toDescriptorType", "valueType", "valueTypeName", "shortname", "numberRe", "fieldType", "fromDescriptorType", "fieldRule", "extendee", "defaultValue", "match", "packableDescriptorType", "unnamedEnumIndex", "values", "name", "value", "unnamedOneofIndex", "unnamedServiceIndex", "service", "methods", "unnamedMethodIndex", "resolvedType", "options", "out", "key", "val", "underScore", "from", "to", "fromPath", "toPath", "k", "other", "str", "$0", "$1", "require_api", "__commonJSMin", "exports", "module", "require_source_context", "__commonJSMin", "exports", "module", "require_type", "__commonJSMin", "exports", "module", "fs", "path", "Protobuf", "addIncludePathResolver", "root", "includePaths", "originalResolvePath", "origin", "target", "directory", "fullPath", "loadProtosWithOptions", "filename", "options", "loadedRoot", "exports", "loadProtosWithOptionsSync", "addCommonProtos", "apiDescriptor", "descriptorDescriptor", "sourceContextDescriptor", "typeDescriptor", "require_umd", "__commonJSMin", "exports", "module", "Long", "wasm", "low", "high", "unsigned", "isLong", "obj", "ctz32", "value", "c", "INT_CACHE", "UINT_CACHE", "fromInt", "cachedObj", "cache", "fromBits", "fromNumber", "UZERO", "ZERO", "TWO_PWR_64_DBL", "MAX_UNSIGNED_VALUE", "TWO_PWR_63_DBL", "MIN_VALUE", "MAX_VALUE", "TWO_PWR_32_DBL", "lowBits", "highBits", "pow_dbl", "fromString", "str", "radix", "p", "radixToPower", "result", "i", "size", "power", "fromValue", "val", "TWO_PWR_16_DBL", "TWO_PWR_24_DBL", "TWO_PWR_24", "ONE", "UONE", "NEG_ONE", "LongPrototype", "radixLong", "div", "rem1", "rem", "remDiv", "intval", "digits", "bit", "other", "thisNeg", "otherNeg", "addend", "a48", "a32", "a16", "a00", "b48", "b32", "b16", "b00", "c48", "c32", "c16", "c00", "subtrahend", "multiplier", "divisor", "approx", "res", "halfThis", "log2", "delta", "approxRes", "approxRem", "numBits", "b", "le", "hi", "lo", "bytes", "_default", "camelCase", "Protobuf", "descriptor", "util_1", "Long", "exports", "isAnyExtension", "obj", "IdempotencyLevel", "descriptorOptions", "joinName", "baseName", "name", "isHandledReflectionObject", "isNamespaceBase", "getAllHandledReflectionObjects", "parentName", "objName", "accumulator", "currentValue", "createDeserializer", "cls", "options", "argBuf", "createSerializer", "arg", "message", "mapMethodOptions", "item", "key", "value", "createMethodDefinition", "method", "serviceName", "fileDescriptors", "requestType", "responseType", "createMessageDefinition", "createServiceDefinition", "service", "def", "messageDescriptor", "createEnumDefinition", "enumType", "enumDescriptor", "createDefinition", "createPackageDefinition", "root", "bufferList", "createPackageDefinitionFromDescriptorSet", "decodedDescriptorSet", "load", "filename", "loadedRoot", "loadSync", "fromJSON", "json", "loadFileDescriptorSetFromBuffer", "descriptorSet", "loadFileDescriptorSetFromObject", "net_1", "ordered_map_1", "connectivity_state_1", "constants_1", "subchannel_address_1", "admin_1", "make_client_1", "channelRefToMessage", "ref", "subchannelRefToMessage", "serverRefToMessage", "socketRefToMessage", "TARGET_RETAINED_TRACES", "DEFAULT_MAX_RESULTS", "ChannelzTraceStub", "dateToProtoTimestamp", "exports", "ChannelzTrace", "severity", "description", "child", "timestamp", "event", "ChannelzChildrenTracker", "tracker", "trackedChild", "ChannelzChildrenTrackerStub", "ChannelzCallTracker", "ChannelzCallTrackerStub", "entityMaps", "generateRegisterFn", "kind", "nextId", "getNextId", "entityMap", "name", "getInfo", "channelzEnabled", "id", "unregisterChannelzRef", "parseIPv6Section", "addressSection", "numberValue", "parseIPv6Chunk", "addressChunk", "bytePairs", "section", "ipAddressStringToBuffer", "ipAddress", "segment", "leftSection", "rightSection", "doubleColonIndex", "leftBuffer", "rightBuffer", "middleBuffer", "connectivityStateToMessage", "state", "date", "millisSinceEpoch", "getChannelMessage", "channelEntry", "resolvedInfo", "channelRef", "subchannelRef", "el", "GetChannel", "call", "callback", "channelId", "GetTopChannels", "maxResults", "resultList", "startId", "channelEntries", "i", "getServerMessage", "serverEntry", "listenSocket", "GetServer", "serverId", "GetServers", "serverEntries", "GetSubchannel", "subchannelId", "subchannelEntry", "subchannelMessage", "subchannelAddressToAddressMessage", "subchannelAddress", "_a", "GetSocket", "socketId", "socketEntry", "securityMessage", "_b", "_c", "_d", "socketMessage", "_e", "GetServerSockets", "allSockets", "getChannelzHandlers", "loadedChannelzDefinition", "getChannelzServiceDefinition", "loaderLoadSync", "loadedProto", "setup", "connectivity_state_1", "backoff_timeout_1", "logging", "constants_1", "uri_parser_1", "subchannel_address_1", "channelz_1", "TRACER_NAME", "KEEPALIVE_MAX_TIME_MS", "Subchannel", "channelTarget", "subchannelAddress", "options", "credentials", "connector", "backoffOptions", "_a", "text", "adjustedKeepaliveTime", "transport", "tooManyPings", "error", "oldStates", "newState", "errorMessage", "previousState", "_b", "listener", "metadata", "host", "method", "statsTracker", "status", "other", "newKeepaliveTime", "exports", "resolver_1", "dns", "util", "service_config_1", "constants_1", "metadata_1", "logging", "constants_2", "uri_parser_1", "net_1", "backoff_timeout_1", "TRACER_NAME", "trace", "text", "exports", "DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS", "resolveTxtPromise", "dnsLookupPromise", "DnsResolver", "target", "listener", "channelOptions", "hostPort", "_a", "_b", "backoffOptions", "_c", "hostname", "addressList", "subchannelAddresses", "addr", "address", "allAddressesString", "err", "txtRecord", "setup", "logging_1", "constants_1", "resolver_1", "http", "tls", "logging", "subchannel_address_1", "uri_parser_1", "url_1", "resolver_dns_1", "TRACER_NAME", "trace", "text", "getProxyInfo", "proxyEnv", "envVar", "proxyUrl", "userCred", "hostname", "port", "result", "getNoProxyHostList", "noProxyStr", "mapProxyName", "target", "options", "noProxyResult", "_a", "proxyInfo", "hostPort", "serverHost", "host", "extraOptions", "exports", "getProxiedConnection", "address", "channelOptions", "connectionOptions", "realTarget", "parsedTarget", "splitHostPost", "headers", "proxyAddressString", "resolve", "reject", "request", "res", "socket", "head", "targetPath", "remoteHost", "cts", "error", "err", "ReadState", "StreamDecoder", "maxReadMessageLength", "data", "readHead", "toRead", "result", "message", "framedMessageBuffers", "framedMessage", "exports", "http2", "os", "constants_1", "metadata_1", "stream_decoder_1", "logging", "constants_2", "TRACER_NAME", "getSystemErrorName", "errno", "name", "num", "mapHttpStatusCode", "code", "details", "mappedStatusCode", "Http2SubchannelCall", "http2Stream", "callEventTracker", "listener", "transport", "callId", "maxReceiveMessageLength", "_a", "headers", "flags", "headersString", "header", "metadata", "error", "data", "messages", "e", "message", "mappedStatus", "err", "text", "status", "messageBytes", "metadataMap", "receivedStatus", "nextMessage", "context", "cb", "exports", "nextCallNumber", "getNextCallNumber", "exports", "http2", "tls_1", "channelz_1", "constants_1", "http_proxy_1", "logging", "resolver_1", "subchannel_address_1", "uri_parser_1", "net", "subchannel_call_1", "call_number_1", "TRACER_NAME", "FLOW_CONTROL_TRACER_NAME", "clientVersion", "HTTP2_HEADER_AUTHORITY", "HTTP2_HEADER_CONTENT_TYPE", "HTTP2_HEADER_METHOD", "HTTP2_HEADER_PATH", "HTTP2_HEADER_TE", "HTTP2_HEADER_USER_AGENT", "KEEPALIVE_TIMEOUT_MS", "tooManyPingsData", "Http2Transport", "session", "subchannelAddress", "options", "remoteName", "e", "errorCode", "lastStreamID", "opaqueData", "tooManyPings", "error", "settings", "sessionSocket", "remoteAddress", "localAddress", "tlsInfo", "tlsSocket", "cipherInfo", "certificate", "peerCertificate", "_a", "_b", "_c", "text", "listener", "call", "pingSendError", "err", "duration", "payload", "metadata", "host", "method", "subchannelCallStatsTracker", "headers", "http2Stream", "eventTracker", "status", "success", "Http2SubchannelConnector", "channelTarget", "address", "credentials", "proxyConnectionResult", "resolve", "reject", "targetAuthority", "connectionOptions", "addressScheme", "sslTargetNameOverride", "originalCheckServerIdentity", "cert", "authorityHostname", "_d", "authority", "option", "errorMessage", "targetPath", "hostPort", "result", "exports", "channel_options_1", "subchannel_1", "subchannel_address_1", "uri_parser_1", "transport_1", "REF_CHECK_INTERVAL", "SubchannelPool", "allSubchannelsUnrefed", "channelTarget", "refedSubchannels", "value", "_b", "_a", "channelTargetUri", "subchannelTarget", "channelArguments", "channelCredentials", "subchannelObjArray", "subchannelObj", "subchannel", "exports", "globalSubchannelPool", "getSubchannelPool", "global", "FilterStack", "filters", "metadata", "result", "message", "status", "exports", "FilterStackFactory", "factories", "filterFactories", "factory", "CompressionAlgorithms", "exports", "BaseFilter", "metadata", "message", "status", "exports", "zlib", "compression_algorithms_1", "constants_1", "filter_1", "logging", "isCompressionAlgorithmKey", "key", "CompressionHandler", "message", "compress", "messageBuffer", "output", "data", "compressed", "IdentityHandler", "DeflateHandler", "maxRecvMessageLength", "resolve", "reject", "err", "totalLength", "messageParts", "decompresser", "chunk", "GzipHandler", "UnknownHandler", "compressionName", "getCompressionHandler", "maxReceiveMessageSize", "CompressionFilter", "channelOptions", "sharedFilterConfig", "compressionAlgorithmKey", "_a", "_b", "clientSelectedEncoding", "serverSupportedEncodings", "_c", "metadata", "headers", "receiveEncoding", "encoding", "serverSupportedEncodingsHeader", "resolvedMessage", "exports", "CompressionFilterFactory", "channel", "options", "minDeadline", "deadlineList", "minValue", "deadline", "deadlineMsecs", "exports", "units", "getDeadlineTimeoutString", "now", "timeoutMs", "unit", "factor", "amount", "MAX_TIMEOUT_TIME", "getRelativeTimeout", "deadlineMs", "timeout", "deadlineToString", "dateDeadline", "formatDateDifference", "startDate", "endDate", "constants_1", "INAPPROPRIATE_CONTROL_PLANE_CODES", "restrictControlPlaneStatusCode", "code", "details", "exports", "connectivity_state_1", "constants_1", "deadline_1", "metadata_1", "picker_1", "uri_parser_1", "logging", "control_plane_status_1", "http2", "TRACER_NAME", "LoadBalancingCall", "channel", "callConfig", "methodName", "host", "credentials", "deadline", "callNumber", "splitPath", "serviceName", "hostname", "_b", "_a", "deadlineInfo", "text", "status", "progress", "finalStatus", "finalMetadata", "pickResult", "subchannelString", "credsMetadata", "metadata", "message", "error", "_c", "code", "details", "listener", "context", "exports", "constants_1", "deadline_1", "metadata_1", "logging", "control_plane_status_1", "TRACER_NAME", "ResolvingCall", "channel", "method", "options", "filterStackFactory", "credentials", "callNumber", "text", "timeout", "handleDeadline", "deadlineInfo", "deadlineEndTime", "status", "filteredStatus", "watcher", "_a", "context", "message", "child", "filteredMessage", "configResult", "config", "code", "details", "configDeadline", "filteredMetadata", "metadata", "filteredMesssage", "_b", "listener", "exports", "constants_1", "deadline_1", "metadata_1", "logging", "TRACER_NAME", "RetryThrottler", "maxTokens", "tokenRatio", "previousRetryThrottler", "exports", "MessageBufferTracker", "totalLimit", "limitPerCall", "size", "callId", "currentPerCall", "_a", "PREVIONS_RPC_ATTEMPTS_METADATA_KEY", "RetryingCall", "channel", "callConfig", "methodName", "host", "credentials", "deadline", "callNumber", "bufferTracker", "retryThrottler", "retryPolicy", "deadlineInfo", "latestCall", "text", "statusObject", "status", "details", "call", "messageIndex", "earliestNeededMessageIndex", "bufferEntry", "index", "i", "mostMessages", "callWithMostMessages", "childCall", "list", "code", "value", "nextBackoffMs", "maxBackoffSec", "pushback", "callback", "retryDelayMs", "_b", "count", "callIndex", "delayMs", "_c", "retried", "metadata", "mdValue", "hedgingPolicy", "hedgingDelayString", "hedgingDelaySec", "child", "previousAttempts", "initialMetadata", "receivedMetadata", "message", "listener", "childIndex", "error", "context", "writeObj", "underlyingCall", "halfCloseIndex", "newCredentials", "BaseSubchannelWrapper", "child", "childHealthy", "listener", "newKeepaliveTime", "healthy", "other", "exports", "channel_credentials_1", "resolving_load_balancer_1", "subchannel_pool_1", "picker_1", "constants_1", "filter_stack_1", "compression_filter_1", "resolver_1", "logging_1", "http_proxy_1", "uri_parser_1", "connectivity_state_1", "channelz_1", "load_balancing_call_1", "deadline_1", "resolving_call_1", "call_number_1", "control_plane_status_1", "retrying_call_1", "subchannel_interface_1", "MAX_TIMEOUT_TIME", "MIN_IDLE_TIMEOUT_MS", "DEFAULT_IDLE_TIMEOUT_MS", "RETRY_THROTTLER_MAP", "DEFAULT_RETRY_BUFFER_SIZE_BYTES", "DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES", "ChannelSubchannelWrapper", "childSubchannel", "channel", "subchannel", "previousState", "newState", "keepaliveTime", "InternalChannel", "target", "credentials", "options", "originalTargetUri", "defaultSchemeMapResult", "_b", "_a", "proxyMapResult", "_c", "_d", "_e", "_f", "_g", "channelControlHelper", "subchannelAddress", "subchannelArgs", "wrappedSubchannel", "connectivityState", "picker", "queueCopy", "call", "child", "serviceConfig", "configSelector", "localQueue", "status", "error", "_h", "text", "verbosityOverride", "watcherObject", "watcherIndex", "value", "watchersCopy", "newKeepaliveTime", "metadata", "extraPickInfo", "method", "timeoutMs", "timeSinceLastActivity", "callConfig", "host", "deadline", "callNumber", "parentCall", "propagateFlags", "finalOptions", "tryToConnect", "currentState", "callback", "timer", "deadlineDate", "now", "exports", "channel_credentials_1", "internal_channel_1", "ChannelImplementation", "target", "credentials", "options", "tryToConnect", "currentState", "deadline", "callback", "method", "host", "parentCall", "propagateFlags", "exports", "events_1", "stream_1", "constants_1", "metadata_1", "serverErrorToStatus", "error", "overrideTrailers", "status", "_a", "exports", "ServerUnaryCallImpl", "path", "call", "metadata", "request", "responseMetadata", "ServerReadableStreamImpl", "size", "ServerWritableStreamImpl", "err", "chunk", "encoding", "callback", "ServerDuplexStreamImpl", "tls_helpers_1", "ServerCredentials", "InsecureServerCredentials", "rootCerts", "keyCertPairs", "checkClientCertificate", "cert", "key", "i", "pair", "SecureServerCredentials", "_a", "exports", "other", "options", "thisCert", "otherCert", "thisKey", "otherKey", "metadata_1", "constants_1", "http2", "error_1", "zlib", "stream_decoder_1", "logging", "TRACER_NAME", "trace", "text", "ServerListenerBuilder", "onReceiveMetadata", "onReceiveMessage", "onReceiveHalfClose", "onCancel", "exports", "isInterceptingServerListener", "listener", "InterceptingServerListenerImpl", "nextListener", "metadata", "interceptedMetadata", "message", "msg", "ResponderBuilder", "start", "sendMetadata", "sendMessage", "sendStatus", "defaultServerListener", "next", "defaultResponder", "status", "ServerInterceptingCall", "nextCall", "responder", "_a", "_b", "_c", "_d", "interceptedListener", "fullInterceptedListener", "finalInterceptingListener", "callback", "interceptedMessage", "interceptedStatus", "GRPC_ACCEPT_ENCODING_HEADER", "GRPC_ENCODING_HEADER", "GRPC_MESSAGE_HEADER", "GRPC_STATUS_HEADER", "GRPC_TIMEOUT_HEADER", "DEADLINE_REGEX", "deadlineUnitsToMs", "defaultCompressionHeaders", "defaultResponseHeaders", "defaultResponseOptions", "BaseServerInterceptingCall", "stream", "headers", "callEventTracker", "handler", "options", "err", "data", "timeoutHeader", "encodingHeader", "match", "timeout", "now", "value", "messageBuffer", "byteLength", "output", "encoding", "messageContents", "decompresser", "resolve", "reject", "totalLength", "messageParts", "chunk", "queueEntry", "compressedMessageEncoding", "decompressedMessage", "nextQueueEntry", "rawMessages", "e", "messageBytes", "custom", "response", "error", "trailersToSend", "socket", "getServerInterceptingCall", "interceptors", "methodDefinition", "baseCall", "call", "interceptor", "http2", "util", "constants_1", "server_call_1", "server_credentials_1", "resolver_1", "logging", "subchannel_address_1", "uri_parser_1", "channelz_1", "server_interceptors_1", "UNLIMITED_CONNECTION_AGE_MS", "KEEPALIVE_MAX_TIME_MS", "KEEPALIVE_TIMEOUT_MS", "MAX_CONNECTION_IDLE_MS", "HTTP2_HEADER_PATH", "TRACER_NAME", "kMaxAge", "noop", "deprecate", "message", "target", "context", "getUnimplementedStatusResponse", "methodName", "getDefaultHandler", "handlerType", "unimplementedStatusResponse", "call", "callback", "Server", "options", "__runInitializers", "_instanceExtraInitializers", "_b", "_c", "_d", "_e", "_f", "_g", "session", "sessionInfo", "sessionSocket", "remoteAddress", "localAddress", "tlsInfo", "tlsSocket", "cipherInfo", "certificate", "peerCertificate", "text", "service", "implementation", "serviceKeys", "name", "attrs", "methodType", "implFn", "impl", "port", "creds", "boundAddress", "credentials", "http2Server", "secureServerOptions", "socket", "e", "address", "boundPortObject", "resolve", "reject", "onError", "err", "boundSubchannelAddress", "channelzRef", "addressList", "firstAddressResult", "restAddressResult", "restAddresses", "allResults", "result", "bindResult", "errorString", "resolverListener", "endpointList", "serviceConfig", "serviceConfigError", "endpoint", "error", "portNumber", "initialPortUri", "portUri", "deferredCallback", "portNum", "splitPort", "completionPromise", "finalUri", "server", "serverInfo", "closeCallback", "graceTimeMs", "allSessions", "serverEntry", "channelzInfo", "handler", "serialize", "deserialize", "type", "wrappedCallback", "pendingChecks", "maybeCallback", "serverKey", "serverString", "sessionString", "stream", "headers", "contentType", "path", "channelzSessionInfo", "trailersToSend", "callEventTracker", "status", "success", "handleUnary", "handleClientStreaming", "handleServerStreaming", "handleBidiStreaming", "serverAddress", "serverAddressString", "sessionHandler", "connectionAgeTimer", "connectionAgeGraceTimer", "keepaliveTimer", "sessionClosedByServer", "idleTimeoutObj", "jitterMagnitude", "jitter", "clearKeepaliveTimeout", "canSendPing", "sendPing", "maybeStartKeepalivePingTimer", "pingSendError", "duration", "payload", "clientAddress", "keepaliveTimeout", "ctx", "__esDecorate", "_a", "_start_decorators", "obj", "_metadata", "exports", "respond", "value", "trailer", "flags", "requestMetadata", "requestMessage", "metadata", "StatusBuilder", "code", "details", "metadata", "status", "exports", "msToDuration", "millis", "exports", "durationToMs", "duration", "isDuration", "value", "load_balancer_1", "connectivity_state_1", "picker_1", "logging", "constants_1", "subchannel_address_1", "net_1", "TRACER_NAME", "trace", "text", "TYPE_NAME", "CONNECTION_DELAY_INTERVAL_MS", "PickFirstLoadBalancingConfig", "shuffleAddressList", "obj", "exports", "PickFirstPicker", "subchannel", "pickArgs", "shuffled", "list", "result", "i", "j", "temp", "interleaveAddressFamilies", "addressList", "ipv6Addresses", "ipv4Addresses", "ipv6First", "address", "firstList", "secondList", "REPORT_HEALTH_STATUS_OPTION_NAME", "PickFirstLoadBalancer", "channelControlHelper", "options", "previousState", "newState", "keepaliveTime", "errorMessage", "child", "currentPick", "_a", "index", "startIndex", "subchannelState", "subchannelIndex", "_b", "picker", "newChildrenList", "endpointList", "lbConfig", "rawAddressList", "endpoint", "LEAF_CONFIG", "LeafLoadBalancer", "childChannelControlHelper", "connectivityState", "newEndpoint", "setup", "logging_1", "exports", "resolver_1", "uri_parser_1", "duration_1", "backoff_timeout_1", "load_balancer_1", "load_balancer_pick_first_1", "subchannel_address_1", "load_balancer_child_handler_1", "picker_1", "filter_1", "filter_stack_1", "admin_1", "subchannel_interface_1", "resolver_1", "UdsResolver", "target", "listener", "channelOptions", "path", "setup", "exports", "net_1", "constants_1", "metadata_1", "resolver_1", "uri_parser_1", "logging", "TRACER_NAME", "trace", "text", "IPV4_SCHEME", "IPV6_SCHEME", "DEFAULT_PORT", "IpResolver", "target", "listener", "channelOptions", "addresses", "pathList", "path", "hostPort", "_a", "address", "setup", "exports", "load_balancer_1", "connectivity_state_1", "picker_1", "logging", "constants_1", "subchannel_address_1", "load_balancer_pick_first_1", "TRACER_NAME", "trace", "text", "TYPE_NAME", "RoundRobinLoadBalancingConfig", "obj", "RoundRobinPicker", "children", "nextIndex", "pickArgs", "childPicker", "RoundRobinLoadBalancer", "channelControlHelper", "options", "connectivityState", "picker", "state", "child", "readyChildren", "index", "nextPickedEndpoint", "newState", "endpointList", "lbConfig", "endpoint", "exports", "setup", "connectivity_state_1", "constants_1", "duration_1", "experimental_1", "load_balancer_1", "load_balancer_child_handler_1", "picker_1", "subchannel_address_1", "subchannel_interface_1", "logging", "TRACER_NAME", "trace", "text", "TYPE_NAME", "OUTLIER_DETECTION_ENABLED", "_a", "defaultSuccessRateEjectionConfig", "defaultFailurePercentageEjectionConfig", "validateFieldType", "obj", "fieldName", "expectedType", "objectName", "fullFieldName", "validatePositiveDuration", "validatePercentage", "OutlierDetectionLoadBalancingConfig", "intervalMs", "baseEjectionTimeMs", "maxEjectionTimeMs", "maxEjectionPercent", "successRateEjection", "failurePercentageEjection", "childPolicy", "_b", "exports", "OutlierDetectionSubchannelWrapper", "childSubchannel", "mapEntry", "index", "createEmptyBucket", "CallCounter", "OutlierDetectionPicker", "wrappedPicker", "countCalls", "pickArgs", "wrappedPick", "subchannelWrapper", "onCallEnded", "statusCode", "OutlierDetectionLoadBalancer", "channelControlHelper", "options", "subchannelAddress", "subchannelArgs", "originalSubchannel", "connectivityState", "picker", "ejectionCount", "ejectionTimestamp", "successRateConfig", "targetRequestVolume", "addresesWithTargetVolume", "successRates", "endpoint", "successes", "failures", "successRateMean", "a", "b", "successRateDeviationSum", "rate", "deviation", "successRateVariance", "successRateStdev", "ejectionThreshold", "address", "successRate", "randomNumber", "failurePercentageConfig", "addressesWithTargetVolume", "delayMs", "returnTime", "endpointList", "lbConfig", "attributes", "remainingDelay", "setup", "call_credentials_1", "exports", "channel_1", "compression_algorithms_1", "connectivity_state_1", "channel_credentials_1", "client_1", "constants_1", "logging", "make_client_1", "metadata_1", "server_1", "server_credentials_1", "status_builder_1", "channelCredentials", "callCredentials", "acc", "other", "first", "additional", "closeClient", "client", "waitForClientReady", "deadline", "callback", "loadObject", "value", "options", "load", "filename", "format", "setLogger", "logger", "setLogVerbosity", "verbosity", "getClientChannel", "client_interceptors_1", "channelz_1", "admin_1", "server_interceptors_1", "experimental", "resolver_dns", "resolver_uds", "resolver_ip", "load_balancer_pick_first", "load_balancer_round_robin", "load_balancer_outlier_detection", "channelz", "require_getPluginName", "__commonJSMin", "exports", "module", "fpStackTracePattern", "fileNamePattern", "fn", "stackTraceLimit", "e", "extractPluginName", "stack", "m", "require_toCamelCase", "__commonJSMin", "exports", "module", "name", "match", "g1", "require_plugin", "__commonJSMin", "exports", "module", "getPluginName", "toCamelCase", "count", "plugin", "fn", "options", "autoName", "camelCase", "grpc_client_user_plugin_exports", "__export", "grpc_client_user_plugin_default", "__toCommonJS", "grpc", "protoLoader", "import_fastify_plugin", "import_path", "grpcClientUserService", "fp", "app", "PROTO_FILE_USER", "path", "packageDef", "grpcObj", "client", "deadline", "error", "result"]
}
