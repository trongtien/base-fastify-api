{
  "version": 3,
  "sources": ["../node_modules/real-require/src/index.js", "../node_modules/thread-stream/lib/indexes.js", "../node_modules/thread-stream/lib/wait.js", "../node_modules/thread-stream/lib/worker.js"],
  "sourcesContent": ["/* eslint-disable no-new-func, camelcase */\n/* globals __non_webpack__require__ */\n\nconst realImport = new Function('modulePath', 'return import(modulePath)')\n\nfunction realRequire(modulePath) {\n  if (typeof __non_webpack__require__ === 'function') {\n    return __non_webpack__require__(modulePath)\n  }\n\n  return require(modulePath)\n}\n\nmodule.exports = { realImport, realRequire }\n", "'use strict'\n\nconst WRITE_INDEX = 4\nconst READ_INDEX = 8\n\nmodule.exports = {\n  WRITE_INDEX,\n  READ_INDEX\n}\n", "'use strict'\n\nconst MAX_TIMEOUT = 1000\n\nfunction wait (state, index, expected, timeout, done) {\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current === expected) {\n    done(null, 'ok')\n    return\n  }\n  let prior = current\n  const check = (backoff) => {\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        prior = current\n        current = Atomics.load(state, index)\n        if (current === prior) {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        } else {\n          if (current === expected) done(null, 'ok')\n          else done(null, 'not-equal')\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\n// let waitDiffCount = 0\nfunction waitDiff (state, index, expected, timeout, done) {\n  // const id = waitDiffCount++\n  // process._rawDebug(`>>> waitDiff ${id}`)\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current !== expected) {\n    done(null, 'ok')\n    return\n  }\n  const check = (backoff) => {\n    // process._rawDebug(`${id} ${index} current ${current} expected ${expected}`)\n    // process._rawDebug('' + backoff)\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        current = Atomics.load(state, index)\n        if (current !== expected) {\n          done(null, 'ok')\n        } else {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\nmodule.exports = { wait, waitDiff }\n", "'use strict'\n\nconst { realImport, realRequire } = require('real-require')\nconst { workerData, parentPort } = require('worker_threads')\nconst { WRITE_INDEX, READ_INDEX } = require('./indexes')\nconst { waitDiff } = require('./wait')\n\nconst {\n  dataBuf,\n  filename,\n  stateBuf\n} = workerData\n\nlet destination\n\nconst state = new Int32Array(stateBuf)\nconst data = Buffer.from(dataBuf)\n\nasync function start () {\n  let worker\n  try {\n    if (filename.endsWith('.ts') || filename.endsWith('.cts')) {\n      // TODO: add support for the TSM modules loader ( https://github.com/lukeed/tsm ).\n      if (!process[Symbol.for('ts-node.register.instance')]) {\n        realRequire('ts-node/register')\n      } else if (process.env.TS_NODE_DEV) {\n        realRequire('ts-node-dev')\n      }\n      // TODO: Support ES imports once tsc, tap & ts-node provide better compatibility guarantees.\n      // Remove extra forwardslash on Windows\n      worker = realRequire(decodeURIComponent(filename.replace(process.platform === 'win32' ? 'file:///' : 'file://', '')))\n    } else {\n      worker = (await realImport(filename))\n    }\n  } catch (error) {\n    // A yarn user that tries to start a ThreadStream for an external module\n    // provides a filename pointing to a zip file.\n    // eg. require.resolve('pino-elasticsearch') // returns /foo/pino-elasticsearch-npm-6.1.0-0c03079478-6915435172.zip/bar.js\n    // The `import` will fail to try to load it.\n    // This catch block executes the `require` fallback to load the module correctly.\n    // In fact, yarn modifies the `require` function to manage the zipped path.\n    // More details at https://github.com/pinojs/pino/pull/1113\n    // The error codes may change based on the node.js version (ENOTDIR > 12, ERR_MODULE_NOT_FOUND <= 12 )\n    if ((error.code === 'ENOTDIR' || error.code === 'ERR_MODULE_NOT_FOUND') &&\n     filename.startsWith('file://')) {\n      worker = realRequire(decodeURIComponent(filename.replace('file://', '')))\n    } else if (error.code === undefined || error.code === 'ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING') {\n      // When bundled with pkg, an undefined error is thrown when called with realImport\n      // When bundled with pkg and using node v20, an ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING error is thrown when called with realImport\n      // More info at: https://github.com/pinojs/thread-stream/issues/143\n      try {\n        worker = realRequire(decodeURIComponent(filename.replace(process.platform === 'win32' ? 'file:///' : 'file://', '')))\n      } catch {\n        throw error\n      }\n    } else {\n      throw error\n    }\n  }\n\n  // Depending on how the default export is performed, and on how the code is\n  // transpiled, we may find cases of two nested \"default\" objects.\n  // See https://github.com/pinojs/pino/issues/1243#issuecomment-982774762\n  if (typeof worker === 'object') worker = worker.default\n  if (typeof worker === 'object') worker = worker.default\n\n  destination = await worker(workerData.workerData)\n\n  destination.on('error', function (err) {\n    Atomics.store(state, WRITE_INDEX, -2)\n    Atomics.notify(state, WRITE_INDEX)\n\n    Atomics.store(state, READ_INDEX, -2)\n    Atomics.notify(state, READ_INDEX)\n\n    parentPort.postMessage({\n      code: 'ERROR',\n      err\n    })\n  })\n\n  destination.on('close', function () {\n    // process._rawDebug('worker close emitted')\n    const end = Atomics.load(state, WRITE_INDEX)\n    Atomics.store(state, READ_INDEX, end)\n    Atomics.notify(state, READ_INDEX)\n    setImmediate(() => {\n      process.exit(0)\n    })\n  })\n}\n\n// No .catch() handler,\n// in case there is an error it goes\n// to unhandledRejection\nstart().then(function () {\n  parentPort.postMessage({\n    code: 'READY'\n  })\n\n  process.nextTick(run)\n})\n\nfunction run () {\n  const current = Atomics.load(state, READ_INDEX)\n  const end = Atomics.load(state, WRITE_INDEX)\n\n  // process._rawDebug(`pre state ${current} ${end}`)\n\n  if (end === current) {\n    if (end === data.length) {\n      waitDiff(state, READ_INDEX, end, Infinity, run)\n    } else {\n      waitDiff(state, WRITE_INDEX, end, Infinity, run)\n    }\n    return\n  }\n\n  // process._rawDebug(`post state ${current} ${end}`)\n\n  if (end === -1) {\n    // process._rawDebug('end')\n    destination.end()\n    return\n  }\n\n  const toWrite = data.toString('utf8', current, end)\n  // process._rawDebug('worker writing: ' + toWrite)\n\n  const res = destination.write(toWrite)\n\n  if (res) {\n    Atomics.store(state, READ_INDEX, end)\n    Atomics.notify(state, READ_INDEX)\n    setImmediate(run)\n  } else {\n    destination.once('drain', function () {\n      Atomics.store(state, READ_INDEX, end)\n      Atomics.notify(state, READ_INDEX)\n      run()\n    })\n  }\n}\n\nprocess.on('unhandledRejection', function (err) {\n  parentPort.postMessage({\n    code: 'ERROR',\n    err\n  })\n  process.exit(1)\n})\n\nprocess.on('uncaughtException', function (err) {\n  parentPort.postMessage({\n    code: 'ERROR',\n    err\n  })\n  process.exit(1)\n})\n\nprocess.once('exit', exitCode => {\n  if (exitCode !== 0) {\n    process.exit(exitCode)\n    return\n  }\n  if (destination?.writableNeedDrain && !destination?.writableEnded) {\n    parentPort.postMessage({\n      code: 'WARNING',\n      err: new Error('ThreadStream: process exited before destination stream was drained. this may indicate that the destination stream try to write to a another missing stream')\n    })\n  }\n\n  process.exit(0)\n})\n"],
  "mappings": "2EAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAGA,IAAMC,EAAa,IAAI,SAAS,aAAc,2BAA2B,EAEzE,SAASC,EAAYC,EAAY,CAC/B,OAAI,OAAO,0BAA6B,WAC/B,yBAAyBA,CAAU,EAGrC,QAAQA,CAAU,CAC3B,CAEAH,EAAO,QAAU,CAAE,WAAAC,EAAY,YAAAC,CAAY,ICb3C,IAAAE,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAKAA,EAAO,QAAU,CACf,cACA,YACF,ICRA,IAAAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAIA,SAASC,EAAMC,EAAOC,EAAOC,EAAUC,EAASC,EAAM,CACpD,IAAMC,EAAM,KAAK,IAAI,EAAIF,EACrBG,EAAU,QAAQ,KAAKN,EAAOC,CAAK,EACvC,GAAIK,IAAYJ,EAAU,CACxBE,EAAK,KAAM,IAAI,EACf,OAEF,IAAIG,EAAQD,EACNE,EAASC,GAAY,CACrB,KAAK,IAAI,EAAIJ,EACfD,EAAK,KAAM,WAAW,EAEtB,WAAW,IAAM,CACfG,EAAQD,EACRA,EAAU,QAAQ,KAAKN,EAAOC,CAAK,EAC/BK,IAAYC,EACdC,EAAMC,GAAW,IAAc,IAAcA,EAAU,CAAC,EAEpDH,IAAYJ,EAAUE,EAAK,KAAM,IAAI,EACpCA,EAAK,KAAM,WAAW,CAE/B,EAAGK,CAAO,CAEd,EACAD,EAAM,CAAC,CACT,CAGA,SAASE,EAAUV,EAAOC,EAAOC,EAAUC,EAASC,EAAM,CAGxD,IAAMC,EAAM,KAAK,IAAI,EAAIF,EACrBG,EAAU,QAAQ,KAAKN,EAAOC,CAAK,EACvC,GAAIK,IAAYJ,EAAU,CACxBE,EAAK,KAAM,IAAI,EACf,OAEF,IAAMI,EAASC,GAAY,CAGrB,KAAK,IAAI,EAAIJ,EACfD,EAAK,KAAM,WAAW,EAEtB,WAAW,IAAM,CACfE,EAAU,QAAQ,KAAKN,EAAOC,CAAK,EAC/BK,IAAYJ,EACdE,EAAK,KAAM,IAAI,EAEfI,EAAMC,GAAW,IAAc,IAAcA,EAAU,CAAC,CAE5D,EAAGA,CAAO,CAEd,EACAD,EAAM,CAAC,CACT,CAEAV,EAAO,QAAU,CAAE,KAAAC,EAAM,SAAAW,CAAS,IC1DlC,GAAM,CAAE,WAAAC,EAAY,YAAAC,CAAY,EAAI,IAC9B,CAAE,WAAAC,EAAY,WAAAC,CAAW,EAAI,QAAQ,gBAAgB,EACrD,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAI,IAC9B,CAAE,SAAAC,CAAS,EAAI,IAEf,CACJ,QAAAC,EACA,SAAAC,EACA,SAAAC,CACF,EAAIP,EAEAQ,EAEEC,EAAQ,IAAI,WAAWF,CAAQ,EAC/BG,EAAO,OAAO,KAAKL,CAAO,EAEhC,eAAeM,GAAS,CACtB,IAAIC,EACJ,GAAI,CACEN,EAAS,SAAS,KAAK,GAAKA,EAAS,SAAS,MAAM,GAEjD,QAAQ,OAAO,IAAI,2BAA2B,CAAC,EAEzC,QAAQ,IAAI,aACrBP,EAAY,aAAa,EAFzBA,EAAY,kBAAkB,EAMhCa,EAASb,EAAY,mBAAmBO,EAAS,QAAQ,QAAQ,WAAa,QAAU,WAAa,UAAW,EAAE,CAAC,CAAC,GAEpHM,EAAU,MAAMd,EAAWQ,CAAQ,CAEvC,OAASO,EAAP,CASA,IAAKA,EAAM,OAAS,WAAaA,EAAM,OAAS,yBAC/CP,EAAS,WAAW,SAAS,EAC5BM,EAASb,EAAY,mBAAmBO,EAAS,QAAQ,UAAW,EAAE,CAAC,CAAC,UAC/DO,EAAM,OAAS,QAAaA,EAAM,OAAS,yCAIpD,GAAI,CACFD,EAASb,EAAY,mBAAmBO,EAAS,QAAQ,QAAQ,WAAa,QAAU,WAAa,UAAW,EAAE,CAAC,CAAC,CACtH,MAAE,CACA,MAAMO,CACR,KAEA,OAAMA,CAEV,CAKI,OAAOD,GAAW,WAAUA,EAASA,EAAO,SAC5C,OAAOA,GAAW,WAAUA,EAASA,EAAO,SAEhDJ,EAAc,MAAMI,EAAOZ,EAAW,UAAU,EAEhDQ,EAAY,GAAG,QAAS,SAAUM,EAAK,CACrC,QAAQ,MAAML,EAAOP,EAAa,EAAE,EACpC,QAAQ,OAAOO,EAAOP,CAAW,EAEjC,QAAQ,MAAMO,EAAON,EAAY,EAAE,EACnC,QAAQ,OAAOM,EAAON,CAAU,EAEhCF,EAAW,YAAY,CACrB,KAAM,QACN,IAAAa,CACF,CAAC,CACH,CAAC,EAEDN,EAAY,GAAG,QAAS,UAAY,CAElC,IAAMO,EAAM,QAAQ,KAAKN,EAAOP,CAAW,EAC3C,QAAQ,MAAMO,EAAON,EAAYY,CAAG,EACpC,QAAQ,OAAON,EAAON,CAAU,EAChC,aAAa,IAAM,CACjB,QAAQ,KAAK,CAAC,CAChB,CAAC,CACH,CAAC,CACH,CAKAQ,EAAM,EAAE,KAAK,UAAY,CACvBV,EAAW,YAAY,CACrB,KAAM,OACR,CAAC,EAED,QAAQ,SAASe,CAAG,CACtB,CAAC,EAED,SAASA,GAAO,CACd,IAAMC,EAAU,QAAQ,KAAKR,EAAON,CAAU,EACxCY,EAAM,QAAQ,KAAKN,EAAOP,CAAW,EAI3C,GAAIa,IAAQE,EAAS,CACfF,IAAQL,EAAK,OACfN,EAASK,EAAON,EAAYY,EAAK,IAAUC,CAAG,EAE9CZ,EAASK,EAAOP,EAAaa,EAAK,IAAUC,CAAG,EAEjD,OAKF,GAAID,IAAQ,GAAI,CAEdP,EAAY,IAAI,EAChB,OAGF,IAAMU,EAAUR,EAAK,SAAS,OAAQO,EAASF,CAAG,EAGtCP,EAAY,MAAMU,CAAO,GAGnC,QAAQ,MAAMT,EAAON,EAAYY,CAAG,EACpC,QAAQ,OAAON,EAAON,CAAU,EAChC,aAAaa,CAAG,GAEhBR,EAAY,KAAK,QAAS,UAAY,CACpC,QAAQ,MAAMC,EAAON,EAAYY,CAAG,EACpC,QAAQ,OAAON,EAAON,CAAU,EAChCa,EAAI,CACN,CAAC,CAEL,CAEA,QAAQ,GAAG,qBAAsB,SAAUF,EAAK,CAC9Cb,EAAW,YAAY,CACrB,KAAM,QACN,IAAAa,CACF,CAAC,EACD,QAAQ,KAAK,CAAC,CAChB,CAAC,EAED,QAAQ,GAAG,oBAAqB,SAAUA,EAAK,CAC7Cb,EAAW,YAAY,CACrB,KAAM,QACN,IAAAa,CACF,CAAC,EACD,QAAQ,KAAK,CAAC,CAChB,CAAC,EAED,QAAQ,KAAK,OAAQK,GAAY,CAC/B,GAAIA,IAAa,EAAG,CAClB,QAAQ,KAAKA,CAAQ,EACrB,OAEEX,GAAa,mBAAqB,CAACA,GAAa,eAClDP,EAAW,YAAY,CACrB,KAAM,UACN,IAAK,IAAI,MAAM,4JAA4J,CAC7K,CAAC,EAGH,QAAQ,KAAK,CAAC,CAChB,CAAC",
  "names": ["require_src", "__commonJSMin", "exports", "module", "realImport", "realRequire", "modulePath", "require_indexes", "__commonJSMin", "exports", "module", "require_wait", "__commonJSMin", "exports", "module", "wait", "state", "index", "expected", "timeout", "done", "max", "current", "prior", "check", "backoff", "waitDiff", "realImport", "realRequire", "workerData", "parentPort", "WRITE_INDEX", "READ_INDEX", "waitDiff", "dataBuf", "filename", "stateBuf", "destination", "state", "data", "start", "worker", "error", "err", "end", "run", "current", "toWrite", "exitCode"]
}
